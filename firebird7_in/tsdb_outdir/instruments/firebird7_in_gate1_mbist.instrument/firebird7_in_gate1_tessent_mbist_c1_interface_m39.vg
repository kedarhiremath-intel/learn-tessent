/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP5-1
// Date      : Sun Nov  5 08:48:13 2023
/////////////////////////////////////////////////////////////



    module firebird7_in_gate1_tessent_mbist_c1_interface_m39_RowRedundancyAnalysis ( 
        RepairedBySpareColumn, RepairableBySpareColumn, PriorityColumn, 
        BIST_BIRA_EN, CLEAR, BIST_HOLD, BIST_SHIFT, ErrorGlobal, BIST_CLK, 
        FROM_BISR_ALL_SROW0_FUSE_ADD_REG, FROM_BISR_ALL_SROW0_ALLOC_REG, 
        FROM_BISR_ALL_SROW1_FUSE_ADD_REG, FROM_BISR_ALL_SROW1_ALLOC_REG, LV_TM, 
        BIRA_SI, BIST_ASYNC_RESETN, BIRA_FUSE_ADD_A, BIRA_FUSE_ADD_B, 
        ALL_SROW0_FUSE_ADD_REG, ALL_SROW0_ALLOC_REG, ALL_SROW1_FUSE_ADD_REG, 
        ALL_SROW1_ALLOC_REG, BIRA_SO, RepairedBySpareRow, RepairableBySpareRow
 );
  input [6:0] FROM_BISR_ALL_SROW0_FUSE_ADD_REG;
  input [6:0] FROM_BISR_ALL_SROW1_FUSE_ADD_REG;
  input [6:0] BIRA_FUSE_ADD_A;
  input [6:0] BIRA_FUSE_ADD_B;
  output [6:0] ALL_SROW0_FUSE_ADD_REG;
  output [6:0] ALL_SROW1_FUSE_ADD_REG;
  input RepairedBySpareColumn, RepairableBySpareColumn, PriorityColumn,
         BIST_BIRA_EN, CLEAR, BIST_HOLD, BIST_SHIFT, ErrorGlobal, BIST_CLK,
         FROM_BISR_ALL_SROW0_ALLOC_REG, FROM_BISR_ALL_SROW1_ALLOC_REG, LV_TM,
         BIRA_SI, BIST_ASYNC_RESETN;
  output ALL_SROW0_ALLOC_REG, ALL_SROW1_ALLOC_REG, BIRA_SO, RepairedBySpareRow,
         RepairableBySpareRow;
  wire   ALL_SROW1_ALLOC_REG, ALL_FUSE0_PAST_ALLOC_REG,
         ALL_FUSE1_PAST_ALLOC_REG, RepairedBySpareRow_INT,
         RepairableBySpareRow_INT, n47, n48, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n1, n2,
         n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75,
         n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89,
         n90, n91, n92, n93, n94, n95, n96, n97, n98, n99,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20;
  assign BIRA_SO = ALL_SROW1_ALLOC_REG;

  i0sfag003ab1d02x5 ALL_FUSE0_PAST_ALLOC_REG_reg ( .si(n48), .d(n142), .ssb(
        n47), .clk(BIST_CLK), .rb(n3), .o(ALL_FUSE0_PAST_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_1) );
  i0sfag003ab1d02x5 ALL_FUSE1_PAST_ALLOC_REG_reg ( .si(n48), .d(n141), .ssb(
        n47), .clk(BIST_CLK), .rb(n3), .o(ALL_FUSE1_PAST_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfag003ab1d02x5 RepairedBySpareRow_R_reg ( .si(n48), .d(
        RepairedBySpareRow_INT), .ssb(n47), .clk(BIST_CLK), .rb(n3), .o(
        RepairedBySpareRow), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_0 ( .si(n48), .d(n97), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_FUSE_ADD_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_1 ( .si(n48), .d(n140), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_2 ( .si(n48), .d(n139), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_3 ( .si(n48), .d(n138), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_4 ( .si(n48), .d(n137), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_5 ( .si(n48), .d(n136), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[5]), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfag003ab1d02x5 ALL_FUSE0_ADD_REG_reg_6 ( .si(n48), .d(n135), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_FUSE_ADD_REG[6]), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfag003ab1d02x5 ALL_FUSE0_ALLOC_REG_reg ( .si(n48), .d(n98), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW0_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_0 ( .si(n48), .d(n134), .ssb(n47), 
        .clk(BIST_CLK), .rb(n4), .o(ALL_SROW1_FUSE_ADD_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_1 ( .si(n48), .d(n133), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_2 ( .si(n48), .d(n132), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_3 ( .si(n48), .d(n131), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_4 ( .si(n48), .d(n130), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_5 ( .si(n48), .d(n129), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[5]), .so(
        SYNOPSYS_UNCONNECTED_17) );
  i0sfag003ab1d02x5 ALL_FUSE1_ADD_REG_reg_6 ( .si(n48), .d(n128), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[6]), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfag003ab1d02x5 ALL_FUSE1_ALLOC_REG_reg ( .si(n48), .d(n99), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_19) );
  i0sfag003ab1d03x5 RepairableBySpareRow_R_reg ( .si(n48), .d(
        RepairableBySpareRow_INT), .ssb(n47), .clk(BIST_CLK), .rb(n3), .o(
        RepairableBySpareRow), .so(SYNOPSYS_UNCONNECTED_20) );
  i0sinv000pb1n09x5 U3 ( .a(n39), .o1(n41) );
  i0saoi122ab1n03x5 U4 ( .b(ALL_FUSE0_PAST_ALLOC_REG), .c(n96), .d(
        ALL_FUSE1_PAST_ALLOC_REG), .e(n95), .a(n94), .o1(
        RepairableBySpareRow_INT) );
  i0sinv000pb1n09x5 U5 ( .a(n21), .o1(n34) );
  i0snona32ab1d24x5 U6 ( .b(BIST_HOLD), .c(n1), .d(LV_TM), .a(CLEAR), .out0(n9) );
  i0snona22ab1n12x5 U7 ( .b(n1), .c(n84), .a(n6), .out0(n89) );
  i0snorp03ab1n02x5 U8 ( .a(n14), .b(RepairedBySpareRow), .c(
        RepairedBySpareColumn), .o1(n18) );
  i0sinv040ab1n09x5 U9 ( .a(n9), .o1(n84) );
  i0sinv000ab1n06x5 U10 ( .a(n2), .o1(n1) );
  i0sinv020tb1n02x5 U11 ( .a(n91), .o1(n95) );
  i0sorn008ab1n03x5 U12 ( .a(n50), .b(n49), .c(n46), .d(n45), .e(n44), .f(n43), 
        .g(n93), .h(n42), .o(n90) );
  i0sinv000tb1n02x5 U13 ( .a(ALL_FUSE1_PAST_ALLOC_REG), .o1(n38) );
  i0sinv000tb1n02x5 U14 ( .a(ALL_FUSE0_PAST_ALLOC_REG), .o1(n8) );
  i0sinv000tb1n02x5 U15 ( .a(ErrorGlobal), .o1(n14) );
  i0smdn022ab1n02x5 U16 ( .b(n38), .a(n37), .sa(n84), .o1(n141) );
  i0smdn022ab1n02x5 U17 ( .b(n8), .a(n7), .sa(n84), .o1(n142) );
  i0saoi022ab1n02x7 U18 ( .a(FROM_BISR_ALL_SROW0_ALLOC_REG), .b(n84), .c(n1), 
        .d(ALL_SROW0_FUSE_ADD_REG[6]), .o1(n12) );
  i0saoi022ab1n02x7 U19 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[6]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[5]), .d(n1), .o1(n35) );
  i0sinv030tb1n02x5 U20 ( .a(BIST_SHIFT), .o1(n2) );
  i0sinv040ab1n03x5 U21 ( .a(n57), .o1(n92) );
  i0snand43ab1n02x5 U22 ( .a(n18), .b(n17), .c(n16), .o1(n21) );
  i0sbfn000pb1n18x5 U23 ( .a(n86), .o(n6) );
  i0sinv040ab1n03x5 U24 ( .a(n90), .o1(n96) );
  i0snanb02ab1n02x5 U25 ( .a(n1), .b(BIST_BIRA_EN), .out0(n10) );
  i0snanp02ab1n02x5 U26 ( .a(PriorityColumn), .b(RepairableBySpareColumn), 
        .o1(n17) );
  i0soai122ab1n02x5 U27 ( .b(n89), .c(n33), .d(n53), .e(n6), .a(n32), .o1(n129) );
  i0saoi022ab1n02x5 U28 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[5]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[4]), .d(n1), .o1(n32) );
  i0soai122ab1n02x5 U29 ( .b(n89), .c(n31), .d(n51), .e(n6), .a(n30), .o1(n130) );
  i0saoi022ab1n02x5 U30 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[4]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[3]), .d(n1), .o1(n30) );
  i0soai122ab1n02x5 U31 ( .b(n89), .c(n29), .d(n58), .e(n6), .a(n28), .o1(n131) );
  i0saoi022ab1n02x5 U32 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[3]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[2]), .d(n1), .o1(n28) );
  i0soai122ab1n02x5 U33 ( .b(n89), .c(n27), .d(n56), .e(n6), .a(n26), .o1(n132) );
  i0saoi022ab1n02x5 U34 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[2]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[1]), .d(n1), .o1(n26) );
  i0soai122ab1n02x5 U35 ( .b(n89), .c(n25), .d(n55), .e(n6), .a(n24), .o1(n133) );
  i0saoi022ab1n02x5 U36 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[1]), .b(n84), 
        .c(ALL_SROW1_FUSE_ADD_REG[0]), .d(n1), .o1(n24) );
  i0soai122ab1n02x5 U37 ( .b(n89), .c(n23), .d(n54), .e(n6), .a(n22), .o1(n134) );
  i0saoi022ab1n02x5 U38 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[0]), .b(n84), 
        .c(n1), .d(ALL_SROW0_ALLOC_REG), .o1(n22) );
  i0soai122ab1n02x5 U39 ( .b(n89), .c(n88), .d(n87), .e(n6), .a(n85), .o1(n135) );
  i0saoi022ab1n02x5 U40 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[6]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[5]), .d(n1), .o1(n85) );
  i0soai122ab1n02x5 U41 ( .b(n89), .c(n83), .d(n82), .e(n6), .a(n81), .o1(n136) );
  i0saoi022ab1n02x5 U42 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[5]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[4]), .d(n1), .o1(n81) );
  i0soai122ab1n02x5 U43 ( .b(n89), .c(n80), .d(n79), .e(n6), .a(n78), .o1(n137) );
  i0saoi022ab1n02x5 U44 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[4]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[3]), .d(n1), .o1(n78) );
  i0soai122ab1n02x5 U45 ( .b(n89), .c(n77), .d(n76), .e(n6), .a(n75), .o1(n138) );
  i0saoi022ab1n02x5 U46 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[3]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[2]), .d(n1), .o1(n75) );
  i0soai122ab1n02x5 U47 ( .b(n89), .c(n74), .d(n73), .e(n6), .a(n72), .o1(n139) );
  i0saoi022ab1n02x5 U48 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[2]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[1]), .d(n1), .o1(n72) );
  i0soai122ab1n02x5 U49 ( .b(n89), .c(n71), .d(n70), .e(n6), .a(n69), .o1(n140) );
  i0saoi022ab1n02x5 U50 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[1]), .b(n84), 
        .c(ALL_SROW0_FUSE_ADD_REG[0]), .d(n1), .o1(n69) );
  i0soai122ab1n02x5 U51 ( .b(n89), .c(n68), .d(n67), .e(n6), .a(n66), .o1(n97)
         );
  i0saoi022ab1n02x5 U52 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[0]), .b(n84), 
        .c(BIRA_SI), .d(n1), .o1(n66) );
  i0saoi022ab1n02x5 U53 ( .a(FROM_BISR_ALL_SROW1_ALLOC_REG), .b(n84), .c(
        ALL_SROW1_FUSE_ADD_REG[6]), .d(n1), .o1(n19) );
  i0snanb02ab1n02x5 U54 ( .a(n6), .b(n57), .out0(n20) );
  i0snanb02ab1n02x5 U55 ( .a(n6), .b(n40), .out0(n13) );
  i0snorp02ab1n02x5 U56 ( .a(n93), .b(n92), .o1(n94) );
  i0snor042ab1n03x5 U57 ( .a(n15), .b(ALL_SROW1_ALLOC_REG), .o1(n16) );
  i0sinv000ab1n02x5 U58 ( .a(RepairedBySpareColumn), .o1(n11) );
  i0sxnr002ab1n03x5 U59 ( .a(BIRA_FUSE_ADD_A[6]), .b(n87), .out0(n49) );
  i0sxnr002ab1n03x5 U60 ( .a(BIRA_FUSE_ADD_A[4]), .b(n79), .out0(n50) );
  i0sxnr002ab1n03x5 U61 ( .a(BIRA_FUSE_ADD_A[5]), .b(n82), .out0(n45) );
  i0sxnr002ab1n03x5 U62 ( .a(BIRA_FUSE_ADD_A[3]), .b(n58), .out0(n59) );
  i0soai022ab1n02x5 U63 ( .a(ALL_FUSE0_PAST_ALLOC_REG), .b(n90), .c(
        ALL_FUSE1_PAST_ALLOC_REG), .d(n91), .o1(RepairedBySpareRow_INT) );
  i0sxnr002ab1n03x5 U64 ( .a(BIRA_FUSE_ADD_A[0]), .b(n67), .out0(n42) );
  i0sinv000tb1n03x5 U65 ( .a(n5), .o1(n3) );
  i0sinv000tb1n03x5 U66 ( .a(n5), .o1(n4) );
  i0sinv000tb1n03x5 U67 ( .a(BIST_ASYNC_RESETN), .o1(n5) );
  i0sinv000tb1n02x5 U68 ( .a(n40), .o1(n93) );
  i0sinv000tb1n02x5 U69 ( .a(ALL_SROW0_FUSE_ADD_REG[6]), .o1(n88) );
  i0sinv000tb1n02x5 U70 ( .a(ALL_SROW0_FUSE_ADD_REG[5]), .o1(n83) );
  i0sinv000tb1n02x5 U71 ( .a(ALL_SROW0_FUSE_ADD_REG[4]), .o1(n80) );
  i0sinv000tb1n02x5 U72 ( .a(ALL_SROW0_FUSE_ADD_REG[3]), .o1(n77) );
  i0sinv000tb1n02x5 U73 ( .a(ALL_SROW0_FUSE_ADD_REG[2]), .o1(n74) );
  i0sinv000tb1n02x5 U74 ( .a(ALL_SROW0_FUSE_ADD_REG[1]), .o1(n71) );
  i0sinv000tb1n02x5 U75 ( .a(ALL_SROW0_FUSE_ADD_REG[0]), .o1(n68) );
  i0soai122ab1n03x5 U76 ( .b(n89), .c(n36), .d(n52), .e(n6), .a(n35), .o1(n128) );
  i0sinv000tb1n02x5 U77 ( .a(ALL_SROW1_FUSE_ADD_REG[6]), .o1(n36) );
  i0sinv000tb1n02x5 U78 ( .a(ALL_SROW1_FUSE_ADD_REG[5]), .o1(n33) );
  i0sinv000tb1n02x5 U79 ( .a(ALL_SROW1_FUSE_ADD_REG[4]), .o1(n31) );
  i0sinv000tb1n02x5 U80 ( .a(ALL_SROW1_FUSE_ADD_REG[3]), .o1(n29) );
  i0sinv000tb1n02x5 U81 ( .a(ALL_SROW1_FUSE_ADD_REG[2]), .o1(n27) );
  i0sinv000tb1n02x5 U82 ( .a(ALL_SROW1_FUSE_ADD_REG[1]), .o1(n25) );
  i0sinv000tb1n02x5 U83 ( .a(ALL_SROW1_FUSE_ADD_REG[0]), .o1(n23) );
  i0sinv000tb1n03x5 U84 ( .a(FROM_BISR_ALL_SROW1_ALLOC_REG), .o1(n37) );
  i0sinv000tb1n03x5 U85 ( .a(FROM_BISR_ALL_SROW0_ALLOC_REG), .o1(n7) );
  i0sxnr002ab1n03x5 U86 ( .a(BIRA_FUSE_ADD_A[1]), .b(n70), .out0(n43) );
  i0sxnr002ab1n03x5 U87 ( .a(BIRA_FUSE_ADD_A[3]), .b(n76), .out0(n44) );
  i0sxnr002ab1n03x5 U88 ( .a(BIRA_FUSE_ADD_A[2]), .b(n73), .out0(n46) );
  i0sorn008ab1n02x7 U89 ( .a(n65), .b(n64), .c(n63), .d(n62), .e(n61), .f(n60), 
        .g(n92), .h(n59), .o(n91) );
  i0sxnr002ab1n03x5 U90 ( .a(BIRA_FUSE_ADD_A[6]), .b(n52), .out0(n64) );
  i0sxnr002ab1n03x5 U91 ( .a(BIRA_FUSE_ADD_A[4]), .b(n51), .out0(n65) );
  i0sxnr002ab1n03x5 U92 ( .a(BIRA_FUSE_ADD_A[0]), .b(n54), .out0(n62) );
  i0sxnr002ab1n03x5 U93 ( .a(BIRA_FUSE_ADD_A[2]), .b(n56), .out0(n60) );
  i0sxnr002ab1n03x5 U94 ( .a(BIRA_FUSE_ADD_A[1]), .b(n55), .out0(n61) );
  i0sxnr002ab1n03x5 U95 ( .a(BIRA_FUSE_ADD_A[5]), .b(n53), .out0(n63) );
  i0stihi00ab1n02x5 U96 ( .o(n47) );
  i0stilo00ab1n02x5 U97 ( .o(n48) );
  i0snona22ab1n06x5 U98 ( .b(BIST_HOLD), .c(n10), .a(n9), .out0(n86) );
  i0sinv030ab1n04x5 U99 ( .a(ALL_SROW0_ALLOC_REG), .o1(n15) );
  i0snona24ab1n03x5 U100 ( .d(n14), .e(RepairedBySpareRow), .a(n11), .b(n17), 
        .c(n15), .out0(n39) );
  i0snanb02ab1n03x5 U101 ( .a(ALL_SROW0_ALLOC_REG), .b(n39), .out0(n40) );
  i0soabi13ab1n03x5 U102 ( .c(ALL_SROW0_ALLOC_REG), .d(n89), .a(n13), .b(n12), 
        .o1(n98) );
  i0snanb02ab1n03x5 U103 ( .a(ALL_SROW1_ALLOC_REG), .b(n21), .out0(n57) );
  i0soabi13ab1n03x5 U104 ( .c(ALL_SROW1_ALLOC_REG), .d(n89), .a(n20), .b(n19), 
        .o1(n99) );
  i0smdn022ab1n03x4 U105 ( .b(ALL_SROW1_FUSE_ADD_REG[0]), .a(
        BIRA_FUSE_ADD_B[0]), .sa(n34), .o1(n54) );
  i0smdn022ab1n03x4 U106 ( .b(ALL_SROW1_FUSE_ADD_REG[1]), .a(
        BIRA_FUSE_ADD_B[1]), .sa(n34), .o1(n55) );
  i0smdn022ab1n03x4 U107 ( .b(ALL_SROW1_FUSE_ADD_REG[2]), .a(
        BIRA_FUSE_ADD_B[2]), .sa(n34), .o1(n56) );
  i0smdn022ab1n03x4 U108 ( .b(ALL_SROW1_FUSE_ADD_REG[3]), .a(
        BIRA_FUSE_ADD_B[3]), .sa(n34), .o1(n58) );
  i0smdn022ab1n03x4 U109 ( .b(ALL_SROW1_FUSE_ADD_REG[4]), .a(
        BIRA_FUSE_ADD_B[4]), .sa(n34), .o1(n51) );
  i0smdn022ab1n03x4 U110 ( .b(ALL_SROW1_FUSE_ADD_REG[5]), .a(
        BIRA_FUSE_ADD_B[5]), .sa(n34), .o1(n53) );
  i0smdn022ab1n03x4 U111 ( .b(ALL_SROW1_FUSE_ADD_REG[6]), .a(
        BIRA_FUSE_ADD_B[6]), .sa(n34), .o1(n52) );
  i0smdn022ab1n03x4 U112 ( .b(ALL_SROW0_FUSE_ADD_REG[4]), .a(
        BIRA_FUSE_ADD_B[4]), .sa(n41), .o1(n79) );
  i0smdn022ab1n03x4 U113 ( .b(ALL_SROW0_FUSE_ADD_REG[6]), .a(
        BIRA_FUSE_ADD_B[6]), .sa(n41), .o1(n87) );
  i0smdn022ab1n03x4 U114 ( .b(ALL_SROW0_FUSE_ADD_REG[2]), .a(
        BIRA_FUSE_ADD_B[2]), .sa(n41), .o1(n73) );
  i0smdn022ab1n03x4 U115 ( .b(ALL_SROW0_FUSE_ADD_REG[5]), .a(
        BIRA_FUSE_ADD_B[5]), .sa(n41), .o1(n82) );
  i0smdn022ab1n03x4 U116 ( .b(ALL_SROW0_FUSE_ADD_REG[3]), .a(
        BIRA_FUSE_ADD_B[3]), .sa(n41), .o1(n76) );
  i0smdn022ab1n03x4 U117 ( .b(ALL_SROW0_FUSE_ADD_REG[1]), .a(
        BIRA_FUSE_ADD_B[1]), .sa(n41), .o1(n70) );
  i0smdn022ab1n03x4 U118 ( .b(ALL_SROW0_FUSE_ADD_REG[0]), .a(
        BIRA_FUSE_ADD_B[0]), .sa(n41), .o1(n67) );
endmodule



    module firebird7_in_gate1_tessent_mbist_c1_interface_m39_ColumnRedundancyAnalysis ( 
        BIST_CLK, BIST_ASYNC_RESETN, BIST_HOLD, BIST_SHIFT, MultiBitError_R, 
        IOIndex0, CLEAR, BIST_BIRA_EN, RepairedBySpareRow, 
        RepairableBySpareRow, PriorityColumn, FROM_BISR_All_SCOL0_FUSE_REG, 
        FROM_BISR_All_SCOL0_ALLOC_REG, ERROR, LV_TM, BIRA_SI, 
        All_SCOL0_FUSE_REG, All_SCOL0_ALLOC_REG, BIRA_SO, ErrorGlobal, 
        RepairedBySpareColumn, RepairableBySpareColumn );
  input [0:0] MultiBitError_R;
  input [4:0] IOIndex0;
  input [4:0] FROM_BISR_All_SCOL0_FUSE_REG;
  input [0:0] ERROR;
  output [4:0] All_SCOL0_FUSE_REG;
  input BIST_CLK, BIST_ASYNC_RESETN, BIST_HOLD, BIST_SHIFT, CLEAR,
         BIST_BIRA_EN, RepairedBySpareRow, RepairableBySpareRow,
         PriorityColumn, FROM_BISR_All_SCOL0_ALLOC_REG, LV_TM, BIRA_SI;
  output All_SCOL0_ALLOC_REG, BIRA_SO, ErrorGlobal, RepairedBySpareColumn,
         RepairableBySpareColumn;
  wire   ERROR_0_, All_SCOL0_ALLOC_REG, All_FUSE0_PAST_ALLOC_REG,
         IOIndex0_R0_4_, IOIndex0_R0_3_, IOIndex0_R0_2_, IOIndex0_R0_1_,
         IOIndex0_R0_0_, N27, N28, N29, N30, N31, IO_RANGE0_FUSE0_ERROR_MATCH,
         IO_RANGE0_ERROR_MATCH_R, IO_RANGE0_SPARES_AVAILABLE,
         IO_RANGE0_SPARES_AVAILABLE_R, n310, n32, n67, n68, n69, n70, n1, n2,
         n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n270, n280, n290, n300,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14;
  assign ERROR_0_ = ERROR[0];
  assign ErrorGlobal = ERROR_0_;
  assign BIRA_SO = All_SCOL0_ALLOC_REG;

  i0sfag003ab1d02x5 All_FUSE0_PAST_ALLOC_REG_reg ( .si(n32), .d(n42), .ssb(
        n310), .clk(BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(
        All_FUSE0_PAST_ALLOC_REG), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfag003ab1d02x5 IOIndex0_R0_reg_4 ( .si(n32), .d(N31), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(IOIndex0_R0_4_), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfag003ab1d02x5 IOIndex0_R0_reg_3 ( .si(n32), .d(N30), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(IOIndex0_R0_3_), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfag003ab1d02x5 IOIndex0_R0_reg_2 ( .si(n32), .d(N29), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(IOIndex0_R0_2_), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfag003ab1d02x5 IOIndex0_R0_reg_1 ( .si(n32), .d(N28), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(IOIndex0_R0_1_), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfag003ab1d02x5 IOIndex0_R0_reg_0 ( .si(n32), .d(N27), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(IOIndex0_R0_0_), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfag003ab1d02x5 IO_RANGE0_SPARES_AVAILABLE_R_reg ( .si(n32), .d(
        IO_RANGE0_SPARES_AVAILABLE), .ssb(n310), .clk(BIST_CLK), .rb(
        BIST_ASYNC_RESETN), .o(IO_RANGE0_SPARES_AVAILABLE_R), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfag003ab1d02x5 All_FUSE0_REG_reg_0 ( .si(n32), .d(n41), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_FUSE_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfag003ab1d02x5 All_FUSE0_REG_reg_1 ( .si(n32), .d(n70), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_FUSE_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfag003ab1d02x5 All_FUSE0_REG_reg_2 ( .si(n32), .d(n69), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_FUSE_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfag003ab1d02x5 All_FUSE0_REG_reg_3 ( .si(n32), .d(n68), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_FUSE_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfag003ab1d02x5 All_FUSE0_REG_reg_4 ( .si(n32), .d(n67), .ssb(n310), .clk(
        BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_FUSE_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfag003ab1d02x5 All_FUSE0_ALLOC_REG_reg ( .si(n32), .d(n40), .ssb(n310), 
        .clk(BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfag003ab1d02x5 IO_RANGE0_ERROR_MATCH_R_reg ( .si(n32), .d(
        IO_RANGE0_FUSE0_ERROR_MATCH), .ssb(n310), .clk(BIST_CLK), .rb(
        BIST_ASYNC_RESETN), .o(IO_RANGE0_ERROR_MATCH_R), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0snor043ab1n04x5 U3 ( .a(BIST_SHIFT), .b(n22), .c(n2), .o1(n1) );
  i0sinv030tb1n02x5 U4 ( .a(RepairedBySpareColumn), .o1(n39) );
  i0snanb02ab1n02x5 U5 ( .a(BIST_SHIFT), .b(BIST_BIRA_EN), .out0(n6) );
  i0sinv030tb1n02x5 U6 ( .a(IO_RANGE0_SPARES_AVAILABLE_R), .o1(n38) );
  i0snona22ab1n02x5 U7 ( .b(BIST_HOLD), .c(n6), .a(n5), .out0(n9) );
  i0soai012ab1n02x5 U8 ( .b(MultiBitError_R[0]), .c(n7), .a(
        RepairableBySpareRow), .o1(n8) );
  i0sinv000tb1n03x5 U9 ( .a(n9), .o1(n2) );
  i0sinv000ab1n02x5 U10 ( .a(n33), .o1(n20) );
  i0sinv000ab1n02x5 U11 ( .a(n270), .o1(n18) );
  i0sinv000ab1n02x5 U12 ( .a(n280), .o1(n17) );
  i0sinv000ab1n02x5 U13 ( .a(n300), .o1(n16) );
  i0sinv000ab1n02x5 U14 ( .a(n24), .o1(n15) );
  i0snorp02ab1n02x5 U15 ( .a(n22), .b(n13), .o1(N27) );
  i0sinv000ab1n02x5 U16 ( .a(IOIndex0[0]), .o1(n13) );
  i0snorp02ab1n02x5 U17 ( .a(n22), .b(n12), .o1(N28) );
  i0sinv000ab1n02x5 U18 ( .a(IOIndex0[1]), .o1(n12) );
  i0snorp02ab1n02x5 U19 ( .a(n22), .b(n11), .o1(N29) );
  i0sinv000ab1n02x5 U20 ( .a(IOIndex0[2]), .o1(n11) );
  i0snorp02ab1n02x5 U21 ( .a(n22), .b(n4), .o1(N30) );
  i0sinv000ab1n02x5 U22 ( .a(IOIndex0[3]), .o1(n4) );
  i0snorp02ab1n02x5 U23 ( .a(n22), .b(n3), .o1(N31) );
  i0sinv000ab1n02x5 U24 ( .a(IOIndex0[4]), .o1(n3) );
  i0snanp02ab1n02x5 U25 ( .a(IO_RANGE0_SPARES_AVAILABLE_R), .b(PriorityColumn), 
        .o1(n7) );
  i0sinv040ab1n03x5 U26 ( .a(All_FUSE0_PAST_ALLOC_REG), .o1(n25) );
  i0sinv000tb1n03x5 U27 ( .a(n9), .o1(n21) );
  i0sinv020tb1n02x5 U28 ( .a(n10), .o1(IO_RANGE0_SPARES_AVAILABLE) );
  i0sinv000tb1n03x5 U29 ( .a(FROM_BISR_All_SCOL0_ALLOC_REG), .o1(n23) );
  i0saoi012ab1n03x5 U30 ( .b(n39), .c(n38), .a(MultiBitError_R[0]), .o1(
        RepairableBySpareColumn) );
  i0sxor002ab1n02x7 U31 ( .a(n300), .b(IOIndex0[1]), .out0(n34) );
  i0snor003ab1n02x5 U32 ( .a(n37), .b(n36), .c(n35), .o1(
        IO_RANGE0_FUSE0_ERROR_MATCH) );
  i0sxor002ab1n02x7 U33 ( .a(n270), .b(IOIndex0[3]), .out0(n290) );
  i0sxor002ab1n02x7 U34 ( .a(n24), .b(IOIndex0[0]), .out0(n26) );
  i0stihi00ab1n02x5 U35 ( .o(n310) );
  i0stilo00ab1n02x5 U36 ( .o(n32) );
  i0sinv040ab1n06x5 U37 ( .a(n5), .o1(n22) );
  i0snona32ab1n03x5 U38 ( .b(BIST_HOLD), .c(BIST_SHIFT), .d(LV_TM), .a(CLEAR), 
        .out0(n5) );
  i0soaib12ab1n06x5 U39 ( .c(IO_RANGE0_ERROR_MATCH_R), .b(MultiBitError_R[0]), 
        .a(ERROR_0_), .out0(RepairedBySpareColumn) );
  i0snona32ab1n03x5 U40 ( .b(RepairedBySpareRow), .c(All_SCOL0_ALLOC_REG), .d(
        RepairedBySpareColumn), .a(n8), .out0(n14) );
  i0snanb02ab1n03x5 U41 ( .a(All_SCOL0_ALLOC_REG), .b(n14), .out0(n10) );
  i0smbc004ab1n03x5 U42 ( .a(n21), .sa(n10), .b(All_SCOL0_ALLOC_REG), .sb(n1), 
        .c(BIST_SHIFT), .sc(All_SCOL0_FUSE_REG[4]), .d(
        FROM_BISR_All_SCOL0_ALLOC_REG), .sd(n22), .o(n40) );
  i0sinv030ab1n04x5 U43 ( .a(n14), .o1(n19) );
  i0smdn022ab1n03x4 U44 ( .b(All_SCOL0_FUSE_REG[0]), .a(IOIndex0_R0_0_), .sa(
        n19), .o1(n24) );
  i0smbc004ab1n03x5 U45 ( .a(n21), .sa(n15), .b(All_SCOL0_FUSE_REG[0]), .sb(n1), .c(BIRA_SI), .sc(BIST_SHIFT), .d(FROM_BISR_All_SCOL0_FUSE_REG[0]), .sd(n22), 
        .o(n41) );
  i0smdn022ab1n03x4 U46 ( .b(All_SCOL0_FUSE_REG[1]), .a(IOIndex0_R0_1_), .sa(
        n19), .o1(n300) );
  i0smbc004ab1n03x5 U47 ( .a(n21), .sa(n16), .b(All_SCOL0_FUSE_REG[1]), .sb(n1), .c(All_SCOL0_FUSE_REG[0]), .sc(BIST_SHIFT), .d(
        FROM_BISR_All_SCOL0_FUSE_REG[1]), .sd(n22), .o(n70) );
  i0smdn022ab1n03x4 U48 ( .b(All_SCOL0_FUSE_REG[2]), .a(IOIndex0_R0_2_), .sa(
        n19), .o1(n280) );
  i0smbc004ab1n03x5 U49 ( .a(n21), .sa(n17), .b(All_SCOL0_FUSE_REG[2]), .sb(n1), .c(All_SCOL0_FUSE_REG[1]), .sc(BIST_SHIFT), .d(
        FROM_BISR_All_SCOL0_FUSE_REG[2]), .sd(n22), .o(n69) );
  i0smdn022ab1n03x4 U50 ( .b(All_SCOL0_FUSE_REG[3]), .a(IOIndex0_R0_3_), .sa(
        n19), .o1(n270) );
  i0smbc004ab1n03x5 U51 ( .a(n21), .sa(n18), .b(All_SCOL0_FUSE_REG[3]), .sb(n1), .c(All_SCOL0_FUSE_REG[2]), .sc(BIST_SHIFT), .d(
        FROM_BISR_All_SCOL0_FUSE_REG[3]), .sd(n22), .o(n68) );
  i0smdn022ab1n03x4 U52 ( .b(All_SCOL0_FUSE_REG[4]), .a(IOIndex0_R0_4_), .sa(
        n19), .o1(n33) );
  i0smbc004ab1n03x5 U53 ( .a(n21), .sa(n20), .b(All_SCOL0_FUSE_REG[4]), .sb(n1), .c(All_SCOL0_FUSE_REG[3]), .sc(BIST_SHIFT), .d(
        FROM_BISR_All_SCOL0_FUSE_REG[4]), .sd(n22), .o(n67) );
  i0smdn022ab1n03x4 U54 ( .b(n25), .a(n23), .sa(n22), .o1(n42) );
  i0snanb03ab1n03x5 U55 ( .a(IO_RANGE0_SPARES_AVAILABLE), .b(n26), .c(n25), 
        .out0(n37) );
  i0sxo2na2ab1n03x5 U56 ( .c(n290), .a(n280), .b(IOIndex0[2]), .out0(n36) );
  i0sxo2na2ab1n03x5 U57 ( .c(n34), .a(n33), .b(IOIndex0[4]), .out0(n35) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_interface_m39_STATUS ( BIST_CLEAR, 
        FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID, CMP_EN, BIST_ASYNC_RESETN, 
        BIST_CLK, BIST_COLLAR_SETUP, BIST_COLLAR_HOLD, BIST_SHIFT_COLLAR, 
        BIST_ON, USE_DEFAULTS, SI, BIST_DIAG_EN, BIST_BIRA_EN, RAW_CMP_STAT, 
        MCP_BOUNDING_EN, INCLUDE_MEM_RESULTS_REG, GO_EN, ERROR, ERROR_R, 
        MultiBitError_R, ERROR_R_A, IOIndex0_R, SO, BIST_GO );
  input [31:0] RAW_CMP_STAT;
  output [0:0] ERROR;
  output [0:0] ERROR_R;
  output [0:0] MultiBitError_R;
  output [0:0] ERROR_R_A;
  output [4:0] IOIndex0_R;
  input BIST_CLEAR, FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID, CMP_EN,
         BIST_ASYNC_RESETN, BIST_CLK, BIST_COLLAR_SETUP, BIST_COLLAR_HOLD,
         BIST_SHIFT_COLLAR, BIST_ON, USE_DEFAULTS, SI, BIST_DIAG_EN,
         BIST_BIRA_EN, MCP_BOUNDING_EN, INCLUDE_MEM_RESULTS_REG;
  output GO_EN, SO, BIST_GO;
  wire   n204, CMP_EN_R, GO_ID_REG_MUX_SEL_31_, GO_ID_REG_MUX_SEL_30_,
         GO_ID_REG_MUX_SEL_29_, GO_ID_REG_MUX_SEL_28_, GO_ID_REG_MUX_SEL_27_,
         GO_ID_REG_MUX_SEL_26_, GO_ID_REG_MUX_SEL_25_, GO_ID_REG_MUX_SEL_24_,
         GO_ID_REG_MUX_SEL_23_, GO_ID_REG_MUX_SEL_22_, GO_ID_REG_MUX_SEL_21_,
         GO_ID_REG_MUX_SEL_20_, GO_ID_REG_MUX_SEL_19_, GO_ID_REG_MUX_SEL_18_,
         GO_ID_REG_MUX_SEL_17_, GO_ID_REG_MUX_SEL_16_, GO_ID_REG_MUX_SEL_15_,
         GO_ID_REG_MUX_SEL_14_, GO_ID_REG_MUX_SEL_13_, GO_ID_REG_MUX_SEL_12_,
         GO_ID_REG_MUX_SEL_11_, GO_ID_REG_MUX_SEL_10_, GO_ID_REG_MUX_SEL_9_,
         GO_ID_REG_MUX_SEL_8_, GO_ID_REG_MUX_SEL_7_, GO_ID_REG_MUX_SEL_6_,
         GO_ID_REG_MUX_SEL_5_, GO_ID_REG_MUX_SEL_4_, GO_ID_REG_MUX_SEL_3_,
         GO_ID_REG_MUX_SEL_2_, GO_ID_REG_MUX_SEL_1_, GO_ID_REG_MUX_SEL_0_,
         n_1510_net_0, GO_ID_REG_MUX_31_, GO_ID_REG_MUX_30_, GO_ID_REG_MUX_29_,
         GO_ID_REG_MUX_28_, GO_ID_REG_MUX_27_, GO_ID_REG_MUX_26_,
         GO_ID_REG_MUX_25_, GO_ID_REG_MUX_24_, GO_ID_REG_MUX_23_,
         GO_ID_REG_MUX_22_, GO_ID_REG_MUX_21_, GO_ID_REG_MUX_20_,
         GO_ID_REG_MUX_19_, GO_ID_REG_MUX_18_, GO_ID_REG_MUX_17_,
         GO_ID_REG_MUX_16_, GO_ID_REG_MUX_15_, GO_ID_REG_MUX_14_,
         GO_ID_REG_MUX_13_, GO_ID_REG_MUX_12_, GO_ID_REG_MUX_11_,
         GO_ID_REG_MUX_10_, GO_ID_REG_MUX_9_, GO_ID_REG_MUX_8_,
         GO_ID_REG_MUX_7_, GO_ID_REG_MUX_6_, GO_ID_REG_MUX_5_,
         GO_ID_REG_MUX_4_, GO_ID_REG_MUX_3_, GO_ID_REG_MUX_2_,
         GO_ID_REG_MUX_1_, GO_ID_REG_MUX_0_, n_1511_net_0, n_1512_net_0,
         n_1513_net_0, n_1514_net_0, n_1515_net_0, n_1516_net_0, n_1517_net_0,
         n_1518_net_0, n_1519_net_0, n_1520_net_0, n_1521_net_0, n_1522_net_0,
         n_1523_net_0, n_1524_net_0, n_1525_net_0, n_1526_net_0, n_1527_net_0,
         n_1528_net_0, n_1529_net_0, n_1530_net_0, n_1531_net_0, n_1532_net_0,
         n_1533_net_0, n_1534_net_0, n_1535_net_0, n_1536_net_0, n_1537_net_0,
         n_1538_net_0, n_1539_net_0, n_1540_net_0, n_1541_net_0, GO_ID_REG_31_,
         GO_ID_REG_30_, GO_ID_REG_29_, GO_ID_REG_28_, GO_ID_REG_27_,
         GO_ID_REG_26_, GO_ID_REG_25_, GO_ID_REG_24_, GO_ID_REG_23_,
         GO_ID_REG_22_, GO_ID_REG_21_, GO_ID_REG_20_, GO_ID_REG_19_,
         GO_ID_REG_18_, GO_ID_REG_17_, GO_ID_REG_16_, GO_ID_REG_15_,
         GO_ID_REG_14_, GO_ID_REG_13_, GO_ID_REG_12_, GO_ID_REG_11_,
         GO_ID_REG_10_, GO_ID_REG_9_, GO_ID_REG_8_, GO_ID_REG_7_, GO_ID_REG_6_,
         GO_ID_REG_5_, GO_ID_REG_4_, GO_ID_REG_3_, GO_ID_REG_2_, GO_ID_REG_1_,
         GO_ID_REG_0_, N44, N45, IOIndex0_4_, IOIndex0_3_, IOIndex0_2_,
         IOIndex0_1_, IOIndex0_0_, MultiBitError_R1_0_, N1166, n85, n86, n87,
         n88, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n440, n450, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101,
         n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112,
         n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123,
         n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134,
         n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145,
         n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156,
         n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n167,
         n168, n169, n170, n171, n172, n173, n174, n175, n176, n177, n178,
         n179, n180, n181, n182, n183, n184, n185, n186, n187, n188, n189,
         n190, n191, n192, n193, n194, n195, n196, n197, n198, n199, n200,
         n201, SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23, SYNOPSYS_UNCONNECTED_24,
         SYNOPSYS_UNCONNECTED_25, SYNOPSYS_UNCONNECTED_26,
         SYNOPSYS_UNCONNECTED_27, SYNOPSYS_UNCONNECTED_28,
         SYNOPSYS_UNCONNECTED_29, SYNOPSYS_UNCONNECTED_30,
         SYNOPSYS_UNCONNECTED_31, SYNOPSYS_UNCONNECTED_32,
         SYNOPSYS_UNCONNECTED_33, SYNOPSYS_UNCONNECTED_34,
         SYNOPSYS_UNCONNECTED_35, SYNOPSYS_UNCONNECTED_36,
         SYNOPSYS_UNCONNECTED_37, SYNOPSYS_UNCONNECTED_38,
         SYNOPSYS_UNCONNECTED_39, SYNOPSYS_UNCONNECTED_40,
         SYNOPSYS_UNCONNECTED_41, SYNOPSYS_UNCONNECTED_42,
         SYNOPSYS_UNCONNECTED_43;

  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG0 ( .b(
        RAW_CMP_STAT[0]), .a(n_1510_net_0), .sa(GO_ID_REG_MUX_SEL_0_), .o(
        GO_ID_REG_MUX_0_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG1 ( .b(
        RAW_CMP_STAT[1]), .a(n_1511_net_0), .sa(GO_ID_REG_MUX_SEL_1_), .o(
        GO_ID_REG_MUX_1_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG2 ( .b(
        RAW_CMP_STAT[2]), .a(n_1512_net_0), .sa(GO_ID_REG_MUX_SEL_2_), .o(
        GO_ID_REG_MUX_2_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG3 ( .b(
        RAW_CMP_STAT[3]), .a(n_1513_net_0), .sa(GO_ID_REG_MUX_SEL_3_), .o(
        GO_ID_REG_MUX_3_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG4 ( .b(
        RAW_CMP_STAT[4]), .a(n_1514_net_0), .sa(GO_ID_REG_MUX_SEL_4_), .o(
        GO_ID_REG_MUX_4_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG5 ( .b(
        RAW_CMP_STAT[5]), .a(n_1515_net_0), .sa(GO_ID_REG_MUX_SEL_5_), .o(
        GO_ID_REG_MUX_5_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG6 ( .b(
        RAW_CMP_STAT[6]), .a(n_1516_net_0), .sa(GO_ID_REG_MUX_SEL_6_), .o(
        GO_ID_REG_MUX_6_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG7 ( .b(
        RAW_CMP_STAT[7]), .a(n_1517_net_0), .sa(GO_ID_REG_MUX_SEL_7_), .o(
        GO_ID_REG_MUX_7_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG8 ( .b(
        RAW_CMP_STAT[8]), .a(n_1518_net_0), .sa(GO_ID_REG_MUX_SEL_8_), .o(
        GO_ID_REG_MUX_8_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG9 ( .b(
        RAW_CMP_STAT[9]), .a(n_1519_net_0), .sa(GO_ID_REG_MUX_SEL_9_), .o(
        GO_ID_REG_MUX_9_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG10 ( .b(
        RAW_CMP_STAT[10]), .a(n_1520_net_0), .sa(GO_ID_REG_MUX_SEL_10_), .o(
        GO_ID_REG_MUX_10_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG11 ( .b(
        RAW_CMP_STAT[11]), .a(n_1521_net_0), .sa(GO_ID_REG_MUX_SEL_11_), .o(
        GO_ID_REG_MUX_11_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG12 ( .b(
        RAW_CMP_STAT[12]), .a(n_1522_net_0), .sa(GO_ID_REG_MUX_SEL_12_), .o(
        GO_ID_REG_MUX_12_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG13 ( .b(
        RAW_CMP_STAT[13]), .a(n_1523_net_0), .sa(GO_ID_REG_MUX_SEL_13_), .o(
        GO_ID_REG_MUX_13_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG14 ( .b(
        RAW_CMP_STAT[14]), .a(n_1524_net_0), .sa(GO_ID_REG_MUX_SEL_14_), .o(
        GO_ID_REG_MUX_14_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG15 ( .b(
        RAW_CMP_STAT[15]), .a(n_1525_net_0), .sa(GO_ID_REG_MUX_SEL_15_), .o(
        GO_ID_REG_MUX_15_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG16 ( .b(
        RAW_CMP_STAT[16]), .a(n_1526_net_0), .sa(GO_ID_REG_MUX_SEL_16_), .o(
        GO_ID_REG_MUX_16_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG17 ( .b(
        RAW_CMP_STAT[17]), .a(n_1527_net_0), .sa(GO_ID_REG_MUX_SEL_17_), .o(
        GO_ID_REG_MUX_17_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG18 ( .b(
        RAW_CMP_STAT[18]), .a(n_1528_net_0), .sa(GO_ID_REG_MUX_SEL_18_), .o(
        GO_ID_REG_MUX_18_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG19 ( .b(
        RAW_CMP_STAT[19]), .a(n_1529_net_0), .sa(GO_ID_REG_MUX_SEL_19_), .o(
        GO_ID_REG_MUX_19_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG20 ( .b(
        RAW_CMP_STAT[20]), .a(n_1530_net_0), .sa(GO_ID_REG_MUX_SEL_20_), .o(
        GO_ID_REG_MUX_20_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG21 ( .b(
        RAW_CMP_STAT[21]), .a(n_1531_net_0), .sa(GO_ID_REG_MUX_SEL_21_), .o(
        GO_ID_REG_MUX_21_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG22 ( .b(
        RAW_CMP_STAT[22]), .a(n_1532_net_0), .sa(GO_ID_REG_MUX_SEL_22_), .o(
        GO_ID_REG_MUX_22_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG23 ( .b(
        RAW_CMP_STAT[23]), .a(n_1533_net_0), .sa(GO_ID_REG_MUX_SEL_23_), .o(
        GO_ID_REG_MUX_23_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG24 ( .b(
        RAW_CMP_STAT[24]), .a(n_1534_net_0), .sa(GO_ID_REG_MUX_SEL_24_), .o(
        GO_ID_REG_MUX_24_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG25 ( .b(
        RAW_CMP_STAT[25]), .a(n_1535_net_0), .sa(GO_ID_REG_MUX_SEL_25_), .o(
        GO_ID_REG_MUX_25_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG26 ( .b(
        RAW_CMP_STAT[26]), .a(n_1536_net_0), .sa(GO_ID_REG_MUX_SEL_26_), .o(
        GO_ID_REG_MUX_26_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG27 ( .b(
        RAW_CMP_STAT[27]), .a(n_1537_net_0), .sa(GO_ID_REG_MUX_SEL_27_), .o(
        GO_ID_REG_MUX_27_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG28 ( .b(
        RAW_CMP_STAT[28]), .a(n_1538_net_0), .sa(GO_ID_REG_MUX_SEL_28_), .o(
        GO_ID_REG_MUX_28_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG29 ( .b(
        RAW_CMP_STAT[29]), .a(n_1539_net_0), .sa(GO_ID_REG_MUX_SEL_29_), .o(
        GO_ID_REG_MUX_29_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG30 ( .b(
        RAW_CMP_STAT[30]), .a(n_1540_net_0), .sa(GO_ID_REG_MUX_SEL_30_), .o(
        GO_ID_REG_MUX_30_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG31 ( .b(
        RAW_CMP_STAT[31]), .a(n_1541_net_0), .sa(GO_ID_REG_MUX_SEL_31_), .o(
        GO_ID_REG_MUX_31_) );
  i0sfag003ab1d02x5 GO_EN_reg ( .si(n86), .d(n87), .ssb(n85), .clk(BIST_CLK), 
        .rb(n16), .o(GO_EN), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfag003ab1d02x5 CMP_EN_R_reg ( .si(n86), .d(n4), .ssb(n85), .clk(BIST_CLK), 
        .rb(n16), .o(CMP_EN_R), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_31 ( .si(n86), .d(GO_ID_REG_MUX_31_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_31_), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_30 ( .si(n86), .d(GO_ID_REG_MUX_30_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_30_), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_29 ( .si(n86), .d(GO_ID_REG_MUX_29_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_29_), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_28 ( .si(n86), .d(GO_ID_REG_MUX_28_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_28_), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_27 ( .si(n86), .d(GO_ID_REG_MUX_27_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_27_), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_26 ( .si(n86), .d(GO_ID_REG_MUX_26_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_26_), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_25 ( .si(n86), .d(GO_ID_REG_MUX_25_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_25_), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_24 ( .si(n86), .d(GO_ID_REG_MUX_24_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_24_), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_23 ( .si(n86), .d(GO_ID_REG_MUX_23_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_23_), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_22 ( .si(n86), .d(GO_ID_REG_MUX_22_), .ssb(
        n85), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_22_), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_21 ( .si(n86), .d(GO_ID_REG_MUX_21_), .ssb(
        n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_21_), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_20 ( .si(n86), .d(GO_ID_REG_MUX_20_), .ssb(
        n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_20_), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_19 ( .si(n86), .d(GO_ID_REG_MUX_19_), .ssb(
        n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_19_), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_18 ( .si(n86), .d(GO_ID_REG_MUX_18_), .ssb(
        n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_18_), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_17 ( .si(n86), .d(GO_ID_REG_MUX_17_), .ssb(
        n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_17_), .so(
        SYNOPSYS_UNCONNECTED_17) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_16 ( .si(n86), .d(GO_ID_REG_MUX_16_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_16_), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_15 ( .si(n86), .d(GO_ID_REG_MUX_15_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_15_), .so(
        SYNOPSYS_UNCONNECTED_19) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_13 ( .si(n86), .d(GO_ID_REG_MUX_13_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_13_), .so(
        SYNOPSYS_UNCONNECTED_20) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_12 ( .si(n86), .d(GO_ID_REG_MUX_12_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_12_), .so(
        SYNOPSYS_UNCONNECTED_21) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_11 ( .si(n86), .d(GO_ID_REG_MUX_11_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_11_), .so(
        SYNOPSYS_UNCONNECTED_22) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_10 ( .si(n86), .d(GO_ID_REG_MUX_10_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_10_), .so(
        SYNOPSYS_UNCONNECTED_23) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_9 ( .si(n86), .d(GO_ID_REG_MUX_9_), .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(GO_ID_REG_9_), .so(SYNOPSYS_UNCONNECTED_24) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_8 ( .si(n86), .d(GO_ID_REG_MUX_8_), .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(GO_ID_REG_8_), .so(SYNOPSYS_UNCONNECTED_25) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_7 ( .si(n86), .d(GO_ID_REG_MUX_7_), .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(GO_ID_REG_7_), .so(SYNOPSYS_UNCONNECTED_26) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_6 ( .si(n86), .d(GO_ID_REG_MUX_6_), .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(GO_ID_REG_6_), .so(SYNOPSYS_UNCONNECTED_27) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_5 ( .si(n86), .d(GO_ID_REG_MUX_5_), .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(GO_ID_REG_5_), .so(SYNOPSYS_UNCONNECTED_28) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_4 ( .si(n86), .d(GO_ID_REG_MUX_4_), .ssb(n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_4_), .so(SYNOPSYS_UNCONNECTED_29) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_3 ( .si(n86), .d(GO_ID_REG_MUX_3_), .ssb(n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_3_), .so(SYNOPSYS_UNCONNECTED_30) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_2 ( .si(n86), .d(GO_ID_REG_MUX_2_), .ssb(n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_2_), .so(SYNOPSYS_UNCONNECTED_31) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_1 ( .si(n86), .d(GO_ID_REG_MUX_1_), .ssb(n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_1_), .so(SYNOPSYS_UNCONNECTED_32) );
  i0sfag003ab1d02x5 GO_ID_REG_reg_0 ( .si(n86), .d(GO_ID_REG_MUX_0_), .ssb(n85), .clk(BIST_CLK), .rb(n15), .o(GO_ID_REG_0_), .so(SYNOPSYS_UNCONNECTED_33) );
  i0sfag003ab1d02x5 ERROR_R1_reg_0 ( .si(n86), .d(N44), .ssb(n85), .clk(
        BIST_CLK), .rb(n15), .o(n204), .so(SYNOPSYS_UNCONNECTED_34) );
  i0sfag003ab1d02x5 MultiBitError_R1_reg_0 ( .si(n86), .d(N1166), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(MultiBitError_R1_0_), .so(
        SYNOPSYS_UNCONNECTED_35) );
  i0sfag003ab1d02x5 MultiBitError_R2_reg_0 ( .si(n86), .d(MultiBitError_R1_0_), 
        .ssb(n85), .clk(BIST_CLK), .rb(n14), .o(MultiBitError_R[0]), .so(
        SYNOPSYS_UNCONNECTED_36) );
  i0sfag003ab1d02x5 IOIndex0_R_reg_4 ( .si(n86), .d(IOIndex0_4_), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(IOIndex0_R[4]), .so(
        SYNOPSYS_UNCONNECTED_37) );
  i0sfag003ab1d02x5 IOIndex0_R_reg_3 ( .si(n86), .d(IOIndex0_3_), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(IOIndex0_R[3]), .so(
        SYNOPSYS_UNCONNECTED_38) );
  i0sfag003ab1d02x5 IOIndex0_R_reg_2 ( .si(n86), .d(IOIndex0_2_), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(IOIndex0_R[2]), .so(
        SYNOPSYS_UNCONNECTED_39) );
  i0sfag003ab1d02x5 IOIndex0_R_reg_1 ( .si(n86), .d(IOIndex0_1_), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(IOIndex0_R[1]), .so(
        SYNOPSYS_UNCONNECTED_40) );
  i0sfag003ab1d02x5 IOIndex0_R_reg_0 ( .si(n86), .d(IOIndex0_0_), .ssb(n85), 
        .clk(BIST_CLK), .rb(n14), .o(IOIndex0_R[0]), .so(
        SYNOPSYS_UNCONNECTED_41) );
  i0sand002ab1n03x5 U90 ( .a(n88), .b(BIST_ON), .o(n87) );
  i0sfag003cb1d03x5 ERROR_R2_reg_0 ( .si(n86), .d(N45), .ssb(n85), .clk(
        BIST_CLK), .rb(n15), .o(ERROR_R_A[0]), .so(SYNOPSYS_UNCONNECTED_42) );
  i0sfag003ab1d06x5 GO_ID_REG_reg_14 ( .si(n86), .d(GO_ID_REG_MUX_14_), .ssb(
        n85), .clk(BIST_CLK), .rb(n16), .o(GO_ID_REG_14_), .so(
        SYNOPSYS_UNCONNECTED_43) );
  i0sinv020ab1n12x5 U3 ( .a(n197), .o1(n199) );
  i0sao0022ab1n03x5 U4 ( .a(GO_ID_REG_14_), .b(n21), .c(GO_ID_REG_15_), .d(
        n199), .o(n_1524_net_0) );
  i0sinv020ab1n08x5 U5 ( .a(n23), .o1(n21) );
  i0sinv040ab1n09x5 U6 ( .a(n195), .o1(n201) );
  i0snona24ab1n09x5 U7 ( .d(MCP_BOUNDING_EN), .e(n26), .a(n194), .b(GO_EN), 
        .c(n4), .out0(n195) );
  i0sinv040ab1n03x5 U8 ( .a(n200), .o1(n23) );
  i0sao0022ab1n03x5 U9 ( .a(GO_ID_REG_19_), .b(n20), .c(GO_ID_REG_20_), .d(
        n199), .o(n_1529_net_0) );
  i0saob012ab1n02x5 U10 ( .b(GO_ID_REG_19_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_19_) );
  i0snano32ab1n02x5 U11 ( .b(n125), .c(n112), .d(n109), .a(n95), .out0(n184)
         );
  i0snanb03ab1n02x5 U12 ( .a(GO_ID_REG_18_), .b(GO_ID_REG_19_), .c(n440), 
        .out0(n47) );
  i0snanb03ab1n02x5 U13 ( .a(GO_ID_REG_19_), .b(n198), .c(n48), .out0(n57) );
  i0sinv030tb1n02x5 U14 ( .a(n78), .o1(n81) );
  i0sinv030tb1n02x5 U15 ( .a(n43), .o1(n130) );
  i0snand42ab1n02x5 U16 ( .a(n129), .b(n122), .o1(n147) );
  i0sinv020tb1n02x5 U17 ( .a(n40), .o1(n41) );
  i0snorp02ab1n03x5 U18 ( .a(n73), .b(n93), .o1(n3) );
  i0snorp02ab1n03x5 U19 ( .a(GO_ID_REG_31_), .b(GO_ID_REG_30_), .o1(n10) );
  i0sinv000tb1n03x5 U20 ( .a(n50), .o1(n58) );
  i0sinv030tb1n02x5 U21 ( .a(n114), .o1(n135) );
  i0snanp03ab1n02x5 U22 ( .a(n174), .b(n113), .c(n3), .o1(n50) );
  i0sinv000tb1n03x5 U23 ( .a(n31), .o1(n30) );
  i0sinv020tb1n02x5 U24 ( .a(n67), .o1(n174) );
  i0snona32ab1n02x5 U25 ( .b(n154), .c(n178), .d(n96), .a(n184), .out0(
        IOIndex0_0_) );
  i0snanp03ab1n06x5 U26 ( .a(n38), .b(n3), .c(n174), .o1(n39) );
  i0snona32ab1n06x5 U27 ( .b(GO_ID_REG_2_), .c(GO_ID_REG_13_), .d(GO_ID_REG_1_), .a(n116), .out0(n134) );
  i0sinv000tb1n03x5 U28 ( .a(n77), .o1(n116) );
  i0snona22ab1n06x5 U29 ( .b(GO_ID_REG_21_), .c(GO_ID_REG_20_), .a(n41), 
        .out0(n143) );
  i0sinv030tb1n02x5 U30 ( .a(n60), .o1(n450) );
  i0sinv030tb1n02x5 U31 ( .a(n66), .o1(n72) );
  i0sinv040ab1n03x5 U32 ( .a(n97), .o1(n156) );
  i0sinv020tb1n02x5 U33 ( .a(n167), .o1(n168) );
  i0snand43ab1n02x5 U34 ( .a(n137), .b(n112), .c(n181), .o1(n123) );
  i0sinv040ab1n03x5 U35 ( .a(n75), .o1(n33) );
  i0sinv000ab1n02x5 U36 ( .a(n106), .o1(n65) );
  i0sinv030tb1n02x5 U37 ( .a(n51), .o1(n35) );
  i0sinv040ab1n03x5 U38 ( .a(n99), .o1(n119) );
  i0sinv040ab1n03x5 U39 ( .a(n177), .o1(n162) );
  i0sinv020tb1n02x5 U40 ( .a(n107), .o1(n151) );
  i0sinv020tb1n02x5 U41 ( .a(n139), .o1(n178) );
  i0sinv000tb1n02x5 U42 ( .a(n166), .o1(n169) );
  i0sinv000tb1n03x5 U43 ( .a(n171), .o1(n172) );
  i0sinv040ab1n03x5 U44 ( .a(n105), .o1(n160) );
  i0sinv040ab1n03x5 U45 ( .a(n39), .o1(n49) );
  i0snano23ab1n06x5 U46 ( .c(n128), .d(GO_ID_REG_30_), .a(GO_ID_REG_28_), .b(
        GO_ID_REG_31_), .out0(n6) );
  i0sinv030tb1n02x5 U47 ( .a(n157), .o1(n34) );
  i0snand03ab1n02x5 U48 ( .a(n102), .b(GO_ID_REG_27_), .c(n5), .o1(n122) );
  i0snor002ab1n02x5 U49 ( .a(GO_ID_REG_9_), .b(GO_ID_REG_8_), .o1(n9) );
  i0sinv040ab1n03x5 U50 ( .a(n42), .o1(n104) );
  i0snor022ab1n02x5 U51 ( .a(n155), .b(n154), .o1(n2) );
  i0sinv020ab1n03x5 U52 ( .a(n23), .o1(n22) );
  i0snor042ab1n03x5 U53 ( .a(FREEZE_GO_ID), .b(BIST_COLLAR_HOLD), .o1(n4) );
  i0snor022ab1n02x5 U54 ( .a(GO_ID_REG_4_), .b(GO_ID_REG_3_), .o1(n7) );
  i0sinv000ab1n02x5 U55 ( .a(n170), .o1(n173) );
  i0sinv000ab1n02x5 U56 ( .a(n146), .o1(n148) );
  i0sand003ab1n02x5 U57 ( .a(n128), .b(GO_ID_REG_31_), .c(n13), .o(n8) );
  i0snor002ab1n04x5 U58 ( .a(GO_ID_REG_26_), .b(GO_ID_REG_25_), .o1(n5) );
  i0snorp02ab1n02x5 U59 ( .a(BIST_DIAG_EN), .b(BIST_BIRA_EN), .o1(n1) );
  i0sinv000tb1n03x5 U60 ( .a(n125), .o1(n141) );
  i0snona32ab1n02x4 U61 ( .b(n8), .c(n148), .d(n147), .a(n170), .out0(n153) );
  i0snanp03ab1n02x5 U62 ( .a(n181), .b(n103), .c(n166), .o1(n96) );
  i0snona32ab1n02x4 U63 ( .b(n53), .c(n52), .d(n51), .a(n58), .out0(n54) );
  i0snorb02ab1n02x5 U64 ( .a(CMP_EN), .b(n24), .out0(n192) );
  i0snanp02ab1n02x5 U65 ( .a(n159), .b(n142), .o1(n124) );
  i0snanp03ab1n02x5 U66 ( .a(n119), .b(n198), .c(GO_ID_REG_19_), .o1(n120) );
  i0snanp04ab1n02x5 U67 ( .a(n102), .b(GO_ID_REG_25_), .c(n55), .d(n100), .o1(
        n146) );
  i0sinv000ab1n02x5 U68 ( .a(GO_ID_REG_26_), .o1(n55) );
  i0snanp03ab1n02x5 U69 ( .a(n81), .b(GO_ID_REG_13_), .c(n80), .o1(n125) );
  i0sinv000ab1n02x5 U70 ( .a(GO_ID_REG_1_), .o1(n80) );
  i0snanp04ab1n02x5 U71 ( .a(n102), .b(GO_ID_REG_26_), .c(n101), .d(n100), 
        .o1(n142) );
  i0sinv000ab1n02x5 U72 ( .a(GO_ID_REG_25_), .o1(n101) );
  i0sinv020tb1n02x5 U73 ( .a(n142), .o1(n145) );
  i0snanp03ab1n02x5 U74 ( .a(n133), .b(GO_ID_REG_5_), .c(n7), .o1(n139) );
  i0snanp03ab1n02x5 U75 ( .a(n151), .b(GO_ID_REG_6_), .c(n9), .o1(n179) );
  i0snanp04ab1n02x5 U76 ( .a(n133), .b(GO_ID_REG_3_), .c(n70), .d(n131), .o1(
        n181) );
  i0sinv000ab1n02x5 U77 ( .a(GO_ID_REG_4_), .o1(n70) );
  i0sand003ab1n02x5 U78 ( .a(n128), .b(GO_ID_REG_28_), .c(n10), .o(n12) );
  i0snanp03ab1n02x5 U79 ( .a(n81), .b(GO_ID_REG_1_), .c(n79), .o1(n166) );
  i0sinv000ab1n02x5 U80 ( .a(GO_ID_REG_13_), .o1(n79) );
  i0snanp04ab1n02x5 U81 ( .a(n133), .b(GO_ID_REG_4_), .c(n132), .d(n131), .o1(
        n171) );
  i0sinv000ab1n02x5 U82 ( .a(GO_ID_REG_3_), .o1(n132) );
  i0snanp04ab1n02x5 U83 ( .a(n151), .b(GO_ID_REG_8_), .c(n150), .d(n149), .o1(
        n163) );
  i0sinv000ab1n02x5 U84 ( .a(GO_ID_REG_9_), .o1(n149) );
  i0sinv000ab1n02x5 U85 ( .a(GO_ID_REG_6_), .o1(n150) );
  i0sinv000ab1n02x5 U86 ( .a(GO_ID_REG_0_), .o1(n113) );
  i0sinv000ab1n02x5 U87 ( .a(GO_ID_REG_29_), .o1(n61) );
  i0snorp02ab1n02x5 U88 ( .a(GO_ID_REG_30_), .b(GO_ID_REG_28_), .o1(n13) );
  i0sinv000ab1n02x5 U89 ( .a(n98), .o1(n440) );
  i0sinv000ab1n02x5 U91 ( .a(GO_ID_REG_27_), .o1(n100) );
  i0sinv000ab1n02x5 U92 ( .a(GO_ID_REG_18_), .o1(n198) );
  i0sinv000ab1n02x5 U93 ( .a(GO_ID_REG_16_), .o1(n48) );
  i0sinv000ab1n02x5 U94 ( .a(GO_ID_REG_19_), .o1(n196) );
  i0sinv000ab1n02x5 U95 ( .a(GO_ID_REG_5_), .o1(n131) );
  i0sinv020ab1n03x5 U96 ( .a(BIST_SHIFT_COLLAR), .o1(n29) );
  i0sinv000ab1n02x5 U97 ( .a(n27), .o1(n26) );
  i0snorp02ab1n02x5 U98 ( .a(n165), .b(n164), .o1(n189) );
  i0saoi112ab1n02x5 U99 ( .c(n175), .d(n174), .a(n173), .b(n172), .o1(n187) );
  i0snor022ab1n02x5 U100 ( .a(n169), .b(n168), .o1(n188) );
  i0sorn004ab1n06x5 U101 ( .a(n29), .b(n31), .c(MCP_BOUNDING_EN), .d(n193), 
        .o(n197) );
  i0soai012ab1n02x5 U102 ( .b(n28), .c(n193), .a(n32), .o1(n200) );
  i0soai022ab1n02x5 U103 ( .a(n23), .b(n198), .c(n197), .d(n196), .o1(
        n_1528_net_0) );
  i0snorp02ab1n02x5 U104 ( .a(n26), .b(n190), .o1(N44) );
  i0sinv040ab1n03x5 U105 ( .a(n76), .o1(n89) );
  i0snona32ab1n02x4 U106 ( .b(n162), .c(n12), .d(n130), .a(n129), .out0(n140)
         );
  i0snanb02ab1n02x5 U107 ( .a(n30), .b(n28), .out0(n194) );
  i0snorb02ab1n02x5 U108 ( .a(CMP_EN_R), .b(FREEZE_STOP_ERROR_EARLY_R), .out0(
        n191) );
  i0snorb02ab1n02x5 U109 ( .a(n204), .b(n26), .out0(N45) );
  i0snorp03ab1n02x5 U110 ( .a(n52), .b(GO_ID_REG_0_), .c(n37), .o1(n38) );
  i0snanp04ab1n02x5 U111 ( .a(n117), .b(GO_ID_REG_15_), .c(n118), .d(n91), 
        .o1(n109) );
  i0sinv000ab1n02x5 U112 ( .a(GO_ID_REG_14_), .o1(n91) );
  i0sinv000ab1n02x5 U113 ( .a(GO_ID_REG_15_), .o1(n108) );
  i0soabi12ab1n02x5 U114 ( .b(n50), .c(n66), .a(n11), .out0(n190) );
  i0soai013ab1n02x4 U115 ( .b(BIST_COLLAR_HOLD), .c(n25), .d(CMP_EN_R), .a(
        GO_EN), .o1(n11) );
  i0snona32ab1n02x4 U116 ( .b(GO_ID_REG_22_), .c(GO_ID_REG_23_), .d(n143), .a(
        GO_ID_REG_24_), .out0(n144) );
  i0sinv000ab1n02x5 U117 ( .a(GO_ID_REG_21_), .o1(n126) );
  i0sinv000ab1n02x5 U118 ( .a(GO_ID_REG_10_), .o1(n82) );
  i0snanb02ab1n02x5 U119 ( .a(n134), .b(GO_ID_REG_11_), .out0(n84) );
  i0sinv000ab1n02x5 U120 ( .a(GO_ID_REG_2_), .o1(n118) );
  i0sinv040ab1n03x5 U121 ( .a(SI), .o1(n36) );
  i0smdn022ab1n02x4 U122 ( .b(n36), .a(n113), .sa(n30), .o1(SO) );
  i0sinv000tb1n03x5 U123 ( .a(n29), .o1(n28) );
  i0sbff000ab1n02x5 U124 ( .a(n1), .o(n24) );
  i0sbff000ab1n02x5 U125 ( .a(n1), .o(n25) );
  i0sbff000ab1n02x5 U126 ( .a(n19), .o(n14) );
  i0sbff000ab1n02x5 U127 ( .a(n19), .o(n15) );
  i0sbff000ab1n02x5 U128 ( .a(n18), .o(n16) );
  i0sbff000ab1n02x5 U129 ( .a(n18), .o(n17) );
  i0sinv000tb1n03x5 U130 ( .a(MCP_BOUNDING_EN), .o1(n32) );
  i0sinv000tb1n03x5 U131 ( .a(BIST_CLEAR), .o1(n27) );
  i0sinv000tb1n03x5 U132 ( .a(INCLUDE_MEM_RESULTS_REG), .o1(n31) );
  i0sbff000ab1n02x5 U133 ( .a(BIST_ASYNC_RESETN), .o(n19) );
  i0sbff000ab1n02x5 U134 ( .a(BIST_ASYNC_RESETN), .o(n18) );
  i0sinv000tb1n03x5 U135 ( .a(n23), .o1(n20) );
  i0snano32ab1n03x5 U136 ( .b(n189), .c(n188), .d(n187), .a(n186), .out0(N1166) );
  i0sinv020tb1n02x5 U137 ( .a(n111), .o1(n137) );
  i0sinv000tb1n03x5 U138 ( .a(n147), .o1(n62) );
  i0sand004ab1n03x7 U139 ( .a(n182), .b(n181), .c(n180), .d(n179), .o(n183) );
  i0sinv000tb1n03x5 U140 ( .a(n46), .o1(n128) );
  i0sinv000tb1n03x5 U141 ( .a(n54), .o1(n102) );
  i0sinv000tb1n03x5 U142 ( .a(n190), .o1(ERROR[0]) );
  i0sinv000tb1n03x5 U143 ( .a(n69), .o1(n133) );
  i0sinv020tb1n02x5 U144 ( .a(n103), .o1(n165) );
  i0sinv000tb1n03x5 U145 ( .a(n163), .o1(n164) );
  i0sinv030tb1n02x5 U146 ( .a(n204), .o1(BIST_GO) );
  i0snorb03ab1n02x7 U147 ( .a(GO_ID_REG_9_), .b(n94), .c(n107), .out0(n95) );
  i0sinv020tb1n02x5 U148 ( .a(n161), .o1(n176) );
  i0stihi00ab1n02x5 U149 ( .o(n85) );
  i0stilo00ab1n02x5 U150 ( .o(n86) );
  i0sorn002ab1n03x5 U151 ( .a(GO_EN), .b(BIST_COLLAR_SETUP), .o(n88) );
  i0sorn002ab1n03x5 U152 ( .a(GO_ID_REG_15_), .b(GO_ID_REG_14_), .o(n77) );
  i0sorn003ab1n03x7 U153 ( .a(GO_ID_REG_11_), .b(GO_ID_REG_10_), .c(
        GO_ID_REG_12_), .o(n75) );
  i0snanb02ab1n03x5 U154 ( .a(n134), .b(n33), .out0(n67) );
  i0snona22ab1n03x5 U155 ( .b(GO_ID_REG_7_), .c(GO_ID_REG_6_), .a(n9), .out0(
        n73) );
  i0snanb02ab1n03x5 U156 ( .a(GO_ID_REG_5_), .b(n7), .out0(n93) );
  i0snona22ab1n03x5 U157 ( .b(GO_ID_REG_29_), .c(GO_ID_REG_28_), .a(n10), 
        .out0(n52) );
  i0sorn002ab1n03x5 U158 ( .a(GO_ID_REG_24_), .b(GO_ID_REG_23_), .o(n42) );
  i0snona32ab1n03x5 U159 ( .b(GO_ID_REG_22_), .c(GO_ID_REG_21_), .d(
        GO_ID_REG_20_), .a(n104), .out0(n53) );
  i0snanb02ab1n03x5 U160 ( .a(GO_ID_REG_27_), .b(n5), .out0(n37) );
  i0sorn003ab1n03x7 U161 ( .a(GO_ID_REG_18_), .b(GO_ID_REG_17_), .c(
        GO_ID_REG_19_), .o(n157) );
  i0snanb02ab1n03x5 U162 ( .a(GO_ID_REG_16_), .b(n34), .out0(n51) );
  i0snona22ab1n03x5 U163 ( .b(n53), .c(n37), .a(n35), .out0(n60) );
  i0snanb02ab1n03x5 U164 ( .a(n52), .b(n450), .out0(n66) );
  i0snanb02ab1n03x5 U165 ( .a(n51), .b(n49), .out0(n40) );
  i0snona32ab1n03x5 U166 ( .b(GO_ID_REG_22_), .c(GO_ID_REG_24_), .d(n143), .a(
        GO_ID_REG_23_), .out0(n106) );
  i0snona22ab1n03x5 U167 ( .b(GO_ID_REG_22_), .c(n42), .a(n41), .out0(n127) );
  i0snona22ab1n03x5 U168 ( .b(GO_ID_REG_20_), .c(n127), .a(GO_ID_REG_21_), 
        .out0(n43) );
  i0snanb02ab1n03x5 U169 ( .a(n53), .b(n49), .out0(n97) );
  i0sorn002ab1n03x5 U170 ( .a(GO_ID_REG_16_), .b(GO_ID_REG_17_), .o(n98) );
  i0snanb03ab1n03x5 U171 ( .a(n50), .b(n450), .c(n61), .out0(n46) );
  i0soab012ab1n03x5 U172 ( .b(n97), .c(n47), .a(n8), .out0(n64) );
  i0snanb03ab1n03x5 U173 ( .a(n53), .b(GO_ID_REG_17_), .c(n49), .out0(n56) );
  i0soa0012ab1n03x5 U174 ( .b(n57), .c(n56), .a(n146), .o(n63) );
  i0snanb02ab1n03x5 U175 ( .a(GO_ID_REG_31_), .b(n13), .out0(n59) );
  i0snona32ab1n03x5 U176 ( .b(n61), .c(n60), .d(n59), .a(n58), .out0(n129) );
  i0snona24ab1n03x5 U177 ( .d(n65), .e(n130), .a(n64), .b(n63), .c(n62), 
        .out0(n154) );
  i0snona22ab1n03x5 U178 ( .b(n67), .c(GO_ID_REG_0_), .a(n72), .out0(n68) );
  i0sinv030ab1n04x5 U179 ( .a(n68), .o1(n92) );
  i0snanb02ab1n03x5 U180 ( .a(n73), .b(n92), .out0(n69) );
  i0sorn002ab1n03x5 U181 ( .a(GO_ID_REG_8_), .b(GO_ID_REG_6_), .o(n94) );
  i0snanb02ab1n03x5 U182 ( .a(n93), .b(GO_ID_REG_7_), .out0(n71) );
  i0snona32ab1n03x5 U183 ( .b(GO_ID_REG_9_), .c(n94), .d(n71), .a(n92), .out0(
        n103) );
  i0snona22ab1n03x5 U184 ( .b(n73), .c(n93), .a(n72), .out0(n74) );
  i0sinv030ab1n04x5 U185 ( .a(n74), .o1(n175) );
  i0snanb02ab1n03x5 U186 ( .a(n75), .b(n175), .out0(n76) );
  i0snona32ab1n03x5 U187 ( .b(GO_ID_REG_0_), .c(n77), .d(GO_ID_REG_2_), .a(n89), .out0(n78) );
  i0snanb03ab1n03x5 U188 ( .a(GO_ID_REG_12_), .b(n82), .c(n113), .out0(n83) );
  i0snona22ab1n03x5 U189 ( .b(n84), .c(n83), .a(n175), .out0(n112) );
  i0snona32ab1n03x5 U190 ( .b(GO_ID_REG_0_), .c(GO_ID_REG_13_), .d(
        GO_ID_REG_1_), .a(n89), .out0(n90) );
  i0sinv030ab1n04x5 U191 ( .a(n90), .o1(n117) );
  i0snona22ab1n03x5 U192 ( .b(n93), .c(GO_ID_REG_7_), .a(n92), .out0(n107) );
  i0snanb02ab1n03x5 U193 ( .a(n98), .b(n156), .out0(n99) );
  i0snanb03ab1n03x5 U194 ( .a(n198), .b(n119), .c(n196), .out0(n159) );
  i0snanb03ab1n03x5 U195 ( .a(n143), .b(GO_ID_REG_22_), .c(n104), .out0(n105)
         );
  i0snona32ab1n03x5 U196 ( .b(n160), .c(n6), .d(n8), .a(n106), .out0(n110) );
  i0snand24ab1n03x5 U197 ( .a(n117), .b(GO_ID_REG_14_), .c(n118), .d(n108), 
        .o1(n170) );
  i0snona24ab1n03x5 U198 ( .d(n165), .e(n110), .a(n179), .b(n109), .c(n170), 
        .out0(n111) );
  i0snanb02ab1n03x5 U199 ( .a(n134), .b(GO_ID_REG_10_), .out0(n115) );
  i0snanb03ab1n03x5 U200 ( .a(GO_ID_REG_11_), .b(n175), .c(n113), .out0(n114)
         );
  i0snona22ab1n03x5 U201 ( .b(GO_ID_REG_12_), .c(n115), .a(n135), .out0(n182)
         );
  i0snanb03ab1n03x5 U202 ( .a(n118), .b(n117), .c(n116), .out0(n167) );
  i0sand002ab1n03x5 U203 ( .a(n182), .b(n167), .o(n121) );
  i0snona24ab1n03x5 U204 ( .d(n124), .e(n123), .a(n122), .b(n121), .c(n120), 
        .out0(IOIndex0_1_) );
  i0snanb03ab1n03x5 U205 ( .a(n127), .b(GO_ID_REG_20_), .c(n126), .out0(n177)
         );
  i0snanb02ab1n03x5 U206 ( .a(n134), .b(GO_ID_REG_12_), .out0(n136) );
  i0snona22ab1n03x5 U207 ( .b(GO_ID_REG_10_), .c(n136), .a(n135), .out0(n180)
         );
  i0sand002ab1n03x5 U208 ( .a(n171), .b(n180), .o(n138) );
  i0snona24ab1n03x5 U209 ( .d(n141), .e(n140), .a(n139), .b(n138), .c(n137), 
        .out0(IOIndex0_2_) );
  i0snona32ab1n03x5 U210 ( .b(n6), .c(n145), .d(n12), .a(n144), .out0(n155) );
  i0sand002ab1n03x5 U211 ( .a(n163), .b(n180), .o(n152) );
  i0snona24ab1n03x5 U212 ( .d(n155), .e(n153), .a(n182), .b(n152), .c(n184), 
        .out0(IOIndex0_3_) );
  i0snanb03ab1n03x5 U213 ( .a(n157), .b(GO_ID_REG_16_), .c(n156), .out0(n158)
         );
  i0snanb03ab1n03x5 U214 ( .a(n160), .b(n159), .c(n158), .out0(n161) );
  i0snanb03ab1n03x5 U215 ( .a(n162), .b(n2), .c(n176), .out0(IOIndex0_4_) );
  i0snanb03ab1n03x5 U216 ( .a(n178), .b(n177), .c(n176), .out0(n185) );
  i0snona24ab1n03x5 U217 ( .d(n190), .e(n185), .a(n2), .b(n184), .c(n183), 
        .out0(n186) );
  i0smd2na2ab1n03x5 U218 ( .c(n27), .b(n192), .a(n191), .sa(BIST_COLLAR_HOLD), 
        .out0(n193) );
  i0sao0022ab1n03x7 U219 ( .a(GO_ID_REG_31_), .b(n20), .c(SI), .d(n199), .o(
        n_1541_net_0) );
  i0saob012ab1n03x5 U220 ( .b(GO_ID_REG_31_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_31_) );
  i0sao0022ab1n03x7 U221 ( .a(GO_ID_REG_30_), .b(n20), .c(GO_ID_REG_31_), .d(
        n199), .o(n_1540_net_0) );
  i0saob012ab1n03x5 U222 ( .b(GO_ID_REG_30_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_30_) );
  i0sao0022ab1n03x7 U223 ( .a(GO_ID_REG_29_), .b(n20), .c(GO_ID_REG_30_), .d(
        n199), .o(n_1539_net_0) );
  i0saob012ab1n03x5 U224 ( .b(GO_ID_REG_29_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_29_) );
  i0sao0022ab1n03x7 U225 ( .a(GO_ID_REG_28_), .b(n20), .c(GO_ID_REG_29_), .d(
        n199), .o(n_1538_net_0) );
  i0saob012ab1n03x5 U226 ( .b(GO_ID_REG_28_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_28_) );
  i0sao0022ab1n03x7 U227 ( .a(GO_ID_REG_27_), .b(n20), .c(GO_ID_REG_28_), .d(
        n199), .o(n_1537_net_0) );
  i0saob012ab1n03x5 U228 ( .b(GO_ID_REG_27_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_27_) );
  i0sao0022ab1n03x7 U229 ( .a(GO_ID_REG_26_), .b(n20), .c(GO_ID_REG_27_), .d(
        n199), .o(n_1536_net_0) );
  i0saob012ab1n03x5 U230 ( .b(GO_ID_REG_26_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_26_) );
  i0sao0022ab1n03x7 U231 ( .a(GO_ID_REG_25_), .b(n20), .c(GO_ID_REG_26_), .d(
        n199), .o(n_1535_net_0) );
  i0saob012ab1n03x5 U232 ( .b(GO_ID_REG_25_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_25_) );
  i0sao0022ab1n03x7 U233 ( .a(GO_ID_REG_24_), .b(n20), .c(GO_ID_REG_25_), .d(
        n199), .o(n_1534_net_0) );
  i0saob012ab1n03x5 U234 ( .b(GO_ID_REG_24_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_24_) );
  i0sao0022ab1n03x7 U235 ( .a(GO_ID_REG_23_), .b(n20), .c(GO_ID_REG_24_), .d(
        n199), .o(n_1533_net_0) );
  i0saob012ab1n03x5 U236 ( .b(GO_ID_REG_23_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_23_) );
  i0sao0022ab1n03x7 U237 ( .a(GO_ID_REG_22_), .b(n20), .c(GO_ID_REG_23_), .d(
        n199), .o(n_1532_net_0) );
  i0saob012ab1n03x5 U238 ( .b(GO_ID_REG_22_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_22_) );
  i0sao0022ab1n03x7 U239 ( .a(GO_ID_REG_21_), .b(n20), .c(GO_ID_REG_22_), .d(
        n199), .o(n_1531_net_0) );
  i0saob012ab1n03x5 U240 ( .b(GO_ID_REG_21_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_21_) );
  i0sao0022ab1n03x7 U241 ( .a(GO_ID_REG_20_), .b(n20), .c(GO_ID_REG_21_), .d(
        n199), .o(n_1530_net_0) );
  i0saob012ab1n03x5 U242 ( .b(GO_ID_REG_20_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_20_) );
  i0saob012ab1n03x5 U243 ( .b(GO_ID_REG_18_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_18_) );
  i0sao0022ab1n03x7 U244 ( .a(GO_ID_REG_17_), .b(n21), .c(GO_ID_REG_18_), .d(
        n199), .o(n_1527_net_0) );
  i0saob012ab1n03x5 U245 ( .b(GO_ID_REG_17_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_17_) );
  i0sao0022ab1n03x7 U246 ( .a(GO_ID_REG_16_), .b(n21), .c(GO_ID_REG_17_), .d(
        n199), .o(n_1526_net_0) );
  i0saob012ab1n03x5 U247 ( .b(GO_ID_REG_16_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_16_) );
  i0sao0022ab1n03x7 U248 ( .a(GO_ID_REG_15_), .b(n21), .c(GO_ID_REG_16_), .d(
        n199), .o(n_1525_net_0) );
  i0saob012ab1n03x5 U249 ( .b(GO_ID_REG_15_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_15_) );
  i0saob012ab1n03x5 U250 ( .b(GO_ID_REG_14_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_14_) );
  i0sao0022ab1n03x7 U251 ( .a(GO_ID_REG_13_), .b(n21), .c(GO_ID_REG_14_), .d(
        n199), .o(n_1523_net_0) );
  i0saob012ab1n03x5 U252 ( .b(GO_ID_REG_13_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_13_) );
  i0sao0022ab1n03x7 U253 ( .a(GO_ID_REG_12_), .b(n21), .c(GO_ID_REG_13_), .d(
        n199), .o(n_1522_net_0) );
  i0saob012ab1n03x5 U254 ( .b(GO_ID_REG_12_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_12_) );
  i0sao0022ab1n03x7 U255 ( .a(GO_ID_REG_11_), .b(n21), .c(GO_ID_REG_12_), .d(
        n199), .o(n_1521_net_0) );
  i0saob012ab1n03x5 U256 ( .b(GO_ID_REG_11_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_11_) );
  i0sao0022ab1n03x7 U257 ( .a(GO_ID_REG_10_), .b(n21), .c(GO_ID_REG_11_), .d(
        n199), .o(n_1520_net_0) );
  i0saob012ab1n03x5 U258 ( .b(GO_ID_REG_10_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_10_) );
  i0sao0022ab1n03x7 U259 ( .a(GO_ID_REG_9_), .b(n21), .c(GO_ID_REG_10_), .d(
        n199), .o(n_1519_net_0) );
  i0saob012ab1n03x5 U260 ( .b(GO_ID_REG_9_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_9_) );
  i0sao0022ab1n03x7 U261 ( .a(GO_ID_REG_8_), .b(n21), .c(GO_ID_REG_9_), .d(
        n199), .o(n_1518_net_0) );
  i0saob012ab1n03x5 U262 ( .b(GO_ID_REG_8_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_8_) );
  i0sao0022ab1n03x7 U263 ( .a(GO_ID_REG_7_), .b(n21), .c(GO_ID_REG_8_), .d(
        n199), .o(n_1517_net_0) );
  i0saob012ab1n03x5 U264 ( .b(GO_ID_REG_7_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_7_) );
  i0sao0022ab1n03x7 U265 ( .a(GO_ID_REG_6_), .b(n21), .c(GO_ID_REG_7_), .d(
        n199), .o(n_1516_net_0) );
  i0saob012ab1n03x5 U266 ( .b(GO_ID_REG_6_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_6_) );
  i0sao0022ab1n03x7 U267 ( .a(GO_ID_REG_5_), .b(n21), .c(GO_ID_REG_6_), .d(
        n199), .o(n_1515_net_0) );
  i0saob012ab1n03x5 U268 ( .b(GO_ID_REG_5_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_5_) );
  i0sao0022ab1n03x7 U269 ( .a(GO_ID_REG_4_), .b(n22), .c(GO_ID_REG_5_), .d(
        n199), .o(n_1514_net_0) );
  i0saob012ab1n03x5 U270 ( .b(GO_ID_REG_4_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_4_) );
  i0sao0022ab1n03x7 U271 ( .a(GO_ID_REG_3_), .b(n22), .c(GO_ID_REG_4_), .d(
        n199), .o(n_1513_net_0) );
  i0saob012ab1n03x5 U272 ( .b(GO_ID_REG_3_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_3_) );
  i0sao0022ab1n03x7 U273 ( .a(GO_ID_REG_2_), .b(n22), .c(GO_ID_REG_3_), .d(
        n199), .o(n_1512_net_0) );
  i0saob012ab1n03x5 U274 ( .b(GO_ID_REG_2_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_2_) );
  i0sao0022ab1n03x7 U275 ( .a(GO_ID_REG_1_), .b(n22), .c(GO_ID_REG_2_), .d(
        n199), .o(n_1511_net_0) );
  i0saob012ab1n03x5 U276 ( .b(GO_ID_REG_1_), .c(n25), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_1_) );
  i0sao0022ab1n03x7 U277 ( .a(GO_ID_REG_0_), .b(n22), .c(GO_ID_REG_1_), .d(
        n199), .o(n_1510_net_0) );
  i0saob012ab1n03x5 U278 ( .b(GO_ID_REG_0_), .c(n24), .a(n201), .out0(
        GO_ID_REG_MUX_SEL_0_) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_interface_m39 ( PriorityColumn, 
        BIST_CLEAR_BIRA, wen_IN, ren_IN, adr_IN, din_IN, q_IN, TCK, BIST_CMP, 
        INCLUDE_MEM_RESULTS_REG, BIST_WRITEENABLE, BIST_READENABLE, 
        BIST_COL_ADD, BIST_ROW_ADD, BIST_WRITE_DATA, CHKBCI_PHASE, 
        BIST_TESTDATA_SELECT_TO_COLLAR, MEM_BYPASS_EN, SCAN_SHIFT_EN, 
        MCP_BOUNDING_EN, BIST_ON, BIST_RUN, BIST_ASYNC_RESETN, BIST_CLK, 
        BIST_SHIFT_COLLAR, BIST_EXPECT_DATA, BIST_SI, BIST_COLLAR_SETUP, 
        BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD, BIST_BIRA_EN, 
        CHECK_REPAIR_NEEDED, BIST_DIAG_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR, 
        BIST_SETUP2, BIST_SETUP1, BIST_SETUP0, LV_TM, FREEZE_STOP_ERROR, 
        BIST_COLLAR_EN, FROM_BISR_ALL_SROW0_FUSE_ADD_REG, 
        FROM_BISR_ALL_SROW0_ALLOC_REG, FROM_BISR_ALL_SROW1_FUSE_ADD_REG, 
        FROM_BISR_ALL_SROW1_ALLOC_REG, FROM_BISR_All_SCOL0_FUSE_REG, 
        FROM_BISR_All_SCOL0_ALLOC_REG, BIST_SHIFT_BIRA_COLLAR, 
        RESET_REG_SETUP2, ERROR_CNT_ZERO, wen, ren, adr, din, q, 
        SCAN_OBS_FLOPS, BIST_SO, BIST_GO, ALL_SROW0_FUSE_ADD_REG, 
        ALL_SROW0_ALLOC_REG, ALL_SROW1_FUSE_ADD_REG, ALL_SROW1_ALLOC_REG, 
        All_SCOL0_FUSE_REG, All_SCOL0_ALLOC_REG, REPAIR_STATUS );
  input [8:0] adr_IN;
  input [31:0] din_IN;
  input [31:0] q_IN;
  input [1:0] BIST_COL_ADD;
  input [6:0] BIST_ROW_ADD;
  input [3:0] BIST_WRITE_DATA;
  input [3:0] BIST_EXPECT_DATA;
  input [6:0] FROM_BISR_ALL_SROW0_FUSE_ADD_REG;
  input [6:0] FROM_BISR_ALL_SROW1_FUSE_ADD_REG;
  input [4:0] FROM_BISR_All_SCOL0_FUSE_REG;
  output [8:0] adr;
  output [31:0] din;
  output [31:0] q;
  output [3:0] SCAN_OBS_FLOPS;
  output [6:0] ALL_SROW0_FUSE_ADD_REG;
  output [6:0] ALL_SROW1_FUSE_ADD_REG;
  output [4:0] All_SCOL0_FUSE_REG;
  output [1:0] REPAIR_STATUS;
  input PriorityColumn, BIST_CLEAR_BIRA, wen_IN, ren_IN, TCK, BIST_CMP,
         INCLUDE_MEM_RESULTS_REG, BIST_WRITEENABLE, BIST_READENABLE,
         CHKBCI_PHASE, BIST_TESTDATA_SELECT_TO_COLLAR, MEM_BYPASS_EN,
         SCAN_SHIFT_EN, MCP_BOUNDING_EN, BIST_ON, BIST_RUN, BIST_ASYNC_RESETN,
         BIST_CLK, BIST_SHIFT_COLLAR, BIST_SI, BIST_COLLAR_SETUP,
         BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD, BIST_BIRA_EN,
         CHECK_REPAIR_NEEDED, BIST_DIAG_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR,
         BIST_SETUP2, BIST_SETUP1, BIST_SETUP0, LV_TM, FREEZE_STOP_ERROR,
         BIST_COLLAR_EN, FROM_BISR_ALL_SROW0_ALLOC_REG,
         FROM_BISR_ALL_SROW1_ALLOC_REG, FROM_BISR_All_SCOL0_ALLOC_REG,
         BIST_SHIFT_BIRA_COLLAR, RESET_REG_SETUP2, ERROR_CNT_ZERO;
  output wen, ren, BIST_SO, BIST_GO, ALL_SROW0_ALLOC_REG, ALL_SROW1_ALLOC_REG,
         All_SCOL0_ALLOC_REG;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29,
         N30, N31, N42, net170849, BIST_ROW_ADD_R1_6_, BIST_ROW_ADD_R1_5_,
         BIST_ROW_ADD_R1_4_, BIST_ROW_ADD_R1_3_, BIST_ROW_ADD_R1_2_,
         BIST_ROW_ADD_R1_1_, BIST_ROW_ADD_R1_0_, BIST_ROW_ADD_R2_6_,
         BIST_ROW_ADD_R2_5_, BIST_ROW_ADD_R2_4_, BIST_ROW_ADD_R2_3_,
         BIST_ROW_ADD_R2_2_, BIST_ROW_ADD_R2_1_, BIST_ROW_ADD_R2_0_,
         BIST_ROW_ADD_R3_6_, BIST_ROW_ADD_R3_5_, BIST_ROW_ADD_R3_4_,
         BIST_ROW_ADD_R3_3_, BIST_ROW_ADD_R3_2_, BIST_ROW_ADD_R3_1_,
         BIST_ROW_ADD_R3_0_, BIST_ROW_ADD_R4_6_, BIST_ROW_ADD_R4_5_,
         BIST_ROW_ADD_R4_4_, BIST_ROW_ADD_R4_3_, BIST_ROW_ADD_R4_2_,
         BIST_ROW_ADD_R4_1_, BIST_ROW_ADD_R4_0_, BIST_CLK_INT,
         BIST_INPUT_SELECT, n_1508_net_0, BIST_COLLAR_HOLD_INT, wen_NOT_GATED,
         ren_NOT_GATED, N49, N50, N51, N52, BIST_WRITE_DATA_INT_9_,
         BIST_WRITE_DATA_INT_8_, BIST_WRITE_DATA_INT_7_,
         BIST_WRITE_DATA_INT_6_, wen_TEST_IN, ren_TEST_IN, q_FROM_BYPASS_31_,
         q_FROM_BYPASS_30_, q_FROM_BYPASS_29_, q_FROM_BYPASS_28_,
         q_FROM_BYPASS_27_, q_FROM_BYPASS_26_, q_FROM_BYPASS_25_,
         q_FROM_BYPASS_24_, q_FROM_BYPASS_23_, q_FROM_BYPASS_22_,
         q_FROM_BYPASS_21_, q_FROM_BYPASS_20_, q_FROM_BYPASS_19_,
         q_FROM_BYPASS_18_, q_FROM_BYPASS_17_, q_FROM_BYPASS_16_,
         q_FROM_BYPASS_15_, q_FROM_BYPASS_14_, q_FROM_BYPASS_13_,
         q_FROM_BYPASS_12_, q_FROM_BYPASS_11_, q_FROM_BYPASS_10_,
         q_FROM_BYPASS_9_, q_FROM_BYPASS_8_, q_FROM_BYPASS_7_,
         q_FROM_BYPASS_6_, q_FROM_BYPASS_5_, q_FROM_BYPASS_4_,
         q_FROM_BYPASS_3_, q_FROM_BYPASS_2_, q_FROM_BYPASS_1_,
         q_FROM_BYPASS_0_, N56, N57, N58, N59, N60, N61, N62, N63, N64, N65,
         N66, N67, N68, N69, N70, N71, N72, N73, N74, N75, N76, N77, N78, N79,
         N80, N81, N82, N83, N84, N85, N86, N87, BIST_COLLAR_EN_PIPE_0,
         EDATA_CKB_EN_PIPE_0, EDATA_COL_ADD_BIT0_PIPE_0,
         BIST_ROW_ADD_PIPE_0_6_, BIST_ROW_ADD_PIPE_0_5_,
         BIST_ROW_ADD_PIPE_0_4_, BIST_ROW_ADD_PIPE_0_3_,
         BIST_ROW_ADD_PIPE_0_2_, BIST_ROW_ADD_PIPE_0_1_,
         BIST_ROW_ADD_PIPE_0_0_, FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID,
         ERROR_0_, GO_EN, FREEZE_STOP_ERROR_CLEAR, BIST_CLK_OR_TCK,
         MultiBitError_R_0_, ERROR_R_A_0_, IOIndex0_R_4_, IOIndex0_R_3_,
         IOIndex0_R_2_, IOIndex0_R_1_, IOIndex0_R_0_, BIST_GO_FROM_STATUS,
         COLLAR_STATUS_SO, RepairedBySpareRow, RepairableBySpareRow,
         ErrorGlobal, RepairedBySpareColumn, RepairableBySpareColumn,
         COL_BIRA_SO, ROW_BIRA_SO, REPAIR_STATUS_SHADOW_1_,
         REPAIR_STATUS_SHADOW_0_, BIST_CLK_EN, INJECT_TCK, n110, n199, n46,
         n630, n720, n810, n90, n99, n108, n117, n120, n123, n126, n201, n203,
         n204, n205, n206, n207, n210, n320, n400, n530, n610, n710, n880,
         n910, n100, n111, n121, n130, n140, n150, n160, n170, n180, n190,
         n200, n211, n220, n230, n240, n250, n260, n270, n280, n290, n300,
         n310, n321, n33, n34, n35, n36, n37, n38, n39, n401, n41, n420, n43,
         n44, n45, n47, n48, n490, n500, n510, n520, n531, n54, n55, n560,
         n570, n580, n590, n600, n611, n620, n640, n650, n660, n670, n680,
         n690, n700, n711, n730, n740, n750, n760, n770, n780, n790, n800,
         n820, n830, n840, n850, n860, n870, n881, n89, n911, n92, n93, n94,
         n95, n96, n97, SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23, SYNOPSYS_UNCONNECTED_24,
         SYNOPSYS_UNCONNECTED_25, SYNOPSYS_UNCONNECTED_26,
         SYNOPSYS_UNCONNECTED_27, SYNOPSYS_UNCONNECTED_28,
         SYNOPSYS_UNCONNECTED_29, SYNOPSYS_UNCONNECTED_30,
         SYNOPSYS_UNCONNECTED_31, SYNOPSYS_UNCONNECTED_32,
         SYNOPSYS_UNCONNECTED_33, SYNOPSYS_UNCONNECTED_34,
         SYNOPSYS_UNCONNECTED_35, SYNOPSYS_UNCONNECTED_36,
         SYNOPSYS_UNCONNECTED_37, SYNOPSYS_UNCONNECTED_38,
         SYNOPSYS_UNCONNECTED_39, SYNOPSYS_UNCONNECTED_40,
         SYNOPSYS_UNCONNECTED_41, SYNOPSYS_UNCONNECTED_42,
         SYNOPSYS_UNCONNECTED_43, SYNOPSYS_UNCONNECTED_44,
         SYNOPSYS_UNCONNECTED_45, SYNOPSYS_UNCONNECTED_46,
         SYNOPSYS_UNCONNECTED_47, SYNOPSYS_UNCONNECTED_48,
         SYNOPSYS_UNCONNECTED_49, SYNOPSYS_UNCONNECTED_50,
         SYNOPSYS_UNCONNECTED_51, SYNOPSYS_UNCONNECTED_52,
         SYNOPSYS_UNCONNECTED_53, SYNOPSYS_UNCONNECTED_54,
         SYNOPSYS_UNCONNECTED_55, SYNOPSYS_UNCONNECTED_56,
         SYNOPSYS_UNCONNECTED_57, SYNOPSYS_UNCONNECTED_58,
         SYNOPSYS_UNCONNECTED_59, SYNOPSYS_UNCONNECTED_60,
         SYNOPSYS_UNCONNECTED_61, SYNOPSYS_UNCONNECTED_62,
         SYNOPSYS_UNCONNECTED_63, SYNOPSYS_UNCONNECTED_64,
         SYNOPSYS_UNCONNECTED_65, SYNOPSYS_UNCONNECTED_66,
         SYNOPSYS_UNCONNECTED_67, SYNOPSYS_UNCONNECTED_68,
         SYNOPSYS_UNCONNECTED_69, SYNOPSYS_UNCONNECTED_70,
         SYNOPSYS_UNCONNECTED_71, SYNOPSYS_UNCONNECTED_72,
         SYNOPSYS_UNCONNECTED_73, SYNOPSYS_UNCONNECTED_74,
         SYNOPSYS_UNCONNECTED_75, SYNOPSYS_UNCONNECTED_76,
         SYNOPSYS_UNCONNECTED_77;

  i0sand002ab1n02x5 tessent_persistent_cell_AND_BIST_SETUP0_SYNC ( .a(
        BIST_SETUP0), .b(BIST_ON), .o(SYNOPSYS_UNCONNECTED_1) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_BIST_INPUT_SELECT_INT ( .a(
        n_1508_net_0), .o(N42) );
  i0scilb01ab1n02x5 tessent_persistent_cell_GATING_BIST_CLK ( .clk(BIST_CLK), 
        .en(BIST_CLK_EN), .te(net170849), .clkout(BIST_CLK_INT) );
  i0scmbn22ab1n02x5 tessent_persistent_cell_BIST_CLK_OR_TCK ( .clk2(
        BIST_CLK_INT), .clk1(TCK), .s(INJECT_TCK), .clkout(BIST_CLK_OR_TCK) );
  i0sfag003ab1d02x5 BIST_INPUT_SELECT_reg ( .si(net170849), .d(n201), .ssb(
        n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_INPUT_SELECT), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfag003ab1d02x5 SCAN_OBS_FLOPS_reg_3 ( .si(net170849), .d(N49), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(SCAN_OBS_FLOPS[3]), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfag003ab1d02x5 SCAN_OBS_FLOPS_reg_2 ( .si(net170849), .d(N50), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(SCAN_OBS_FLOPS[2]), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfag003ab1d02x5 SCAN_OBS_FLOPS_reg_1 ( .si(net170849), .d(N51), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(SCAN_OBS_FLOPS[1]), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfag003ab1d02x5 SCAN_OBS_FLOPS_reg_0 ( .si(net170849), .d(N52), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(SCAN_OBS_FLOPS[0]), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfag003ab1d02x5 BIST_COLLAR_EN_PIPE_0_reg ( .si(net170849), .d(n126), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_COLLAR_EN_PIPE_0), 
        .so(SYNOPSYS_UNCONNECTED_7) );
  i0sfag003ab1d02x5 EDATA_CKB_EN_PIPE_0_reg ( .si(net170849), .d(n123), .ssb(
        n199), .clk(BIST_CLK_INT), .rb(n420), .o(EDATA_CKB_EN_PIPE_0), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfag003ab1d02x5 EDATA_COL_ADD_BIT0_PIPE_0_reg ( .si(net170849), .d(n120), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        EDATA_COL_ADD_BIT0_PIPE_0), .so(SYNOPSYS_UNCONNECTED_9) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_6 ( .si(net170849), .d(n117), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_6_), 
        .so(SYNOPSYS_UNCONNECTED_10) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_6 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_6_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_6_), .so(SYNOPSYS_UNCONNECTED_11) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_6 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_6_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_6_), .so(SYNOPSYS_UNCONNECTED_12) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_6 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_6_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_6_), .so(SYNOPSYS_UNCONNECTED_13) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_5 ( .si(net170849), .d(n108), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_5_), 
        .so(SYNOPSYS_UNCONNECTED_14) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_5 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_5_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_5_), .so(SYNOPSYS_UNCONNECTED_15) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_5 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_5_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_5_), .so(SYNOPSYS_UNCONNECTED_16) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_5 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_5_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_5_), .so(SYNOPSYS_UNCONNECTED_17) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_4 ( .si(net170849), .d(n99), .ssb(
        n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_4_), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_4 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_4_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_4_), .so(SYNOPSYS_UNCONNECTED_19) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_4 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_4_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_4_), .so(SYNOPSYS_UNCONNECTED_20) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_4 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_4_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_4_), .so(SYNOPSYS_UNCONNECTED_21) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_3 ( .si(net170849), .d(n90), .ssb(
        n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_3_), .so(
        SYNOPSYS_UNCONNECTED_22) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_3 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_3_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_3_), .so(SYNOPSYS_UNCONNECTED_23) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_3 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_3_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_3_), .so(SYNOPSYS_UNCONNECTED_24) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_3 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_3_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_3_), .so(SYNOPSYS_UNCONNECTED_25) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_2 ( .si(net170849), .d(n810), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_2_), 
        .so(SYNOPSYS_UNCONNECTED_26) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_2 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_2_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_2_), .so(SYNOPSYS_UNCONNECTED_27) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_2 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_2_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_2_), .so(SYNOPSYS_UNCONNECTED_28) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_2 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_2_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_2_), .so(SYNOPSYS_UNCONNECTED_29) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_1 ( .si(net170849), .d(n720), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_1_), 
        .so(SYNOPSYS_UNCONNECTED_30) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_1 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_1_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_1_), .so(SYNOPSYS_UNCONNECTED_31) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_1 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_1_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_1_), .so(SYNOPSYS_UNCONNECTED_32) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_1 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_1_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_1_), .so(SYNOPSYS_UNCONNECTED_33) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_PIPE_0_reg_0 ( .si(net170849), .d(n630), 
        .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(BIST_ROW_ADD_PIPE_0_0_), 
        .so(SYNOPSYS_UNCONNECTED_34) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R2_reg_0 ( .si(net170849), .d(
        BIST_ROW_ADD_R1_0_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R2_0_), .so(SYNOPSYS_UNCONNECTED_35) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R3_reg_0 ( .si(net170849), .d(
        BIST_ROW_ADD_R2_0_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R3_0_), .so(SYNOPSYS_UNCONNECTED_36) );
  i0sfag003ab1d02x5 BIST_ROW_ADD_R4_reg_0 ( .si(net170849), .d(
        BIST_ROW_ADD_R3_0_), .ssb(n199), .clk(BIST_CLK_INT), .rb(n420), .o(
        BIST_ROW_ADD_R4_0_), .so(SYNOPSYS_UNCONNECTED_37) );
  i0sfag003ab1d02x5 REPAIR_STATUS_SHADOW_reg_0 ( .si(net170849), .d(n207), 
        .ssb(n199), .clk(BIST_CLK_OR_TCK), .rb(n420), .o(
        REPAIR_STATUS_SHADOW_0_), .so(SYNOPSYS_UNCONNECTED_38) );
  i0sfag003ab1d02x5 REPAIR_STATUS_SHADOW_reg_1 ( .si(net170849), .d(n206), 
        .ssb(n199), .clk(BIST_CLK_OR_TCK), .rb(n420), .o(
        REPAIR_STATUS_SHADOW_1_), .so(SYNOPSYS_UNCONNECTED_39) );
  i0sfag003ab1d02x5 REPAIR_STATUS_reg_0 ( .si(net170849), .d(n204), .ssb(n199), 
        .clk(BIST_CLK_OR_TCK), .rb(n420), .o(REPAIR_STATUS[0]), .so(
        SYNOPSYS_UNCONNECTED_40) );
  i0sfag003ab1d02x5 REPAIR_STATUS_reg_1 ( .si(net170849), .d(n205), .ssb(n199), 
        .clk(BIST_CLK_OR_TCK), .rb(n420), .o(REPAIR_STATUS[1]), .so(
        SYNOPSYS_UNCONNECTED_41) );
  i0sfag003ab1d02x5 FREEZE_STOP_ERROR_EARLY_R_reg ( .si(net170849), .d(n46), 
        .ssb(n199), .clk(BIST_CLK_OR_TCK), .rb(n420), .o(
        FREEZE_STOP_ERROR_EARLY_R), .so(SYNOPSYS_UNCONNECTED_42) );
  i0sand002ab1n03x5 U4 ( .a(n110), .b(wen_NOT_GATED), .o(wen) );
  i0sand002ab1n03x5 U6 ( .a(n110), .b(ren_NOT_GATED), .o(ren) );
  firebird7_in_gate1_tessent_mbist_c1_interface_m39_STATUS MBISTPG_STATUS ( 
        .BIST_CLEAR(n38), .FREEZE_STOP_ERROR_EARLY_R(FREEZE_STOP_ERROR_EARLY_R), .FREEZE_GO_ID(FREEZE_GO_ID), .CMP_EN(BIST_CMP), .BIST_ASYNC_RESETN(n420), 
        .BIST_CLK(BIST_CLK_OR_TCK), .BIST_COLLAR_SETUP(BIST_COLLAR_SETUP), 
        .BIST_COLLAR_HOLD(BIST_COLLAR_HOLD_INT), .BIST_SHIFT_COLLAR(n401), 
        .BIST_ON(BIST_ON), .USE_DEFAULTS(net170849), .SI(
        REPAIR_STATUS_SHADOW_1_), .BIST_DIAG_EN(BIST_DIAG_EN), .BIST_BIRA_EN(
        BIST_BIRA_EN), .RAW_CMP_STAT({N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, 
        N10, N11, N12, N13, N14, N15, N16, N17, N18, N19, N20, N21, N22, N23, 
        N24, N25, N26, N27, N28, N29, N30, N31}), .MCP_BOUNDING_EN(n44), 
        .INCLUDE_MEM_RESULTS_REG(INCLUDE_MEM_RESULTS_REG), .GO_EN(GO_EN), 
        .ERROR(ERROR_0_), .ERROR_R(SYNOPSYS_UNCONNECTED_43), .MultiBitError_R(
        MultiBitError_R_0_), .ERROR_R_A(ERROR_R_A_0_), .IOIndex0_R({
        IOIndex0_R_4_, IOIndex0_R_3_, IOIndex0_R_2_, IOIndex0_R_1_, 
        IOIndex0_R_0_}), .SO(COLLAR_STATUS_SO), .BIST_GO(BIST_GO_FROM_STATUS)
         );
  firebird7_in_gate1_tessent_mbist_c1_interface_m39_ColumnRedundancyAnalysis MBIST_ColumnRedundancyAnalysis ( 
        .BIST_CLK(BIST_CLK_OR_TCK), .BIST_ASYNC_RESETN(n420), .BIST_HOLD(
        BIST_COLLAR_HOLD), .BIST_SHIFT(n36), .MultiBitError_R(
        MultiBitError_R_0_), .IOIndex0({IOIndex0_R_4_, IOIndex0_R_3_, 
        IOIndex0_R_2_, IOIndex0_R_1_, IOIndex0_R_0_}), .CLEAR(BIST_CLEAR_BIRA), 
        .BIST_BIRA_EN(BIST_BIRA_EN), .RepairedBySpareRow(RepairedBySpareRow), 
        .RepairableBySpareRow(RepairableBySpareRow), .PriorityColumn(
        PriorityColumn), .FROM_BISR_All_SCOL0_FUSE_REG(
        FROM_BISR_All_SCOL0_FUSE_REG), .FROM_BISR_All_SCOL0_ALLOC_REG(
        FROM_BISR_All_SCOL0_ALLOC_REG), .ERROR(ERROR_R_A_0_), .LV_TM(LV_TM), 
        .BIRA_SI(BIST_SI), .All_SCOL0_FUSE_REG(All_SCOL0_FUSE_REG), 
        .All_SCOL0_ALLOC_REG(All_SCOL0_ALLOC_REG), .BIRA_SO(COL_BIRA_SO), 
        .ErrorGlobal(ErrorGlobal), .RepairedBySpareColumn(
        RepairedBySpareColumn), .RepairableBySpareColumn(
        RepairableBySpareColumn) );
  firebird7_in_gate1_tessent_mbist_c1_interface_m39_RowRedundancyAnalysis MBIST_RowRedundancyAnalysis_INST ( 
        .RepairedBySpareColumn(RepairedBySpareColumn), 
        .RepairableBySpareColumn(RepairableBySpareColumn), .PriorityColumn(
        PriorityColumn), .BIST_BIRA_EN(BIST_BIRA_EN), .CLEAR(BIST_CLEAR_BIRA), 
        .BIST_HOLD(BIST_COLLAR_HOLD), .BIST_SHIFT(n36), .ErrorGlobal(
        ErrorGlobal), .BIST_CLK(BIST_CLK_OR_TCK), 
        .FROM_BISR_ALL_SROW0_FUSE_ADD_REG(FROM_BISR_ALL_SROW0_FUSE_ADD_REG), 
        .FROM_BISR_ALL_SROW0_ALLOC_REG(FROM_BISR_ALL_SROW0_ALLOC_REG), 
        .FROM_BISR_ALL_SROW1_FUSE_ADD_REG(FROM_BISR_ALL_SROW1_FUSE_ADD_REG), 
        .FROM_BISR_ALL_SROW1_ALLOC_REG(FROM_BISR_ALL_SROW1_ALLOC_REG), .LV_TM(
        LV_TM), .BIRA_SI(COL_BIRA_SO), .BIST_ASYNC_RESETN(n420), 
        .BIRA_FUSE_ADD_A({BIST_ROW_ADD_R3_6_, BIST_ROW_ADD_R3_5_, 
        BIST_ROW_ADD_R3_4_, BIST_ROW_ADD_R3_3_, BIST_ROW_ADD_R3_2_, 
        BIST_ROW_ADD_R3_1_, BIST_ROW_ADD_R3_0_}), .BIRA_FUSE_ADD_B({
        BIST_ROW_ADD_R4_6_, BIST_ROW_ADD_R4_5_, BIST_ROW_ADD_R4_4_, 
        BIST_ROW_ADD_R4_3_, BIST_ROW_ADD_R4_2_, BIST_ROW_ADD_R4_1_, 
        BIST_ROW_ADD_R4_0_}), .ALL_SROW0_FUSE_ADD_REG(ALL_SROW0_FUSE_ADD_REG), 
        .ALL_SROW0_ALLOC_REG(ALL_SROW0_ALLOC_REG), .ALL_SROW1_FUSE_ADD_REG(
        ALL_SROW1_FUSE_ADD_REG), .ALL_SROW1_ALLOC_REG(ALL_SROW1_ALLOC_REG), 
        .BIRA_SO(ROW_BIRA_SO), .RepairedBySpareRow(RepairedBySpareRow), 
        .RepairableBySpareRow(RepairableBySpareRow) );
  i0snorb02ab1n02x5 U226 ( .a(BIST_COLLAR_EN), .b(n38), .out0(n126) );
  i0snorb02ab1n02x5 U163 ( .a(BIST_ROW_ADD[0]), .b(n38), .out0(n630) );
  i0snorb02ab1n02x5 U172 ( .a(BIST_ROW_ADD[1]), .b(n38), .out0(n720) );
  i0snorb02ab1n02x5 U208 ( .a(BIST_ROW_ADD[5]), .b(n38), .out0(n108) );
  i0snorb02ab1n02x5 U199 ( .a(BIST_ROW_ADD[4]), .b(n38), .out0(n99) );
  i0snorb02ab1n02x5 U217 ( .a(BIST_ROW_ADD[6]), .b(n38), .out0(n117) );
  i0snorb02ab1n02x5 U181 ( .a(BIST_ROW_ADD[2]), .b(n38), .out0(n810) );
  i0snorb02ab1n02x5 U220 ( .a(BIST_COL_ADD[0]), .b(n38), .out0(n120) );
  i0snorb02ab1n02x5 U190 ( .a(BIST_ROW_ADD[3]), .b(n38), .out0(n90) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_13 ( .si(net170849), .d(N74), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_13_), .so(
        SYNOPSYS_UNCONNECTED_44) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_14 ( .si(net170849), .d(N73), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_14_), .so(
        SYNOPSYS_UNCONNECTED_45) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_15 ( .si(net170849), .d(N72), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_15_), .so(
        SYNOPSYS_UNCONNECTED_46) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_17 ( .si(net170849), .d(N70), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_17_), .so(
        SYNOPSYS_UNCONNECTED_47) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_18 ( .si(net170849), .d(N69), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_18_), .so(
        SYNOPSYS_UNCONNECTED_48) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_19 ( .si(net170849), .d(N68), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_19_), .so(
        SYNOPSYS_UNCONNECTED_49) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_21 ( .si(net170849), .d(N66), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_21_), .so(
        SYNOPSYS_UNCONNECTED_50) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_22 ( .si(net170849), .d(N65), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_22_), .so(
        SYNOPSYS_UNCONNECTED_51) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_23 ( .si(net170849), .d(N64), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_23_), .so(
        SYNOPSYS_UNCONNECTED_52) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_25 ( .si(net170849), .d(N62), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_25_), .so(
        SYNOPSYS_UNCONNECTED_53) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_1 ( .si(net170849), .d(N86), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_1_), .so(
        SYNOPSYS_UNCONNECTED_54) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_2 ( .si(net170849), .d(N85), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_2_), .so(
        SYNOPSYS_UNCONNECTED_55) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_3 ( .si(net170849), .d(N84), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_3_), .so(
        SYNOPSYS_UNCONNECTED_56) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_5 ( .si(net170849), .d(N82), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_5_), .so(
        SYNOPSYS_UNCONNECTED_57) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_6 ( .si(net170849), .d(N81), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_6_), .so(
        SYNOPSYS_UNCONNECTED_58) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_7 ( .si(net170849), .d(N80), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_7_), .so(
        SYNOPSYS_UNCONNECTED_59) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_9 ( .si(net170849), .d(N78), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_9_), .so(
        SYNOPSYS_UNCONNECTED_60) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_10 ( .si(net170849), .d(N77), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_10_), .so(
        SYNOPSYS_UNCONNECTED_61) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_11 ( .si(net170849), .d(N76), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_11_), .so(
        SYNOPSYS_UNCONNECTED_62) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_26 ( .si(net170849), .d(N61), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_26_), .so(
        SYNOPSYS_UNCONNECTED_63) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_27 ( .si(net170849), .d(N60), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_27_), .so(
        SYNOPSYS_UNCONNECTED_64) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_29 ( .si(net170849), .d(N58), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_29_), .so(
        SYNOPSYS_UNCONNECTED_65) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_30 ( .si(net170849), .d(N57), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_30_), .so(
        SYNOPSYS_UNCONNECTED_66) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_31 ( .si(net170849), .d(N56), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_31_), .so(
        SYNOPSYS_UNCONNECTED_67) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_16 ( .si(net170849), .d(N71), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_16_), .so(
        SYNOPSYS_UNCONNECTED_68) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_20 ( .si(net170849), .d(N67), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_20_), .so(
        SYNOPSYS_UNCONNECTED_69) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_24 ( .si(net170849), .d(N63), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_24_), .so(
        SYNOPSYS_UNCONNECTED_70) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_4 ( .si(net170849), .d(N83), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_4_), .so(
        SYNOPSYS_UNCONNECTED_71) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_8 ( .si(net170849), .d(N79), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_8_), .so(
        SYNOPSYS_UNCONNECTED_72) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_12 ( .si(net170849), .d(N75), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_12_), .so(
        SYNOPSYS_UNCONNECTED_73) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_28 ( .si(net170849), .d(N59), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_28_), .so(
        SYNOPSYS_UNCONNECTED_74) );
  i0sfag003ab1d12x5 q_SCAN_IN_reg_0 ( .si(net170849), .d(N87), .ssb(n199), 
        .clk(BIST_CLK_INT), .rb(n420), .o(q_FROM_BYPASS_0_), .so(
        SYNOPSYS_UNCONNECTED_75) );
  i0snorb02ab1n03x4 U146 ( .a(n203), .b(FREEZE_STOP_ERROR_CLEAR), .out0(n46)
         );
  i0snorb02ab1n02x5 U223 ( .a(CHKBCI_PHASE), .b(n38), .out0(n123) );
  i0sxo2na2ab1n03x5 U3 ( .c(CHKBCI_PHASE), .a(n33), .b(BIST_COL_ADD[0]), 
        .out0(n780) );
  i0sinv020tb1n02x5 U5 ( .a(n34), .o1(n33) );
  i0sbfn000ab1n06x5 U7 ( .a(n520), .o(n320) );
  i0smdn022ab1n03x5 U8 ( .b(EDATA_CKB_EN_PIPE_0), .a(CHKBCI_PHASE), .sa(
        BIST_COLLAR_OPSET_SELECT), .o1(n490) );
  i0sbff000ab1n04x5 U9 ( .a(CHKBCI_PHASE), .o(n610) );
  i0sinv040ab1n03x5 U10 ( .a(n490), .o1(n210) );
  i0sinv030ab1n02x5 U11 ( .a(n490), .o1(n520) );
  i0snanp02ab1n03x5 U12 ( .a(n400), .b(n490), .o1(n530) );
  i0snand42ab1n04x5 U13 ( .a(n530), .b(n510), .o1(n560) );
  i0sinv000tb1n02x5 U14 ( .a(BIST_EXPECT_DATA[3]), .o1(n400) );
  i0sorn002ab1n02x7 U15 ( .a(n490), .b(n500), .o(n48) );
  i0sinv020tb1n02x5 U16 ( .a(BIST_WRITE_DATA[0]), .o1(n34) );
  i0sinv030ab1n04x5 U17 ( .a(n48), .o1(n531) );
  i0sinv030ab1n06x5 U18 ( .a(n37), .o1(n36) );
  i0sinv000tb1n03x5 U19 ( .a(n200), .o1(n240) );
  i0smbn022ab1n03x5 U20 ( .b(wen_IN), .a(wen_TEST_IN), .sa(n220), .o(
        wen_NOT_GATED) );
  i0sxnr002ab1n03x5 U21 ( .a(adr[0]), .b(adr[1]), .out0(n881) );
  i0sxnr002ab1n03x5 U22 ( .a(adr[3]), .b(adr[4]), .out0(n89) );
  i0sxnr002ab1n03x5 U23 ( .a(adr[6]), .b(adr[7]), .out0(n911) );
  i0snor003ab1n02x5 U24 ( .a(BIST_RUN), .b(BIST_COLLAR_SETUP), .c(
        BIST_CLEAR_DEFAULT), .o1(n94) );
  i0smkn022ab1n02x5 U25 ( .b(adr_IN[0]), .a(BIST_COL_ADD[0]), .sa(n230), .o(
        adr[0]) );
  i0smkn022ab1n02x5 U26 ( .b(adr_IN[2]), .a(BIST_ROW_ADD[0]), .sa(n230), .o(
        adr[2]) );
  i0smkn022ab1n03x5 U27 ( .b(adr_IN[3]), .a(BIST_ROW_ADD[1]), .sa(n230), .o(
        adr[3]) );
  i0smkn022ab1n03x5 U28 ( .b(adr_IN[4]), .a(BIST_ROW_ADD[2]), .sa(n230), .o(
        adr[4]) );
  i0smkn022ab1n03x5 U29 ( .b(adr_IN[5]), .a(BIST_ROW_ADD[3]), .sa(n230), .o(
        adr[5]) );
  i0smkn022ab1n03x5 U30 ( .b(adr_IN[6]), .a(BIST_ROW_ADD[4]), .sa(n230), .o(
        adr[6]) );
  i0smkn022ab1n03x5 U31 ( .b(adr_IN[7]), .a(BIST_ROW_ADD[5]), .sa(n220), .o(
        adr[7]) );
  i0smkn022ab1n03x5 U32 ( .b(adr_IN[8]), .a(BIST_ROW_ADD[6]), .sa(n220), .o(
        adr[8]) );
  i0sinv030tb1n02x5 U33 ( .a(BIST_SHIFT_BIRA_COLLAR), .o1(n37) );
  i0soab012ab1n02x5 U34 ( .b(n401), .c(n36), .a(LV_TM), .out0(INJECT_TCK) );
  i0sxnr002ab1n02x5 U35 ( .a(q[14]), .b(n55), .out0(N17) );
  i0soai012ab1n06x5 U36 ( .b(BIST_EXPECT_DATA[2]), .c(n320), .a(n510), .o1(n55) );
  i0soai012ab1n06x5 U37 ( .b(BIST_EXPECT_DATA[1]), .c(n320), .a(n510), .o1(n54) );
  i0sinv000ab1n09x5 U38 ( .a(n43), .o1(n420) );
  i0sbff000ab1n09x5 U39 ( .a(BIST_EXPECT_DATA[0]), .o(n35) );
  i0sbfn000ab1n06x5 U40 ( .a(n560), .o(n710) );
  i0sbfn000ab1n06x5 U41 ( .a(n560), .o(n880) );
  i0sxo2na2ab1n06x5 U42 ( .c(n210), .a(n500), .b(n35), .out0(n510) );
  i0sinv020ab1n08x5 U43 ( .a(n200), .o1(n250) );
  i0sinv000pb1n09x5 U44 ( .a(n211), .o1(n230) );
  i0sinv000ab1n02x5 U45 ( .a(n211), .o1(n220) );
  i0saoib12ab1n02x7 U46 ( .c(n45), .b(LV_TM), .a(n97), .out0(n_1508_net_0) );
  i0snorp02ab1n02x5 U47 ( .a(BIST_TESTDATA_SELECT_TO_COLLAR), .b(BIST_RUN), 
        .o1(n93) );
  i0sinv020tb1n02x5 U48 ( .a(N42), .o1(n180) );
  i0sinv030tb1n02x5 U49 ( .a(n180), .o1(n190) );
  i0sxnr002ab1n03x5 U50 ( .a(ren_NOT_GATED), .b(wen_NOT_GATED), .out0(n92) );
  i0sinv020ab1n03x5 U51 ( .a(n620), .o1(n96) );
  i0smkn022ab1n02x5 U52 ( .b(din_IN[1]), .a(BIST_WRITE_DATA_INT_9_), .sa(n250), 
        .o(din[1]) );
  i0smkn022ab1n02x5 U53 ( .b(din_IN[2]), .a(BIST_WRITE_DATA_INT_6_), .sa(n250), 
        .o(din[2]) );
  i0smkn022ab1n02x5 U54 ( .b(din_IN[3]), .a(BIST_WRITE_DATA_INT_7_), .sa(n250), 
        .o(din[3]) );
  i0sinv020ab1n06x5 U55 ( .a(n39), .o1(n38) );
  i0sxord22ab1n02x5 U56 ( .a(n35), .b(q[0]), .oxnr(n170), .oxor(
        SYNOPSYS_UNCONNECTED_76) );
  i0snorp02ab1n03x5 U57 ( .a(n881), .b(n47), .o1(N52) );
  i0sinv040ab1n03x5 U58 ( .a(REPAIR_STATUS[1]), .o1(n860) );
  i0sorn002ab1n02x5 U59 ( .a(RepairableBySpareRow), .b(RepairableBySpareColumn), .o(n640) );
  i0sinv000ab1n02x5 U60 ( .a(ErrorGlobal), .o1(n660) );
  i0snorp02ab1n02x5 U61 ( .a(BIST_COLLAR_HOLD), .b(n401), .o1(n910) );
  i0soai012ab1n02x5 U62 ( .b(n610), .c(n34), .a(n780), .o1(
        BIST_WRITE_DATA_INT_8_) );
  i0sinv040ab1n03x5 U63 ( .a(BIST_CLEAR), .o1(n39) );
  i0sxnr002ab1n02x5 U64 ( .a(q[28]), .b(n35), .out0(n100) );
  i0sxnr002ab1n02x5 U65 ( .a(q[24]), .b(n35), .out0(n111) );
  i0sxnr002ab1n02x5 U66 ( .a(q[20]), .b(n35), .out0(n121) );
  i0sxnr002ab1n02x5 U67 ( .a(q[16]), .b(n35), .out0(n130) );
  i0sxnr002ab1n02x5 U68 ( .a(q[12]), .b(n35), .out0(n140) );
  i0sxnr002ab1n02x5 U69 ( .a(q[8]), .b(n35), .out0(n150) );
  i0sxnr002ab1n02x5 U70 ( .a(q[4]), .b(n35), .out0(n160) );
  i0smkn022ab1n02x5 U71 ( .b(din_IN[4]), .a(BIST_WRITE_DATA_INT_8_), .sa(n250), 
        .o(din[4]) );
  i0smkn022ab1n02x5 U72 ( .b(din_IN[8]), .a(BIST_WRITE_DATA_INT_8_), .sa(n250), 
        .o(din[8]) );
  i0smkn022ab1n02x5 U73 ( .b(din_IN[12]), .a(BIST_WRITE_DATA_INT_8_), .sa(n250), .o(din[12]) );
  i0smkn022ab1n02x5 U74 ( .b(din_IN[28]), .a(BIST_WRITE_DATA_INT_8_), .sa(n230), .o(din[28]) );
  i0smkn022ab1n02x5 U75 ( .b(din_IN[16]), .a(BIST_WRITE_DATA_INT_8_), .sa(n240), .o(din[16]) );
  i0smkn022ab1n02x5 U76 ( .b(din_IN[20]), .a(BIST_WRITE_DATA_INT_8_), .sa(n240), .o(din[20]) );
  i0smkn022ab1n02x5 U77 ( .b(din_IN[24]), .a(BIST_WRITE_DATA_INT_8_), .sa(n240), .o(din[24]) );
  i0snano22ab1n02x4 U78 ( .b(n36), .c(REPAIR_STATUS[0]), .a(BIST_CLEAR_BIRA), 
        .out0(n690) );
  i0snorp02ab1n02x5 U79 ( .a(FREEZE_STOP_ERROR_EARLY_R), .b(n401), .o1(n760)
         );
  i0sxord22ab1n02x5 U80 ( .a(BIST_INPUT_SELECT), .b(
        BIST_TESTDATA_SELECT_TO_COLLAR), .oxnr(n95), .oxor(
        SYNOPSYS_UNCONNECTED_77) );
  i0smkn022ab1n04x5 U81 ( .b(BIST_ROW_ADD_PIPE_0_0_), .a(BIST_ROW_ADD[0]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_0_) );
  i0smkn022ab1n04x5 U82 ( .b(BIST_ROW_ADD_PIPE_0_1_), .a(BIST_ROW_ADD[1]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_1_) );
  i0smkn022ab1n04x5 U83 ( .b(BIST_ROW_ADD_PIPE_0_2_), .a(BIST_ROW_ADD[2]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_2_) );
  i0smkn022ab1n04x5 U84 ( .b(BIST_ROW_ADD_PIPE_0_3_), .a(BIST_ROW_ADD[3]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_3_) );
  i0smkn022ab1n04x5 U85 ( .b(BIST_ROW_ADD_PIPE_0_4_), .a(BIST_ROW_ADD[4]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_4_) );
  i0smkn022ab1n04x5 U86 ( .b(BIST_ROW_ADD_PIPE_0_5_), .a(BIST_ROW_ADD[5]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_5_) );
  i0smkn022ab1n04x5 U87 ( .b(BIST_ROW_ADD_PIPE_0_6_), .a(BIST_ROW_ADD[6]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o(BIST_ROW_ADD_R1_6_) );
  i0smbn022ab1n02x5 U88 ( .b(adr_IN[1]), .a(BIST_COL_ADD[1]), .sa(n230), .o(
        adr[1]) );
  i0snorp02ab1n02x5 U89 ( .a(GO_EN), .b(n830), .o1(FREEZE_STOP_ERROR_CLEAR) );
  i0snanp03ab1n02x5 U90 ( .a(ERROR_CNT_ZERO), .b(BIST_ON), .c(GO_EN), .o1(n820) );
  i0soai013ab1n02x4 U91 ( .b(n640), .c(RepairedBySpareRow), .d(
        RepairedBySpareColumn), .a(BIST_BIRA_EN), .o1(n650) );
  i0smdn022ab1n02x4 U92 ( .b(n870), .a(n860), .sa(n850), .o1(BIST_SO) );
  i0sinv000ab1n02x5 U93 ( .a(FREEZE_STOP_ERROR_EARLY_R), .o1(n870) );
  i0sinv000tb1n03x5 U94 ( .a(n290), .o1(n310) );
  i0sinv000tb1n03x5 U95 ( .a(n290), .o1(n300) );
  i0sinv000tb1n03x5 U96 ( .a(n270), .o1(n290) );
  i0sinv000tb1n03x5 U97 ( .a(n280), .o1(n321) );
  i0sinv000tb1n03x5 U98 ( .a(n270), .o1(n280) );
  i0sinv000tb1n03x5 U99 ( .a(n260), .o1(n270) );
  i0sinv000tb1n03x5 U100 ( .a(n45), .o1(n260) );
  i0sinv000tb1n03x5 U101 ( .a(n41), .o1(n401) );
  i0sinv000tb1n03x5 U102 ( .a(BIST_SHIFT_COLLAR), .o1(n41) );
  i0sinv000tb1n03x5 U103 ( .a(n47), .o1(n45) );
  i0soaib12ab1n02x5 U104 ( .c(BIST_WRITE_DATA[1]), .b(n610), .a(n780), .out0(
        BIST_WRITE_DATA_INT_9_) );
  i0soaib12ab1n02x5 U105 ( .c(BIST_WRITE_DATA[2]), .b(n610), .a(n780), .out0(
        BIST_WRITE_DATA_INT_6_) );
  i0soaib12ab1n02x5 U106 ( .c(BIST_WRITE_DATA[3]), .b(n610), .a(n780), .out0(
        BIST_WRITE_DATA_INT_7_) );
  i0sinv000tb1n03x5 U107 ( .a(MEM_BYPASS_EN), .o1(n47) );
  i0sbff000ab1n02x5 U108 ( .a(MCP_BOUNDING_EN), .o(n44) );
  i0sinv000tb1n03x5 U109 ( .a(BIST_ASYNC_RESETN), .o1(n43) );
  i0soai012ab1n03x5 U110 ( .b(SCAN_SHIFT_EN), .c(n45), .a(LV_TM), .o1(n110) );
  i0sxnr002ab1n03x5 U111 ( .a(q[31]), .b(n710), .out0(N0) );
  i0sxnr002ab1n03x5 U112 ( .a(q[27]), .b(n710), .out0(N4) );
  i0sxnr002ab1n03x5 U113 ( .a(q[23]), .b(n710), .out0(N8) );
  i0sxnr002ab1n03x5 U114 ( .a(q[19]), .b(n710), .out0(N12) );
  i0sxnr002ab1n03x5 U115 ( .a(q[15]), .b(n880), .out0(N16) );
  i0sxnr002ab1n03x5 U116 ( .a(q[11]), .b(n880), .out0(N20) );
  i0sxnr002ab1n03x5 U117 ( .a(q[7]), .b(n880), .out0(N24) );
  i0sxnr002ab1n03x5 U118 ( .a(q[3]), .b(n880), .out0(N28) );
  i0sxnr002ab1n03x5 U119 ( .a(q[29]), .b(n54), .out0(N2) );
  i0sxnr002ab1n03x5 U120 ( .a(q[1]), .b(n54), .out0(N30) );
  i0sxnr002ab1n03x5 U121 ( .a(q[30]), .b(n55), .out0(N1) );
  i0sxnr002ab1n03x5 U122 ( .a(q[26]), .b(n55), .out0(N5) );
  i0sxnr002ab1n03x5 U123 ( .a(q[22]), .b(n55), .out0(N9) );
  i0sxnr002ab1n03x5 U124 ( .a(q[18]), .b(n55), .out0(N13) );
  i0sxnr002ab1n03x5 U125 ( .a(q[10]), .b(n55), .out0(N21) );
  i0sxnr002ab1n03x5 U126 ( .a(q[6]), .b(n55), .out0(N25) );
  i0sxnr002ab1n03x5 U127 ( .a(q[2]), .b(n55), .out0(N29) );
  i0sxnr002ab1n03x5 U128 ( .a(q[25]), .b(n54), .out0(N6) );
  i0sxnr002ab1n03x5 U129 ( .a(q[21]), .b(n54), .out0(N10) );
  i0sxnr002ab1n03x5 U130 ( .a(q[17]), .b(n54), .out0(N14) );
  i0sxnr002ab1n03x5 U131 ( .a(q[13]), .b(n54), .out0(N18) );
  i0sxnr002ab1n03x5 U132 ( .a(q[9]), .b(n54), .out0(N22) );
  i0sxnr002ab1n03x5 U133 ( .a(q[5]), .b(n54), .out0(N26) );
  i0sxnr002ab1n03x5 U134 ( .a(n531), .b(n100), .out0(N3) );
  i0sxnr002ab1n03x5 U135 ( .a(n531), .b(n111), .out0(N7) );
  i0sxnr002ab1n03x5 U136 ( .a(n531), .b(n121), .out0(N11) );
  i0sxnr002ab1n03x5 U137 ( .a(n531), .b(n130), .out0(N15) );
  i0sxnr002ab1n03x5 U138 ( .a(n531), .b(n140), .out0(N19) );
  i0sxnr002ab1n03x5 U139 ( .a(n531), .b(n150), .out0(N23) );
  i0sxnr002ab1n03x5 U140 ( .a(n531), .b(n160), .out0(N27) );
  i0sxnr002ab1n03x5 U141 ( .a(n531), .b(n170), .out0(N31) );
  i0sinv000tb1n03x5 U142 ( .a(ERROR_0_), .o1(n800) );
  i0sinv000tb1n03x5 U143 ( .a(n190), .o1(n211) );
  i0sinv000tb1n03x5 U144 ( .a(n190), .o1(n200) );
  i0smkn022ab1n03x5 U145 ( .b(din_IN[0]), .a(BIST_WRITE_DATA_INT_8_), .sa(n250), .o(din[0]) );
  i0smkn022ab1n02x5 U147 ( .b(din_IN[5]), .a(BIST_WRITE_DATA_INT_9_), .sa(n250), .o(din[5]) );
  i0smkn022ab1n02x5 U148 ( .b(din_IN[6]), .a(BIST_WRITE_DATA_INT_6_), .sa(n250), .o(din[6]) );
  i0smkn022ab1n02x5 U149 ( .b(din_IN[7]), .a(BIST_WRITE_DATA_INT_7_), .sa(n250), .o(din[7]) );
  i0smkn022ab1n02x5 U150 ( .b(din_IN[9]), .a(BIST_WRITE_DATA_INT_9_), .sa(n250), .o(din[9]) );
  i0smkn022ab1n02x5 U151 ( .b(din_IN[10]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n250), .o(din[10]) );
  i0smkn022ab1n02x5 U152 ( .b(din_IN[11]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n250), .o(din[11]) );
  i0smkn022ab1n02x5 U153 ( .b(din_IN[13]), .a(BIST_WRITE_DATA_INT_9_), .sa(
        n240), .o(din[13]) );
  i0smkn022ab1n02x5 U154 ( .b(din_IN[14]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n240), .o(din[14]) );
  i0smkn022ab1n02x5 U155 ( .b(din_IN[15]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n240), .o(din[15]) );
  i0smkn022ab1n02x5 U156 ( .b(din_IN[17]), .a(BIST_WRITE_DATA_INT_9_), .sa(
        n240), .o(din[17]) );
  i0smkn022ab1n02x5 U157 ( .b(din_IN[18]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n240), .o(din[18]) );
  i0smkn022ab1n02x5 U158 ( .b(din_IN[19]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n240), .o(din[19]) );
  i0smkn022ab1n02x5 U159 ( .b(din_IN[21]), .a(BIST_WRITE_DATA_INT_9_), .sa(
        n240), .o(din[21]) );
  i0smkn022ab1n02x5 U160 ( .b(din_IN[22]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n240), .o(din[22]) );
  i0smkn022ab1n02x5 U161 ( .b(din_IN[23]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n240), .o(din[23]) );
  i0smkn022ab1n02x5 U162 ( .b(din_IN[25]), .a(BIST_WRITE_DATA_INT_9_), .sa(
        n240), .o(din[25]) );
  i0smkn022ab1n02x5 U164 ( .b(din_IN[26]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n230), .o(din[26]) );
  i0smkn022ab1n02x5 U165 ( .b(din_IN[27]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n230), .o(din[27]) );
  i0smkn022ab1n02x5 U166 ( .b(din_IN[29]), .a(BIST_WRITE_DATA_INT_9_), .sa(
        n230), .o(din[29]) );
  i0smkn022ab1n02x5 U167 ( .b(din_IN[30]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n230), .o(din[30]) );
  i0smkn022ab1n02x5 U168 ( .b(din_IN[31]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n230), .o(din[31]) );
  i0sxo2no2ab1n03x5 U169 ( .c(n47), .a(n92), .b(adr[8]), .out0(N49) );
  i0sxo2no2ab1n03x5 U170 ( .c(n47), .a(n89), .b(adr[2]), .out0(N51) );
  i0sxo2no2ab1n03x5 U171 ( .c(n47), .a(n911), .b(adr[5]), .out0(N50) );
  i0snand03ab1n02x5 U173 ( .a(n590), .b(n580), .c(n570), .o1(n204) );
  i0snanp02ab1n02x5 U174 ( .a(REPAIR_STATUS[0]), .b(n96), .o1(n580) );
  i0snanb04ab1n03x5 U175 ( .a(n670), .b(n640), .c(BIST_BIRA_EN), .d(
        ErrorGlobal), .out0(n590) );
  i0snorb02ab1n02x5 U176 ( .a(REPAIR_STATUS[1]), .b(n620), .out0(n700) );
  i0sinv000tb1n02x5 U177 ( .a(BIST_INPUT_SELECT), .o1(n97) );
  i0smbn022ab1n03x5 U178 ( .b(q_IN[0]), .a(q_FROM_BYPASS_0_), .sa(n321), .o(
        q[0]) );
  i0smbn022ab1n03x5 U179 ( .b(q_IN[4]), .a(q_FROM_BYPASS_4_), .sa(n321), .o(
        q[4]) );
  i0smbn022ab1n03x5 U180 ( .b(q_IN[8]), .a(q_FROM_BYPASS_8_), .sa(n321), .o(
        q[8]) );
  i0smbn022ab1n03x5 U182 ( .b(q_IN[12]), .a(q_FROM_BYPASS_12_), .sa(n321), .o(
        q[12]) );
  i0smbn022ab1n03x5 U183 ( .b(q_IN[16]), .a(q_FROM_BYPASS_16_), .sa(n310), .o(
        q[16]) );
  i0smbn022ab1n03x5 U184 ( .b(q_IN[20]), .a(q_FROM_BYPASS_20_), .sa(n310), .o(
        q[20]) );
  i0smbn022ab1n03x5 U185 ( .b(q_IN[24]), .a(q_FROM_BYPASS_24_), .sa(n310), .o(
        q[24]) );
  i0smbn022ab1n03x5 U186 ( .b(q_IN[28]), .a(q_FROM_BYPASS_28_), .sa(n300), .o(
        q[28]) );
  i0smbn022ab1n03x5 U187 ( .b(q_IN[1]), .a(q_FROM_BYPASS_1_), .sa(n321), .o(
        q[1]) );
  i0smbn022ab1n03x5 U188 ( .b(q_IN[29]), .a(q_FROM_BYPASS_29_), .sa(n300), .o(
        q[29]) );
  i0smbn022ab1n03x5 U189 ( .b(q_IN[2]), .a(q_FROM_BYPASS_2_), .sa(n321), .o(
        q[2]) );
  i0smbn022ab1n03x5 U191 ( .b(q_IN[6]), .a(q_FROM_BYPASS_6_), .sa(n321), .o(
        q[6]) );
  i0smbn022ab1n03x5 U192 ( .b(q_IN[10]), .a(q_FROM_BYPASS_10_), .sa(n321), .o(
        q[10]) );
  i0smbn022ab1n03x5 U193 ( .b(q_IN[14]), .a(q_FROM_BYPASS_14_), .sa(n310), .o(
        q[14]) );
  i0smbn022ab1n03x5 U194 ( .b(q_IN[18]), .a(q_FROM_BYPASS_18_), .sa(n310), .o(
        q[18]) );
  i0smbn022ab1n03x5 U195 ( .b(q_IN[22]), .a(q_FROM_BYPASS_22_), .sa(n310), .o(
        q[22]) );
  i0smbn022ab1n03x5 U196 ( .b(q_IN[26]), .a(q_FROM_BYPASS_26_), .sa(n300), .o(
        q[26]) );
  i0smbn022ab1n03x5 U197 ( .b(q_IN[30]), .a(q_FROM_BYPASS_30_), .sa(n300), .o(
        q[30]) );
  i0smbn022ab1n03x5 U198 ( .b(q_IN[5]), .a(q_FROM_BYPASS_5_), .sa(n321), .o(
        q[5]) );
  i0smbn022ab1n03x5 U200 ( .b(q_IN[9]), .a(q_FROM_BYPASS_9_), .sa(n321), .o(
        q[9]) );
  i0smbn022ab1n03x5 U201 ( .b(q_IN[13]), .a(q_FROM_BYPASS_13_), .sa(n310), .o(
        q[13]) );
  i0smbn022ab1n03x5 U202 ( .b(q_IN[17]), .a(q_FROM_BYPASS_17_), .sa(n310), .o(
        q[17]) );
  i0smbn022ab1n03x5 U203 ( .b(q_IN[21]), .a(q_FROM_BYPASS_21_), .sa(n310), .o(
        q[21]) );
  i0smbn022ab1n03x5 U204 ( .b(q_IN[25]), .a(q_FROM_BYPASS_25_), .sa(n310), .o(
        q[25]) );
  i0smbn022ab1n03x5 U205 ( .b(q_IN[3]), .a(q_FROM_BYPASS_3_), .sa(n321), .o(
        q[3]) );
  i0smbn022ab1n03x5 U206 ( .b(q_IN[7]), .a(q_FROM_BYPASS_7_), .sa(n321), .o(
        q[7]) );
  i0smbn022ab1n03x5 U207 ( .b(q_IN[11]), .a(q_FROM_BYPASS_11_), .sa(n321), .o(
        q[11]) );
  i0smbn022ab1n03x5 U209 ( .b(q_IN[15]), .a(q_FROM_BYPASS_15_), .sa(n310), .o(
        q[15]) );
  i0smbn022ab1n03x5 U210 ( .b(q_IN[19]), .a(q_FROM_BYPASS_19_), .sa(n310), .o(
        q[19]) );
  i0smbn022ab1n03x5 U211 ( .b(q_IN[23]), .a(q_FROM_BYPASS_23_), .sa(n310), .o(
        q[23]) );
  i0smbn022ab1n03x5 U212 ( .b(q_IN[27]), .a(q_FROM_BYPASS_27_), .sa(n300), .o(
        q[27]) );
  i0smbn022ab1n03x5 U213 ( .b(q_IN[31]), .a(q_FROM_BYPASS_31_), .sa(n300), .o(
        q[31]) );
  i0snorb03ab1n02x5 U214 ( .a(BIST_SETUP2), .b(BIST_SETUP1), .c(BIST_SETUP0), 
        .out0(n850) );
  i0stilo00ab1n02x5 U215 ( .o(net170849) );
  i0stihi00ab1n02x5 U216 ( .o(n199) );
  i0smbn022ab1n06x5 U218 ( .b(ren_IN), .a(ren_TEST_IN), .sa(n220), .o(
        ren_NOT_GATED) );
  i0smdn022ab1n03x4 U219 ( .b(EDATA_COL_ADD_BIT0_PIPE_0), .a(BIST_COL_ADD[0]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o1(n500) );
  i0sorn002ab1n03x5 U221 ( .a(n36), .b(BIST_CLEAR_BIRA), .o(n620) );
  i0snanb03ab1n03x5 U222 ( .a(BIST_COLLAR_HOLD), .b(n96), .c(GO_EN), .out0(
        n670) );
  i0snanb03ab1n03x5 U224 ( .a(BIST_CLEAR_BIRA), .b(n36), .c(ROW_BIRA_SO), 
        .out0(n570) );
  i0snanb03ab1n03x5 U225 ( .a(BIST_CLEAR_BIRA), .b(GO_EN), .c(n910), .out0(
        n711) );
  i0snona22ab1n03x5 U227 ( .b(BIST_CLEAR_BIRA), .c(n401), .a(n711), .out0(n750) );
  i0snanb03ab1n03x5 U228 ( .a(BIST_CLEAR_BIRA), .b(n401), .c(BIST_SI), .out0(
        n611) );
  i0snanb02ab1n03x5 U229 ( .a(n711), .b(REPAIR_STATUS[0]), .out0(n600) );
  i0soabi13ab1n03x5 U230 ( .c(REPAIR_STATUS_SHADOW_0_), .d(n750), .a(n611), 
        .b(n600), .o1(n207) );
  i0snona22ab1n03x5 U231 ( .b(n670), .c(n660), .a(n650), .out0(n680) );
  i0snona22ab1n03x5 U232 ( .b(n700), .c(n690), .a(n680), .out0(n205) );
  i0snanb03ab1n03x5 U233 ( .a(BIST_CLEAR_BIRA), .b(n401), .c(
        REPAIR_STATUS_SHADOW_0_), .out0(n740) );
  i0snanb02ab1n03x5 U234 ( .a(n711), .b(REPAIR_STATUS[1]), .out0(n730) );
  i0soabi13ab1n03x5 U235 ( .c(REPAIR_STATUS_SHADOW_1_), .d(n750), .a(n740), 
        .b(n730), .o1(n206) );
  i0sorn003ab1n03x7 U236 ( .a(FREEZE_STOP_ERROR), .b(BIST_COLLAR_HOLD), .c(
        FREEZE_STOP_ERROR_EARLY_R), .o(BIST_COLLAR_HOLD_INT) );
  i0smdn022ab1n03x4 U237 ( .b(BIST_COLLAR_EN_PIPE_0), .a(BIST_COLLAR_EN), .sa(
        BIST_COLLAR_OPSET_SELECT), .o1(n770) );
  i0snanb03ab1n03x5 U238 ( .a(n770), .b(BIST_CMP), .c(n760), .out0(
        FREEZE_GO_ID) );
  i0sand002ab1n03x5 U239 ( .a(BIST_READENABLE), .b(BIST_COLLAR_EN), .o(
        ren_TEST_IN) );
  i0sand002ab1n03x5 U240 ( .a(BIST_WRITEENABLE), .b(BIST_COLLAR_EN), .o(
        wen_TEST_IN) );
  i0sand002ab1n03x5 U241 ( .a(din[0]), .b(n45), .o(N87) );
  i0sand002ab1n03x5 U242 ( .a(din[1]), .b(n45), .o(N86) );
  i0sand002ab1n03x5 U243 ( .a(din[2]), .b(n45), .o(N85) );
  i0sand002ab1n03x5 U244 ( .a(din[3]), .b(n45), .o(N84) );
  i0sand002ab1n03x5 U245 ( .a(din[4]), .b(n45), .o(N83) );
  i0sand002ab1n03x5 U246 ( .a(din[5]), .b(n45), .o(N82) );
  i0sand002ab1n03x5 U247 ( .a(din[6]), .b(n45), .o(N81) );
  i0sand002ab1n03x5 U248 ( .a(din[7]), .b(n45), .o(N80) );
  i0sand002ab1n03x5 U249 ( .a(din[8]), .b(n45), .o(N79) );
  i0sand002ab1n03x5 U250 ( .a(din[9]), .b(n45), .o(N78) );
  i0sand002ab1n03x5 U251 ( .a(din[10]), .b(n45), .o(N77) );
  i0sand002ab1n03x5 U252 ( .a(din[11]), .b(n45), .o(N76) );
  i0sand002ab1n03x5 U253 ( .a(din[12]), .b(n45), .o(N75) );
  i0sand002ab1n03x5 U254 ( .a(din[13]), .b(n45), .o(N74) );
  i0sand002ab1n03x5 U255 ( .a(din[14]), .b(n45), .o(N73) );
  i0sand002ab1n03x5 U256 ( .a(din[15]), .b(n45), .o(N72) );
  i0sand002ab1n03x5 U257 ( .a(din[16]), .b(n45), .o(N71) );
  i0sand002ab1n03x5 U258 ( .a(din[17]), .b(n45), .o(N70) );
  i0sand002ab1n03x5 U259 ( .a(din[18]), .b(n45), .o(N69) );
  i0sand002ab1n03x5 U260 ( .a(din[19]), .b(n45), .o(N68) );
  i0sand002ab1n03x5 U261 ( .a(din[20]), .b(n45), .o(N67) );
  i0sand002ab1n03x5 U262 ( .a(din[21]), .b(n45), .o(N66) );
  i0sand002ab1n03x5 U263 ( .a(din[22]), .b(n45), .o(N65) );
  i0sand002ab1n03x5 U264 ( .a(din[23]), .b(n45), .o(N64) );
  i0sand002ab1n03x5 U265 ( .a(din[24]), .b(n45), .o(N63) );
  i0sand002ab1n03x5 U266 ( .a(din[25]), .b(n45), .o(N62) );
  i0sand002ab1n03x5 U267 ( .a(din[26]), .b(n45), .o(N61) );
  i0sand002ab1n03x5 U268 ( .a(din[27]), .b(n45), .o(N60) );
  i0sand002ab1n03x5 U269 ( .a(din[28]), .b(n45), .o(N59) );
  i0sand002ab1n03x5 U270 ( .a(din[29]), .b(n45), .o(N58) );
  i0sand002ab1n03x5 U271 ( .a(din[30]), .b(n45), .o(N57) );
  i0sand002ab1n03x5 U272 ( .a(din[31]), .b(n45), .o(N56) );
  i0snanb02ab1n03x5 U273 ( .a(FREEZE_STOP_ERROR), .b(n910), .out0(n830) );
  i0smdn022ab1n03x4 U274 ( .b(FREEZE_STOP_ERROR_EARLY_R), .a(COLLAR_STATUS_SO), 
        .sa(n401), .o1(n790) );
  i0soai013ab1n03x5 U275 ( .b(n820), .c(n830), .d(n800), .a(n790), .o1(n203)
         );
  i0smdn022ab1n03x4 U276 ( .b(BIST_GO_FROM_STATUS), .a(n860), .sa(BIST_BIRA_EN), .o1(n840) );
  i0smdn022ab1n03x4 U277 ( .b(n840), .a(REPAIR_STATUS[0]), .sa(
        CHECK_REPAIR_NEEDED), .o1(BIST_GO) );
  i0smdn022ab1n03x4 U278 ( .b(n93), .a(n97), .sa(n44), .o1(n201) );
  i0snona24ab1n03x5 U279 ( .d(n38), .e(RESET_REG_SETUP2), .a(n96), .b(n95), 
        .c(n94), .out0(BIST_CLK_EN) );
endmodule

