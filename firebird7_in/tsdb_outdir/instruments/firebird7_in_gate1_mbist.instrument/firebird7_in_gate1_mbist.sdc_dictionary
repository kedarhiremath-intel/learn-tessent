#--------------------------------------------------------------------------
#
#  Unpublished work. Copyright 2022 Siemens
#
#  This material contains trade secrets or otherwise confidential 
#  information owned by Siemens Industry Software Inc. or its affiliates 
#  (collectively, SISW), or its licensors. Access to and use of this 
#  information is strictly limited as set forth in the Customer's 
#  applicable agreements with SISW.
#
#--------------------------------------------------------------------------
#  File created by: Tessent Shell
#          Version: 2022.4
#       Created on: Sun Oct 29 14:14:49 PDT 2023
#--------------------------------------------------------------------------



set firebird7_in_gate1_mbist {
  firebird7_in_gate1_tessent_mbist_c1_controller {
    version 3
    controller {
      mcp0 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?7?}
          }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG*} }
        }
        setup 2
        hold 1
      }
      mcp1 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?7?}
          }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG*} }
        }
        setup 2
        hold 1
      }
      mcp2 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG_reg?2?} }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG*} }
        }
        setup 2
        hold 1
      }
      mcp3 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG_reg?2?} }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG*} }
        }
        setup 2
        hold 1
      }
      mcp4 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_CTL_COMP/STOP_ON_ERROR*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp5 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_CTL_COMP/STOP_ON_ERROR*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_CTL_COMP/STOP_ON_ERROR*} }
        }
        setup 1
        hold 0
      }
      mcp6 {
        from {
          cells {{$tessent_controller_instance/BIRA_CONFIG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp7 {
        from {
          cells {{$tessent_controller_instance/BIRA_CONFIG*} }
        }
        to {
          cells {{$tessent_controller_instance/BIRA_CONFIG*} }
        }
        setup 1
        hold 0
      }
      mcp8 {
        from {
          cells {{$tessent_controller_instance/MICROCODE_EN_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp9 {
        from {
          cells {{$tessent_controller_instance/MICROCODE_EN_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MICROCODE_EN_REG*} }
        }
        setup 1
        hold 0
      }
      mcp10 {
        from {
          cells {{$tessent_controller_instance/ALGO_SEL_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp11 {
        from {
          cells {{$tessent_controller_instance/ALGO_SEL_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/ALGO_SEL_REG*} }
        }
        setup 1
        hold 0
      }
      mcp12 {
        from {
          cells {{$tessent_controller_instance/ALGO_SEL_CNT_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 3
        hold 2
      }
      mcp13 {
        from {
          cells {{$tessent_controller_instance/ALGO_SEL_CNT_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/ALGO_SEL_CNT_REG*} }
        }
        setup 1
        hold 0
      }
      mcp14 {
        from {
          cells {{$tessent_controller_instance/REDUCED_ADDR_CNT_EN_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp15 {
        from {
          cells {{$tessent_controller_instance/REDUCED_ADDR_CNT_EN_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/REDUCED_ADDR_CNT_EN_REG*} }
        }
        setup 1
        hold 0
      }
      mcp16 {
        from {
          cells {{$tessent_controller_instance/DIAG_EN_R*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp17 {
        from {
          cells {{$tessent_controller_instance/DIAG_EN_R*} }
        }
        to {
          cells {{$tessent_controller_instance/DIAG_EN_R*} }
        }
        setup 1
        hold 0
      }
      mcp18 {
        from {
          cells {{$tessent_controller_instance/BIRA_EN_R*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp19 {
        from {
          cells {{$tessent_controller_instance/BIRA_EN_R*} }
        }
        to {
          cells {{$tessent_controller_instance/BIRA_EN_R*} }
        }
        setup 1
        hold 0
      }
      mcp20 {
        from {
          cells {{$tessent_controller_instance/MEM_SELECT_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp21 {
        from {
          cells {{$tessent_controller_instance/MEM_SELECT_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MEM_SELECT_REG*} }
        }
        setup 1
        hold 0
      }
      mcp22 {
        from {
          cells {{$tessent_controller_instance/MEM_ARRAY_DUMP_MODE_R*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 3
        hold 2
      }
      mcp23 {
        from {
          cells {{$tessent_controller_instance/MEM_ARRAY_DUMP_MODE_R*} }
        }
        to {
          cells {{$tessent_controller_instance/MEM_ARRAY_DUMP_MODE_R*} }
        }
        setup 1
        hold 0
      }
      mcp24 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MIN*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp25 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MIN*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MIN*} }
        }
        setup 1
        hold 0
      }
      mcp26 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MAX*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp27 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MAX*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/Y_ADD_CNT_MAX*} }
        }
        setup 1
        hold 0
      }
      mcp28 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MIN*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp29 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MIN*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MIN*} }
        }
        setup 1
        hold 0
      }
      mcp30 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MAX*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp31 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MAX*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/X_ADD_CNT_MAX*} }
        }
        setup 1
        hold 0
      }
      mcp32 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {{$tessent_controller_instance/MBISTPG_POINTER_CNTRL/INSTRUCTION*_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE**} }
        }
        setup 2
        hold 1
      }
      mcp33 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_FSM/STATE*} }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_BIST_RUN/o} }
        }
        setup 2
        hold 1
      }
      mcp34 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE**}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/INST_POINTER*}
          }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_POINTER_CNTRL/LAST_STATE_DONE_REG*} }
        }
        setup 2
        hold 1
      }
      mcp35 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp36 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_REG*} }
        }
        setup 1
        hold 0
      }
      mcp37 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT_reg?1?}
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT_reg?0?}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT_reg?3?}
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT_reg?2?}
          }
        }
        setup 2
        hold 1
      }
      mcp38 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp39 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_REG*} }
        }
        setup 1
        hold 0
      }
      mcp40 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?3?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?2?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?1?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?0?}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?7?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?6?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?5?}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT_reg?4?}
          }
        }
        setup 2
        hold 1
      }
      mcp41 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?7?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?1?}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?15?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?14?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?13?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?12?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?11?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?10?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?9?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/ERROR_CNT_REG_reg?8?}
          }
        }
        setup 2
        hold 1
      }
      mcp42 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?7?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?1?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?0?}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?15?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?14?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?13?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?12?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?11?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?10?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?9?}
            {$tessent_controller_instance/MBISTPG_CTL_COMP/FL_CNT_REG_reg?8?}
          }
        }
        setup 2
        hold 1
      }
      mcp43 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD*_CMD**}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_LOOP_CMD**}
          }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?7?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?7?}
          }
        }
        setup 2
        hold 1
      }
      mcp44 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD*_CMD**}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_LOOP_CMD**}
          }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG_reg?2?}
          }
        }
        setup 2
        hold 1
      }
      mcp45 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE**}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/LAST_STATE_DONE_REG*}
            {$tessent_controller_instance/MBISTPG_FSM/RUNTEST_EN_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_SIGNAL_GEN/JCNT*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_A_CNTR*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_B_CNTR*}
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT*}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/INST_POINTER*}
          }
        }
        through {
          pins {
            {$tessent_controller_instance/tessent_persistent_cell_X1_MINMAX_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_X0_MINMAX_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_Y1_MINMAX_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_Y0_MINMAX_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_COUNTERA_ENDCOUNT_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_DELAYCOUNTER_ENDCOUNT_TRIGGER/o}
            {$tessent_controller_instance/tessent_persistent_cell_LOOPCOUNTMAX_TRIGGER/o}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/tessent_persistent_cell_NEXT_POINTER0/o}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/tessent_persistent_cell_NEXT_POINTER1/o}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/tessent_persistent_cell_NEXT_POINTER2/o}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/tessent_persistent_cell_NEXT_POINTER3/o}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/tessent_persistent_cell_NEXT_POINTER4/o}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE**}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_A_CNTR*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_B_CNTR*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/LAST_STATE_DONE_REG*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/INST_POINTER*}
            {$tessent_controller_instance/MBISTPG_FSM/RUNTEST_EN_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_FSM/STATE*}
          }
        }
        setup 2
        hold 1
      }
      mcp46 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {{$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE**} }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_A_CNTR*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_B_CNTR*}
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT*}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT*}
            {$tessent_controller_instance/MBISTPG_DATA_GEN/EDATA_REG*}
            {$tessent_controller_instance/MBISTPG_DATA_GEN/WDATA_REG*}
            {$tessent_controller_instance/MBISTPG_FSM/RUNTEST_EN_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_FSM/STATE*}
          }
        }
        setup 2
        hold 1
      }
      mcp47 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT_REG**} }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?1?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?1?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG_reg?1?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG_reg?0?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG_reg?1?}
          }
        }
        setup 1
        hold 0
      }
      mcp48 {
        from {
          clocks {{$tessent_bist_clock} }
        }
        through {
          cells {
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_A_CNTR*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_B_CNTR*}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG_reg?7?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?3?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?4?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?5?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?6?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG_reg?7?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG_reg?2?}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG_reg?2?}
          }
        }
        setup 2
        hold 1
      }
      mcp49 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/A_SCAN_REGISTER*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp50 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/A_SCAN_REGISTER*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/A_SCAN_REGISTER*} }
        }
        setup 1
        hold 0
      }
      mcp51 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/B_SCAN_REGISTER*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp52 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/B_SCAN_REGISTER*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_ADD_GEN/B_SCAN_REGISTER*} }
        }
        setup 1
        hold 0
      }
      mcp53 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_SIGNAL_GEN/OPSET_SELECT_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp54 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_SIGNAL_GEN/OPSET_SELECT_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_SIGNAL_GEN/OPSET_SELECT_REG*} }
        }
        setup 1
        hold 0
      }
      mcp55 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_MAX_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp56 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_MAX_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_MAX_REG*} }
        }
        setup 1
        hold 0
      }
      mcp57 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP_POINTER_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp58 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP_POINTER_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP_POINTER_REG*} }
        }
        setup 1
        hold 0
      }
      mcp59 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP1_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp60 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP1_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP1_REG*} }
        }
        setup 1
        hold 0
      }
      mcp61 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP2_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp62 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP2_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP2_REG*} }
        }
        setup 1
        hold 0
      }
      mcp63 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP3_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp64 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP3_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_A_LOOP3_REG*} }
        }
        setup 1
        hold 0
      }
      mcp65 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_MAX_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp66 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_MAX_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_MAX_REG*} }
        }
        setup 1
        hold 0
      }
      mcp67 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP_POINTER_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp68 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP_POINTER_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP_POINTER_REG*} }
        }
        setup 1
        hold 0
      }
      mcp69 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP1_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp70 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP1_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP1_REG*} }
        }
        setup 1
        hold 0
      }
      mcp71 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP2_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp72 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP2_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP2_REG*} }
        }
        setup 1
        hold 0
      }
      mcp73 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP3_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp74 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP3_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/CNTR_B_LOOP3_REG*} }
        }
        setup 1
        hold 0
      }
      mcp75 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/X_ADDR_BIT_SEL_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp76 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/X_ADDR_BIT_SEL_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/X_ADDR_BIT_SEL_REG*} }
        }
        setup 1
        hold 0
      }
      mcp77 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/Y_ADDR_BIT_SEL_REG*} }
        }
        to {
          clocks {{$tessent_bist_clock} }
        }
        setup 2
        hold 1
      }
      mcp78 {
        from {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/Y_ADDR_BIT_SEL_REG*} }
        }
        to {
          cells {{$tessent_controller_instance/MBISTPG_DATA_GEN/Y_ADDR_BIT_SEL_REG*} }
        }
        setup 1
        hold 0
      }
      mcp79 {
        through {
          pins {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_0/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_1/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_2/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_3/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_4/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_5/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_6/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_X_ADD_CNT_7/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_Y_ADD_CNT_0/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_Y_ADD_CNT_1/o}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/tessent_persistent_cell_Y_ADD_CNT_2/o}
          }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG*}
          }
        }
        setup 2
        hold 1
      }
      mcp80 {
        from {
          cells {
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT_REG2*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT_REG1*}
            {$tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT_REG0*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_A_CNTR*}
            {$tessent_controller_instance/MBISTPG_REPEAT_LOOP_CNTRL/LOOP_B_CNTR*}
            {$tessent_controller_instance/MBISTPG_COUNTER_A/COUNTERA_CNT*}
            {$tessent_controller_instance/MBISTPG_DELAYCOUNTER/DELAYCOUNTER_CNT*}
          }
        }
        through {
          pins {{$tessent_controller_instance/tessent_persistent_cell_INH_LAST_ADDR_CNT/o} }
        }
        to {
          cells {
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BX_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/AY_ADD_REG*}
            {$tessent_controller_instance/MBISTPG_ADD_GEN/BY_ADD_REG*}
          }
        }
        setup 2
        hold 1
      }
      mcp81 {
        from {
          cells {{$tessent_controller_instance/BIST_EN_RETIME2*} }
        }
        through {
          pins {
            {$tessent_controller_instance/tessent_persistent_cell_BIST_ON/o}
            {$tessent_controller_instance/tessent_persistent_cell_AND_DEFAULT_MODE/o}
          }
        }
        setup 2
        hold 1
      }
      sdt0 {
        targets {
          pins {{$tessent_controller_instance/tessent_persistent_cell_BIST_CLK_INT/s} }
        }
      }
      signals {
        go {
          persistent_buffer tessent_persistent_cell_MBISTPG_GO
        }
        done {
          persistent_buffer tessent_persistent_cell_MBISTPG_DONE
        }
        stable {
          persistent_buffer tessent_persistent_cell_MBISTPG_STABLE
        }
      }
    }
    interfaces {
      m1 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m2 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m3 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m4 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m5 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m6 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m7 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m8 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m9 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m10 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m11 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m12 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m13 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m14 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m15 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m16 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m17 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m18 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m19 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m20 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m21 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m22 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m23 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m24 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m25 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m26 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m27 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m28 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m29 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m30 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m31 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m32 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m33 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m34 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m35 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m36 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m37 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m38 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m39 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
      m40 {
        mcp0 {
          from {
            cells {{$tessent_interface_instance/BIST_INPUT_SELECT*} }
          }
          through {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_INPUT_SELECT_INT/o} }
          }
          setup 2
          hold 1
        }
        custom0 {
          code {set_multicycle_path -setup 2 -start \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \nset_multicycle_path -hold  1 -end   \\n    -from [get_clocks [list $tessent_bist_clock]] \\n    -through [get_cells [list $tessent_controller_instance/MBISTPG_POINTER_CNTRL/EXECUTE_ADD_REG_SELECT**]] \\n    -to   [get_cells $tessent_interface_instance/q_SCAN_IN*]  \n}
        }
        sdt0 {
          targets {
            pins {{$tessent_interface_instance/tessent_persistent_cell_BIST_CLK_OR_TCK/s} }
          }
        }
      }
    }
  }
  clock_gate_prefix tessent_persistent_cell_
  clock_mux_input1 clk1
  Cells {
    Buf {
      type LibraryCells
      module_name i0sbfn000ab1n02x5
      input a
      output o
    }
    ClkMux2 {
      type LibraryCells
      module_name i0scmbn22ab1n02x5
      input0 clk2
      input1 clk1
      select s
      output clkout
    }
    ClkBuf {
      type LibraryCells
      module_name i0scbf000ab1n02x5
      input clk
      output clkout
    }
    ClkGateAnd {
      type LibraryCells
      module_name i0scilb01ab1n02x5
      clock_in clk
      functional_enable_polarity 1
      functional_enable en
      test_enable_polarity 1
      test_enable te
      clock_out clkout
    }
  }
  firebird7_in_gate1_tessent_mbist_bap {
    version 9
    persistent_buffer_output_pin o
    persistent_clock_buffer_output_pin clkout
    persistent_mux_output_pin o
    include_async_interface OFF
    use_multicycle_paths on
    signals {
      bist_async_reset {
        persistent_buffer tessent_persistent_cell_BIST_ASYNC_RESET
        active_polarity active_low
      }
      tck_mode {
        persistent_buffer tessent_persistent_cell_TCK_MODE
      }
      bist_en_num 1
      bist_en0 {
        persistent_buffer tessent_persistent_cell_bistEn_0
      }
      bist_hold {
        persistent_buffer tessent_persistent_cell_BIST_HOLD
      }
      to_bist {
        register toBist
      }
      from_bist_retime {
        register fromBist_retime
      }
      mcp_tdr_buffers {
        tessent_persistent_cell_BIST_SETUP_2_buf
        tessent_persistent_cell_BIST_SETUP_1_buf
        tessent_persistent_cell_BIST_SETUP_0_buf
        tessent_persistent_cell_BIST_ASYNC_RESET
        tessent_persistent_cell_TCK_MODE
        tessent_persistent_cell_ENABLE_MEM_RESET_buf
        tessent_persistent_cell_REDUCED_ADDRESS_COUNT_buf
        tessent_persistent_cell_BIST_SELECT_TEST_DATA_buf
        tessent_persistent_cell_BIST_ALGO_MODE0_buf
        tessent_persistent_cell_BIST_ALGO_MODE1_buf
        tessent_persistent_cell_MEM_ARRAY_DUMP_MODE_buf
        tessent_persistent_cell_BIRA_EN_buf
        tessent_persistent_cell_BIST_DIAG_EN_buf
        tessent_persistent_cell_PRESERVE_FUSE_REGISTER_buf
        tessent_persistent_cell_CHECK_REPAIR_NEEDED_buf
        tessent_persistent_cell_FL_CNT_MODE0_buf
        tessent_persistent_cell_FL_CNT_MODE1_buf
        tessent_persistent_cell_INCLUDE_MEM_RESULTS_REG_buf
        tessent_persistent_cell_CHAIN_BYPASS_EN_buf
      }
      to_controllers_tck {
        pin tessent_persistent_cell_BUF_C_TCK/clkout
      }
      to_interfaces_tck {
        pin tessent_persistent_cell_BUF_I_TCK/clkout
      }
    }
  }
}