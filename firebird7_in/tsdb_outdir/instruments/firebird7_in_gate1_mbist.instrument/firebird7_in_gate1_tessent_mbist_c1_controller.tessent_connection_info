  # 
  # Connection Info dictionary for MemoryBist controller C1
  # 
  proc C1_ConnectionInfo.defaults {args} {
  # Setting default connection variables {{{
  set ControllerInfo(controllerInstancePath) -
  set ControllerInfo(instantiate_controller) yes
  set ControllerInfo(create_shared_bus_assembly) yes
  set ControllerInfo(create_controller_assembly) no
  set ControllerInfo(BIST_ON) BIST_ON
  set ControllerInfo(m1) -
  set ControllerInfo(m1_interface_instance) -
  set ControllerInfo(m2) -
  set ControllerInfo(m2_interface_instance) -
  set ControllerInfo(m3) -
  set ControllerInfo(m3_interface_instance) -
  set ControllerInfo(m4) -
  set ControllerInfo(m4_interface_instance) -
  set ControllerInfo(m5) -
  set ControllerInfo(m5_interface_instance) -
  set ControllerInfo(m6) -
  set ControllerInfo(m6_interface_instance) -
  set ControllerInfo(m7) -
  set ControllerInfo(m7_interface_instance) -
  set ControllerInfo(m8) -
  set ControllerInfo(m8_interface_instance) -
  set ControllerInfo(m9) -
  set ControllerInfo(m9_interface_instance) -
  set ControllerInfo(m10) -
  set ControllerInfo(m10_interface_instance) -
  set ControllerInfo(m11) -
  set ControllerInfo(m11_interface_instance) -
  set ControllerInfo(m12) -
  set ControllerInfo(m12_interface_instance) -
  set ControllerInfo(m13) -
  set ControllerInfo(m13_interface_instance) -
  set ControllerInfo(m14) -
  set ControllerInfo(m14_interface_instance) -
  set ControllerInfo(m15) -
  set ControllerInfo(m15_interface_instance) -
  set ControllerInfo(m16) -
  set ControllerInfo(m16_interface_instance) -
  set ControllerInfo(m17) -
  set ControllerInfo(m17_interface_instance) -
  set ControllerInfo(m18) -
  set ControllerInfo(m18_interface_instance) -
  set ControllerInfo(m19) -
  set ControllerInfo(m19_interface_instance) -
  set ControllerInfo(m20) -
  set ControllerInfo(m20_interface_instance) -
  set ControllerInfo(m21) -
  set ControllerInfo(m21_interface_instance) -
  set ControllerInfo(m22) -
  set ControllerInfo(m22_interface_instance) -
  set ControllerInfo(m23) -
  set ControllerInfo(m23_interface_instance) -
  set ControllerInfo(m24) -
  set ControllerInfo(m24_interface_instance) -
  set ControllerInfo(m25) -
  set ControllerInfo(m25_interface_instance) -
  set ControllerInfo(m26) -
  set ControllerInfo(m26_interface_instance) -
  set ControllerInfo(m27) -
  set ControllerInfo(m27_interface_instance) -
  set ControllerInfo(m28) -
  set ControllerInfo(m28_interface_instance) -
  set ControllerInfo(m29) -
  set ControllerInfo(m29_interface_instance) -
  set ControllerInfo(m30) -
  set ControllerInfo(m30_interface_instance) -
  set ControllerInfo(m31) -
  set ControllerInfo(m31_interface_instance) -
  set ControllerInfo(m32) -
  set ControllerInfo(m32_interface_instance) -
  set ControllerInfo(m33) -
  set ControllerInfo(m33_interface_instance) -
  set ControllerInfo(m34) -
  set ControllerInfo(m34_interface_instance) -
  set ControllerInfo(m35) -
  set ControllerInfo(m35_interface_instance) -
  set ControllerInfo(m36) -
  set ControllerInfo(m36_interface_instance) -
  set ControllerInfo(m37) -
  set ControllerInfo(m37_interface_instance) -
  set ControllerInfo(m38) -
  set ControllerInfo(m38_interface_instance) -
  set ControllerInfo(m39) -
  set ControllerInfo(m39_interface_instance) -
  set ControllerInfo(m40) -
  set ControllerInfo(m40_interface_instance) -
  set ControllerInfo(BIST_CLK) BIST_CLK
  set ControllerInfo(BIST_HOLD) -
  set ControllerInfo(BIST_SETUP2) -
  set ControllerInfo(BIST_SETUP1) -
  set ControllerInfo(BIST_SETUP0) -
  set ControllerInfo(BIST_SELECT_TEST_DATA) -
  set ControllerInfo(TCK_INTERFACES) -
  set ControllerInfo(TCK) -
  set ControllerInfo(PRESERVE_FUSE_REGISTER) `logiclow
  set ControllerInfo(MBISTPG_ALGO_SEL) `logiclow
  set ControllerInfo(BIST_ALGO_MODE1) -
  set ControllerInfo(BIST_ALGO_MODE0) -
  set ControllerInfo(ENABLE_MEM_RESET) `logiclow
  set ControllerInfo(REDUCED_ADDRESS_COUNT) -
  set ControllerInfo(MEM_ARRAY_DUMP_MODE) -
  set ControllerInfo(BIST_ASYNC_RESET) -
  set ControllerInfo(LV_TM) `logiclow
  set ControllerInfo(MEM_BYPASS_EN) `logiclow
  set ControllerInfo(SCAN_SHIFT_EN) `logiclow
  set ControllerInfo(MCP_BOUNDING_EN) `logiclow
  set ControllerInfo(BIST_SI) -
  set ControllerInfo(MBISTPG_SO) MBISTPG_SO
  set ControllerInfo(MBISTPG_EN) -
  set ControllerInfo(MBISTPG_DONE) MBISTPG_DONE
  set ControllerInfo(MBISTPG_ASSEMBLY_DONE) BIST_DONE
  set ControllerInfo(MBISTPG_GO) MBISTPG_GO
  set ControllerInfo(MBISTPG_ASSEMBLY_GO) BIST_GO
  set ControllerInfo(BIRA_EN) MBISTPG_BIRA_EN
  set ControllerInfo(CHECK_REPAIR_NEEDED) CHECK_REPAIR_NEEDED
  set ControllerInfo(BIST_DIAG_EN) MBISTPG_DIAG_EN
  set ControllerInfo(FL_CNT_MODE0) FL_CNT_MODE[0]
  set ControllerInfo(FL_CNT_MODE1) FL_CNT_MODE[1]
  # Setting default connection variables }}}
  return [array get ControllerInfo]
  }
  proc C1_ConnectionInfo {controller_info_ptr args} {
    upvar $controller_info_ptr ControllerInfo
  instantiate firebird7_in_gate1_tessent_mbist_c1_controller $ControllerInfo(controllerInstancePath) -condition "$ControllerInfo(instantiate_controller) && $ControllerInfo(create_shared_bus_assembly)"
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(controllerInstancePath)/BIST_CLK -group bist_clk -connect_before_move yes
  connect $ControllerInfo(PRESERVE_FUSE_REGISTER) $ControllerInfo(controllerInstancePath)/MBIST_RA_PRSRV_FUSE_VAL -group bira
  connect $ControllerInfo(BIST_HOLD) $ControllerInfo(controllerInstancePath)/BIST_HOLD -group bist_hold
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(controllerInstancePath)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(controllerInstancePath)/BIST_SETUP[1] -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(controllerInstancePath)/BIST_SETUP[0] -group bist_setup
  connect $ControllerInfo(BIST_SELECT_TEST_DATA) $ControllerInfo(controllerInstancePath)/MBISTPG_TESTDATA_SELECT -group bist_select_test_data
  connect $ControllerInfo(TCK) $ControllerInfo(controllerInstancePath)/TCK -group ijtag
  connect $ControllerInfo(LV_TM) $ControllerInfo(controllerInstancePath)/LV_TM -group scan
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(controllerInstancePath)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(controllerInstancePath)/MCP_BOUNDING_EN -group scan
  connect $ControllerInfo(BIST_ON) $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR -condition "$ControllerInfo(create_controller_assembly)" -group bist_on
  connect $ControllerInfo(MBISTPG_ALGO_SEL) $ControllerInfo(controllerInstancePath)/MBISTPG_ALGO_SEL -group algo_sel
  connect $ControllerInfo(BIST_ALGO_MODE1) $ControllerInfo(controllerInstancePath)/MBISTPG_ALGO_MODE[1] -group algo_mode
  connect $ControllerInfo(BIST_ALGO_MODE0) $ControllerInfo(controllerInstancePath)/MBISTPG_ALGO_MODE[0] -group algo_mode
  connect $ControllerInfo(ENABLE_MEM_RESET) $ControllerInfo(controllerInstancePath)/MBISTPG_MEM_RST -group memory_reset
  connect $ControllerInfo(REDUCED_ADDRESS_COUNT) $ControllerInfo(controllerInstancePath)/MBISTPG_REDUCED_ADDR_CNT_EN -group rac
  connect $ControllerInfo(MEM_ARRAY_DUMP_MODE) $ControllerInfo(controllerInstancePath)/MBISTPG_MEM_ARRAY_DUMP_MODE -group diag
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(controllerInstancePath)/MBISTPG_ASYNC_RESETN -group async_reset
  connect $ControllerInfo(BIST_SI) $ControllerInfo(controllerInstancePath)/BIST_SI -group bist_si
  connect $ControllerInfo(MBISTPG_SO) $ControllerInfo(controllerInstancePath)/MBISTPG_SO -group bist_so
  connect $ControllerInfo(MBISTPG_EN) $ControllerInfo(controllerInstancePath)/MBISTPG_EN -group bist_en
  connect $ControllerInfo(MBISTPG_DONE) $ControllerInfo(controllerInstancePath)/MBISTPG_DONE -group bist_done
  connect $ControllerInfo(MBISTPG_ASSEMBLY_DONE) $ControllerInfo(controllerInstancePath)/MBISTPG_DONE -condition "$ControllerInfo(create_controller_assembly)" -group bist_done
  connect $ControllerInfo(MBISTPG_GO) $ControllerInfo(controllerInstancePath)/MBISTPG_GO -group bist_go
  connect $ControllerInfo(MBISTPG_ASSEMBLY_GO) $ControllerInfo(controllerInstancePath)/MBISTPG_GO -condition "$ControllerInfo(create_controller_assembly)" -group bist_go
  connect $ControllerInfo(BIRA_EN) $ControllerInfo(controllerInstancePath)/MBISTPG_BIRA_EN -group bira
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(controllerInstancePath)/CHECK_REPAIR_NEEDED -group bira
  connect $ControllerInfo(BIST_DIAG_EN) $ControllerInfo(controllerInstancePath)/MBISTPG_DIAG_EN -group diag
  connect $ControllerInfo(FL_CNT_MODE0) $ControllerInfo(controllerInstancePath)/FL_CNT_MODE[0] -group fl_count_mode
  connect $ControllerInfo(FL_CNT_MODE1) $ControllerInfo(controllerInstancePath)/FL_CNT_MODE[1] -group fl_count_mode
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m1 $ControllerInfo(m1_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m1_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m1_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m1_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m1_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m1_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m1_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m1_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m1_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m1_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m1_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m1_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m1_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m1_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m1_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m1_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN0 $ControllerInfo(m1_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR0 $ControllerInfo(m1_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m1_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m1_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m1_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m1_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m1_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m1_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m1_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m1_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m1_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m1_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m1_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m1_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m1_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m1_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m1_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM0_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m1_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM0_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m1_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m1_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m1_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m1_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m1_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m1_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m1_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m1_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m1_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m1_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m1_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m1_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m1_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[0] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m1_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m1_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m1_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m1_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m1_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m1_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m2 $ControllerInfo(m2_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m2_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m2_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m2_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m2_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m2_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m2_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m2_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m2_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m2_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m2_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m2_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m2_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m2_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m2_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m2_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN1 $ControllerInfo(m2_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR1 $ControllerInfo(m2_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m2_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m2_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m2_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m2_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m2_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m2_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m2_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m2_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m2_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m2_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m2_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m2_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m2_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m2_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m2_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM1_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m2_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM1_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m2_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m2_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m2_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m2_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m2_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m2_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m2_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m2_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m2_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m2_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m2_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m2_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m2_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[1] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m2_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m2_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m2_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m2_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m2_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m2_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m3 $ControllerInfo(m3_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m3_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m3_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m3_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m3_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m3_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m3_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m3_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m3_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m3_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m3_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m3_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m3_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m3_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m3_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m3_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN2 $ControllerInfo(m3_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR2 $ControllerInfo(m3_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m3_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m3_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m3_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m3_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m3_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m3_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m3_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m3_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m3_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m3_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m3_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m3_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m3_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m3_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m3_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM2_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m3_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM2_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m3_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m3_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m3_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m3_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m3_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m3_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m3_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m3_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m3_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m3_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m3_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m3_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m3_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[2] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m3_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m3_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m3_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m3_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m3_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m3_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m4 $ControllerInfo(m4_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m4_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m4_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m4_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m4_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m4_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m4_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m4_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m4_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m4_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m4_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m4_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m4_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m4_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m4_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m4_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN3 $ControllerInfo(m4_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR3 $ControllerInfo(m4_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m4_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m4_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m4_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m4_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m4_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m4_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m4_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m4_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m4_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m4_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m4_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m4_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m4_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m4_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m4_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM3_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m4_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM3_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m4_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m4_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m4_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m4_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m4_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m4_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m4_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m4_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m4_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m4_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m4_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m4_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m4_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[3] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m4_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m4_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m4_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m4_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m4_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m4_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m5 $ControllerInfo(m5_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m5_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m5_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m5_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m5_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m5_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m5_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m5_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m5_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m5_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m5_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m5_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m5_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m5_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m5_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m5_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN4 $ControllerInfo(m5_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR4 $ControllerInfo(m5_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m5_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m5_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m5_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m5_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m5_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m5_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m5_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m5_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m5_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m5_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m5_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m5_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m5_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m5_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m5_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM4_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m5_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM4_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m5_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m5_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m5_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m5_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m5_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m5_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m5_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m5_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m5_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m5_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m5_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m5_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m5_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[4] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m5_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m5_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m5_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m5_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m5_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m5_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m6 $ControllerInfo(m6_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m6_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m6_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m6_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m6_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m6_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m6_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m6_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m6_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m6_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m6_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m6_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m6_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m6_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m6_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m6_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN5 $ControllerInfo(m6_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR5 $ControllerInfo(m6_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m6_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m6_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m6_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m6_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m6_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m6_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m6_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m6_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m6_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m6_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m6_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m6_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m6_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m6_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m6_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM5_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m6_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM5_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m6_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m6_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m6_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m6_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m6_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m6_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m6_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m6_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m6_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m6_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m6_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m6_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m6_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[5] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m6_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m6_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m6_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m6_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m6_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m6_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m7 $ControllerInfo(m7_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m7_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m7_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m7_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m7_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m7_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m7_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m7_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m7_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m7_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m7_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m7_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m7_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m7_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m7_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m7_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN6 $ControllerInfo(m7_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR6 $ControllerInfo(m7_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m7_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m7_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m7_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m7_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m7_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m7_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m7_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m7_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m7_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m7_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m7_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m7_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m7_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m7_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m7_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM6_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m7_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM6_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m7_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m7_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m7_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m7_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m7_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m7_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m7_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m7_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m7_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m7_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m7_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m7_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m7_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[6] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m7_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m7_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m7_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m7_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m7_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m7_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m8 $ControllerInfo(m8_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m8_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m8_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m8_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m8_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m8_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m8_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m8_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m8_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m8_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m8_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m8_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m8_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m8_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m8_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m8_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN7 $ControllerInfo(m8_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR7 $ControllerInfo(m8_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m8_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m8_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m8_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m8_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m8_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m8_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m8_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m8_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m8_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m8_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m8_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m8_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m8_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m8_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m8_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM7_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m8_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM7_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m8_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m8_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m8_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m8_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m8_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m8_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m8_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m8_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m8_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m8_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m8_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m8_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m8_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[7] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m8_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m8_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m8_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m8_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m8_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m8_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m9 $ControllerInfo(m9_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m9_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m9_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m9_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m9_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m9_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m9_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m9_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m9_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m9_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m9_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m9_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m9_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m9_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m9_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m9_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN8 $ControllerInfo(m9_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR8 $ControllerInfo(m9_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m9_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m9_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m9_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m9_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m9_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m9_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m9_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m9_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m9_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m9_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m9_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m9_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m9_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m9_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m9_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM8_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m9_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM8_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m9_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m9_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m9_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m9_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m9_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m9_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m9_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m9_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m9_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m9_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m9_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m9_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m9_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[8] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m9_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m9_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m9_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m9_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m9_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m9_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m10 $ControllerInfo(m10_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m10_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m10_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m10_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m10_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m10_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m10_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m10_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m10_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m10_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m10_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m10_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m10_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m10_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m10_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m10_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN9 $ControllerInfo(m10_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR9 $ControllerInfo(m10_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m10_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m10_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m10_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m10_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m10_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m10_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m10_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m10_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m10_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m10_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m10_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m10_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m10_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m10_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m10_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM9_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m10_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM9_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m10_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m10_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m10_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m10_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m10_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m10_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m10_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m10_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m10_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m10_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m10_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m10_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m10_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[9] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m10_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m10_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m10_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m10_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m10_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m10_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m11 $ControllerInfo(m11_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m11_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m11_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m11_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m11_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m11_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m11_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m11_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m11_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m11_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m11_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m11_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m11_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m11_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m11_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m11_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN10 $ControllerInfo(m11_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR10 $ControllerInfo(m11_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m11_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m11_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m11_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m11_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m11_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m11_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m11_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m11_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m11_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m11_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m11_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m11_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m11_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m11_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m11_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM10_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m11_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM10_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m11_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m11_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m11_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m11_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m11_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m11_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m11_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m11_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m11_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m11_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m11_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m11_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m11_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[10] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m11_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m11_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m11_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m11_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m11_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m11_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m12 $ControllerInfo(m12_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m12_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m12_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m12_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m12_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m12_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m12_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m12_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m12_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m12_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m12_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m12_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m12_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m12_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m12_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m12_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN11 $ControllerInfo(m12_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR11 $ControllerInfo(m12_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m12_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m12_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m12_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m12_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m12_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m12_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m12_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m12_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m12_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m12_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m12_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m12_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m12_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m12_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m12_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM11_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m12_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM11_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m12_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m12_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m12_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m12_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m12_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m12_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m12_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m12_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m12_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m12_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m12_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m12_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m12_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[11] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m12_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m12_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m12_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m12_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m12_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m12_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m13 $ControllerInfo(m13_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m13_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m13_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m13_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m13_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m13_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m13_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m13_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m13_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m13_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m13_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m13_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m13_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m13_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m13_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m13_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN12 $ControllerInfo(m13_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR12 $ControllerInfo(m13_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m13_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m13_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m13_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m13_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m13_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m13_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m13_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m13_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m13_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m13_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m13_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m13_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m13_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m13_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m13_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM12_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m13_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM12_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m13_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m13_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m13_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m13_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m13_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m13_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m13_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m13_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m13_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m13_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m13_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m13_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m13_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[12] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m13_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m13_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m13_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m13_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m13_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m13_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m14 $ControllerInfo(m14_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m14_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m14_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m14_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m14_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m14_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m14_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m14_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m14_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m14_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m14_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m14_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m14_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m14_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m14_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m14_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN13 $ControllerInfo(m14_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR13 $ControllerInfo(m14_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m14_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m14_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m14_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m14_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m14_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m14_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m14_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m14_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m14_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m14_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m14_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m14_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m14_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m14_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m14_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM13_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m14_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM13_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m14_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m14_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m14_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m14_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m14_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m14_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m14_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m14_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m14_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m14_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m14_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m14_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m14_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[13] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m14_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m14_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m14_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m14_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m14_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m14_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m15 $ControllerInfo(m15_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m15_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m15_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m15_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m15_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m15_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m15_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m15_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m15_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m15_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m15_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m15_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m15_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m15_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m15_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m15_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN14 $ControllerInfo(m15_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR14 $ControllerInfo(m15_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m15_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m15_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m15_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m15_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m15_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m15_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m15_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m15_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m15_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m15_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m15_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m15_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m15_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m15_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m15_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM14_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m15_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM14_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m15_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m15_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m15_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m15_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m15_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m15_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m15_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m15_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m15_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m15_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m15_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m15_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m15_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[14] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m15_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m15_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m15_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m15_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m15_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m15_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m16 $ControllerInfo(m16_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m16_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m16_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m16_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m16_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m16_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m16_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m16_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m16_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m16_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m16_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m16_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m16_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m16_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m16_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m16_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN15 $ControllerInfo(m16_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR15 $ControllerInfo(m16_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m16_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m16_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m16_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m16_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m16_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m16_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m16_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m16_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m16_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m16_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m16_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m16_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m16_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m16_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m16_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM15_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m16_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM15_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m16_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m16_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m16_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m16_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m16_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m16_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m16_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m16_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m16_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m16_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m16_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m16_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m16_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[15] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m16_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m16_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m16_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m16_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m16_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m16_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m17 $ControllerInfo(m17_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m17_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m17_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m17_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m17_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m17_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m17_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m17_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m17_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m17_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m17_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m17_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m17_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m17_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m17_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m17_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN16 $ControllerInfo(m17_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR16 $ControllerInfo(m17_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m17_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m17_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m17_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m17_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m17_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m17_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m17_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m17_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m17_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m17_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m17_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m17_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m17_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m17_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m17_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM16_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m17_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM16_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m17_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m17_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m17_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m17_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m17_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m17_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m17_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m17_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m17_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m17_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m17_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m17_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m17_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[16] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m17_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m17_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m17_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m17_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m17_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m17_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m18 $ControllerInfo(m18_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m18_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m18_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m18_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m18_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m18_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m18_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m18_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m18_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m18_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m18_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m18_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m18_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m18_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m18_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m18_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN17 $ControllerInfo(m18_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR17 $ControllerInfo(m18_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m18_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m18_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m18_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m18_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m18_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m18_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m18_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m18_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m18_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m18_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m18_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m18_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m18_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m18_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m18_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM17_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m18_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM17_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m18_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m18_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m18_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m18_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m18_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m18_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m18_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m18_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m18_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m18_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m18_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m18_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m18_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[17] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m18_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m18_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m18_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m18_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m18_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m18_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m19 $ControllerInfo(m19_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m19_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m19_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m19_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m19_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m19_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m19_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m19_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m19_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m19_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m19_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m19_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m19_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m19_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m19_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m19_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN18 $ControllerInfo(m19_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR18 $ControllerInfo(m19_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m19_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m19_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m19_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m19_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m19_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m19_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m19_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m19_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m19_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m19_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m19_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m19_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m19_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m19_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m19_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM18_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m19_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM18_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m19_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m19_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m19_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m19_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m19_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m19_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m19_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m19_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m19_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m19_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m19_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m19_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m19_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[18] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m19_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m19_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m19_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m19_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m19_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m19_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m20 $ControllerInfo(m20_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m20_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m20_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m20_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m20_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m20_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m20_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m20_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m20_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m20_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m20_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m20_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m20_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m20_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m20_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m20_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN19 $ControllerInfo(m20_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR19 $ControllerInfo(m20_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m20_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m20_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m20_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m20_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m20_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m20_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m20_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m20_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m20_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m20_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m20_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m20_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m20_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m20_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m20_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM19_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m20_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM19_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m20_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m20_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m20_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m20_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m20_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m20_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m20_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m20_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m20_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m20_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m20_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m20_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m20_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[19] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m20_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m20_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m20_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m20_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m20_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m20_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m21 $ControllerInfo(m21_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m21_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m21_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m21_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m21_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m21_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m21_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m21_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m21_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m21_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m21_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m21_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m21_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m21_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m21_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m21_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN20 $ControllerInfo(m21_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR20 $ControllerInfo(m21_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m21_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m21_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m21_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m21_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m21_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m21_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m21_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m21_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m21_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m21_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m21_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m21_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m21_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m21_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m21_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM20_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m21_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM20_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m21_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m21_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m21_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m21_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m21_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m21_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m21_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m21_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m21_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m21_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m21_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m21_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m21_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[20] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m21_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m21_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m21_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m21_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m21_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m21_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m22 $ControllerInfo(m22_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m22_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m22_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m22_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m22_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m22_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m22_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m22_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m22_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m22_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m22_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m22_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m22_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m22_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m22_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m22_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN21 $ControllerInfo(m22_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR21 $ControllerInfo(m22_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m22_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m22_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m22_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m22_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m22_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m22_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m22_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m22_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m22_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m22_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m22_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m22_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m22_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m22_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m22_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM21_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m22_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM21_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m22_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m22_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m22_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m22_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m22_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m22_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m22_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m22_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m22_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m22_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m22_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m22_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m22_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[21] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m22_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m22_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m22_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m22_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m22_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m22_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m23 $ControllerInfo(m23_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m23_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m23_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m23_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m23_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m23_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m23_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m23_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m23_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m23_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m23_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m23_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m23_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m23_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m23_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m23_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN22 $ControllerInfo(m23_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR22 $ControllerInfo(m23_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m23_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m23_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m23_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m23_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m23_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m23_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m23_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m23_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m23_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m23_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m23_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m23_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m23_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m23_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m23_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM22_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m23_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM22_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m23_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m23_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m23_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m23_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m23_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m23_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m23_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m23_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m23_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m23_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m23_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m23_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m23_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[22] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m23_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m23_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m23_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m23_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m23_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m23_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m24 $ControllerInfo(m24_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m24_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m24_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m24_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m24_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m24_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m24_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m24_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m24_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m24_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m24_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m24_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m24_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m24_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m24_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m24_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN23 $ControllerInfo(m24_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR23 $ControllerInfo(m24_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m24_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m24_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m24_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m24_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m24_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m24_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m24_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m24_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m24_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m24_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m24_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m24_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m24_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m24_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m24_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM23_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m24_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM23_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m24_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m24_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m24_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m24_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m24_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m24_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m24_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m24_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m24_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m24_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m24_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m24_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m24_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[23] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m24_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m24_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m24_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m24_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m24_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m24_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m25 $ControllerInfo(m25_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m25_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m25_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m25_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m25_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m25_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m25_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m25_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m25_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m25_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m25_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m25_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m25_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m25_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m25_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m25_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN24 $ControllerInfo(m25_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR24 $ControllerInfo(m25_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m25_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m25_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m25_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m25_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m25_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m25_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m25_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m25_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m25_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m25_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m25_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m25_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m25_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m25_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m25_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM24_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m25_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM24_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m25_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m25_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m25_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m25_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m25_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m25_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m25_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m25_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m25_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m25_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m25_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m25_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m25_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[24] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m25_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m25_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m25_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m25_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m25_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m25_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m26 $ControllerInfo(m26_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m26_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m26_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m26_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m26_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m26_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m26_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m26_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m26_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m26_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m26_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m26_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m26_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m26_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m26_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m26_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN25 $ControllerInfo(m26_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR25 $ControllerInfo(m26_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m26_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m26_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m26_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m26_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m26_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m26_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m26_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m26_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m26_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m26_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m26_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m26_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m26_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m26_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m26_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM25_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m26_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM25_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m26_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m26_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m26_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m26_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m26_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m26_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m26_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m26_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m26_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m26_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m26_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m26_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m26_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[25] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m26_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m26_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m26_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m26_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m26_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m26_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m27 $ControllerInfo(m27_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m27_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m27_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m27_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m27_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m27_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m27_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m27_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m27_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m27_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m27_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m27_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m27_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m27_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m27_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m27_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN26 $ControllerInfo(m27_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR26 $ControllerInfo(m27_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m27_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m27_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m27_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m27_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m27_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m27_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m27_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m27_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m27_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m27_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m27_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m27_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m27_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m27_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m27_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM26_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m27_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM26_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m27_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m27_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m27_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m27_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m27_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m27_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m27_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m27_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m27_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m27_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m27_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m27_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m27_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[26] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m27_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m27_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m27_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m27_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m27_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m27_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m28 $ControllerInfo(m28_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m28_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m28_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m28_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m28_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m28_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m28_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m28_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m28_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m28_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m28_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m28_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m28_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m28_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m28_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m28_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN27 $ControllerInfo(m28_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR27 $ControllerInfo(m28_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m28_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m28_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m28_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m28_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m28_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m28_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m28_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m28_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m28_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m28_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m28_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m28_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m28_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m28_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m28_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM27_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m28_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM27_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m28_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m28_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m28_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m28_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m28_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m28_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m28_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m28_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m28_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m28_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m28_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m28_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m28_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[27] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m28_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m28_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m28_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m28_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m28_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m28_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m29 $ControllerInfo(m29_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m29_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m29_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m29_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m29_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m29_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m29_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m29_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m29_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m29_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m29_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m29_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m29_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m29_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m29_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m29_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN28 $ControllerInfo(m29_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR28 $ControllerInfo(m29_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m29_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m29_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m29_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m29_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m29_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m29_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m29_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m29_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m29_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m29_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m29_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m29_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m29_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m29_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m29_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM28_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m29_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM28_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m29_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m29_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m29_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m29_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m29_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m29_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m29_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m29_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m29_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m29_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m29_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m29_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m29_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[28] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m29_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m29_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m29_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m29_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m29_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m29_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m30 $ControllerInfo(m30_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m30_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m30_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m30_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m30_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m30_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m30_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m30_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m30_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m30_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m30_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m30_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m30_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m30_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m30_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m30_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN29 $ControllerInfo(m30_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR29 $ControllerInfo(m30_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m30_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m30_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m30_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m30_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m30_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m30_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m30_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m30_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m30_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m30_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m30_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m30_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m30_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m30_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m30_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM29_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m30_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM29_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m30_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m30_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m30_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m30_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m30_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m30_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m30_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m30_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m30_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m30_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m30_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m30_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m30_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[29] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m30_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m30_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m30_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m30_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m30_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m30_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m31 $ControllerInfo(m31_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m31_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m31_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m31_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m31_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m31_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m31_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m31_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m31_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m31_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m31_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m31_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m31_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m31_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m31_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m31_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN30 $ControllerInfo(m31_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR30 $ControllerInfo(m31_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m31_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m31_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m31_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m31_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m31_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m31_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m31_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m31_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m31_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m31_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m31_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m31_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m31_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m31_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m31_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM30_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m31_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM30_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m31_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m31_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m31_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m31_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m31_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m31_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m31_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m31_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m31_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m31_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m31_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m31_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m31_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[30] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m31_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m31_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m31_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m31_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m31_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m31_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m32 $ControllerInfo(m32_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m32_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m32_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m32_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m32_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m32_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m32_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m32_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m32_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m32_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m32_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m32_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[2] $ControllerInfo(m32_interface_instance)/BIST_COL_ADD[2] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m32_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m32_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m32_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN31 $ControllerInfo(m32_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR31 $ControllerInfo(m32_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m32_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m32_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m32_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m32_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m32_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m32_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m32_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m32_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m32_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m32_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m32_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m32_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m32_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m32_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m32_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM31_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m32_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM31_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m32_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m32_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m32_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m32_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m32_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m32_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m32_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m32_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m32_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m32_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m32_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m32_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m32_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[31] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m32_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m32_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m32_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m32_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m32_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m32_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m33 $ControllerInfo(m33_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m33_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m33_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m33_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m33_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m33_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m33_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m33_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m33_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m33_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m33_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m33_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m33_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m33_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[7] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[7] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m33_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN32 $ControllerInfo(m33_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR32 $ControllerInfo(m33_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m33_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m33_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m33_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m33_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m33_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m33_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m33_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m33_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m33_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m33_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m33_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m33_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m33_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m33_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m33_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM32_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m33_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM32_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m33_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m33_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m33_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m33_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m33_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m33_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m33_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m33_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m33_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m33_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m33_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m33_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m33_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[32] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m33_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m33_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m33_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m33_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m33_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m33_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m34 $ControllerInfo(m34_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m34_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m34_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m34_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m34_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m34_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m34_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m34_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m34_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m34_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m34_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m34_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m34_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m34_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[7] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[7] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m34_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN33 $ControllerInfo(m34_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR33 $ControllerInfo(m34_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m34_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m34_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m34_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m34_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m34_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m34_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m34_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m34_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m34_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m34_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m34_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m34_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m34_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m34_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m34_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM33_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m34_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM33_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m34_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m34_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m34_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m34_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m34_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m34_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m34_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m34_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m34_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m34_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m34_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m34_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m34_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[33] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m34_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m34_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m34_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m34_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m34_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m34_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m35 $ControllerInfo(m35_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m35_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m35_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m35_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m35_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m35_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m35_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m35_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m35_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m35_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m35_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m35_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m35_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m35_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[7] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[7] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m35_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN34 $ControllerInfo(m35_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR34 $ControllerInfo(m35_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m35_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m35_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m35_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m35_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m35_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m35_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m35_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m35_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m35_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m35_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m35_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m35_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m35_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m35_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m35_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM34_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m35_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM34_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m35_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m35_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m35_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m35_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m35_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m35_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m35_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m35_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m35_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m35_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m35_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m35_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m35_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[34] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m35_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m35_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m35_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m35_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m35_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m35_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m36 $ControllerInfo(m36_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m36_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m36_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m36_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m36_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m36_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m36_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m36_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m36_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m36_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m36_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m36_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m36_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m36_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[7] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[7] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m36_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN35 $ControllerInfo(m36_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR35 $ControllerInfo(m36_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m36_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m36_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m36_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m36_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m36_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m36_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m36_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m36_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m36_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m36_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m36_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m36_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m36_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m36_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m36_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM35_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m36_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM35_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m36_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m36_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m36_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m36_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m36_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m36_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m36_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m36_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m36_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m36_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m36_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m36_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m36_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[35] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m36_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m36_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m36_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m36_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m36_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m36_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m37 $ControllerInfo(m37_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m37_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m37_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m37_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m37_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m37_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m37_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m37_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m37_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m37_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m37_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m37_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m37_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m37_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m37_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN36 $ControllerInfo(m37_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR36 $ControllerInfo(m37_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m37_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m37_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m37_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m37_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m37_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m37_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m37_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m37_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m37_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m37_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m37_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m37_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m37_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m37_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m37_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM36_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m37_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM36_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m37_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m37_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m37_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m37_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m37_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m37_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m37_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m37_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m37_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m37_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m37_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m37_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m37_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[36] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m37_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m37_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m37_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m37_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m37_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m37_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m38 $ControllerInfo(m38_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m38_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m38_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m38_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m38_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m38_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m38_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m38_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m38_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m38_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m38_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m38_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m38_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m38_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m38_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN37 $ControllerInfo(m38_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR37 $ControllerInfo(m38_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m38_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m38_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m38_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m38_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m38_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m38_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m38_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m38_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m38_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m38_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m38_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m38_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m38_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m38_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m38_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM37_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m38_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM37_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m38_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m38_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m38_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m38_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m38_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m38_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m38_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m38_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m38_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m38_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m38_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m38_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m38_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[37] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m38_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m38_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m38_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m38_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m38_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m38_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m39 $ControllerInfo(m39_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m39_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m39_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m39_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m39_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m39_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m39_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m39_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m39_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m39_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m39_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m39_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m39_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m39_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m39_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN38 $ControllerInfo(m39_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR38 $ControllerInfo(m39_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m39_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m39_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m39_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m39_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m39_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m39_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m39_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m39_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m39_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m39_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m39_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m39_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m39_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m39_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m39_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM38_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m39_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM38_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m39_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m39_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m39_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m39_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m39_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m39_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m39_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m39_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m39_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m39_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m39_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m39_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m39_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[38] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m39_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m39_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m39_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m39_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m39_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m39_interface_instance)/RESET_REG_SETUP2 -group setup
  instantiate firebird7_in_gate1_tessent_mbist_c1_interface_m40 $ControllerInfo(m40_interface_instance) -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_ALL_SROW0_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_ALL_SROW0_ALLOC_REG
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_ALL_SROW1_FUSE_ADD_REG
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_ALL_SROW1_ALLOC_REG
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_All_SCOL0_FUSE_REG
  constant logiclow $ControllerInfo(m40_interface_instance)/FROM_BISR_All_SCOL0_ALLOC_REG
  connect $ControllerInfo(BIST_CLK) $ControllerInfo(m40_interface_instance)/BIST_CLK -group collar_bist_clk -connect_before_move yes
  connect $ControllerInfo(LV_TM) $ControllerInfo(m40_interface_instance)/LV_TM -group tm
  connect $ControllerInfo(MEM_BYPASS_EN) $ControllerInfo(m40_interface_instance)/MEM_BYPASS_EN -group scan
  connect $ControllerInfo(SCAN_SHIFT_EN) $ControllerInfo(m40_interface_instance)/SCAN_SHIFT_EN -group scan
  connect $ControllerInfo(MCP_BOUNDING_EN) $ControllerInfo(m40_interface_instance)/MCP_BOUNDING_EN -group scan
  constant `open $ControllerInfo(m40_interface_instance)/SCAN_OBS_FLOPS
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITEENABLE $ControllerInfo(m40_interface_instance)/BIST_WRITEENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_READENABLE $ControllerInfo(m40_interface_instance)/BIST_READENABLE -group fsm
  connect $ControllerInfo(controllerInstancePath)/BIST_CMP $ControllerInfo(m40_interface_instance)/BIST_CMP -group bist_cmp
  connect $ControllerInfo(INCLUDE_MEM_RESULTS_REG) $ControllerInfo(m40_interface_instance)/INCLUDE_MEM_RESULTS_REG -group bist_go_id
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[1] $ControllerInfo(m40_interface_instance)/BIST_COL_ADD[1] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COL_ADD[0] $ControllerInfo(m40_interface_instance)/BIST_COL_ADD[0] -group col_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[6] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[6] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[5] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[5] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[4] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[4] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[3] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[3] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[2] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[2] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[1] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[1] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_ROW_ADD[0] $ControllerInfo(m40_interface_instance)/BIST_ROW_ADD[0] -group row_add
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_EN39 $ControllerInfo(m40_interface_instance)/BIST_COLLAR_EN -group bist_collar_en
  connect $ControllerInfo(controllerInstancePath)/BIST_RUN_TO_COLLAR39 $ControllerInfo(m40_interface_instance)/BIST_RUN -group bist_run_to_collar
  connect $ControllerInfo(BIST_ASYNC_RESET) $ControllerInfo(m40_interface_instance)/BIST_ASYNC_RESETN -group collar_async_reset
  connect $ControllerInfo(TCK_INTERFACES) $ControllerInfo(m40_interface_instance)/TCK -group clocks
  connect $ControllerInfo(controllerInstancePath)/BIST_TESTDATA_SELECT_TO_COLLAR $ControllerInfo(m40_interface_instance)/BIST_TESTDATA_SELECT_TO_COLLAR -group testdata_select
  connect $ControllerInfo(controllerInstancePath)/BIST_ON_TO_COLLAR $ControllerInfo(m40_interface_instance)/BIST_ON -group bist_on
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[3] $ControllerInfo(m40_interface_instance)/BIST_WRITE_DATA[3] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[2] $ControllerInfo(m40_interface_instance)/BIST_WRITE_DATA[2] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[1] $ControllerInfo(m40_interface_instance)/BIST_WRITE_DATA[1] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_WRITE_DATA[0] $ControllerInfo(m40_interface_instance)/BIST_WRITE_DATA[0] -group write_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[3] $ControllerInfo(m40_interface_instance)/BIST_EXPECT_DATA[3] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[2] $ControllerInfo(m40_interface_instance)/BIST_EXPECT_DATA[2] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[1] $ControllerInfo(m40_interface_instance)/BIST_EXPECT_DATA[1] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/BIST_EXPECT_DATA[0] $ControllerInfo(m40_interface_instance)/BIST_EXPECT_DATA[0] -group exp_data
  connect $ControllerInfo(controllerInstancePath)/CHKBCI_PHASE $ControllerInfo(m40_interface_instance)/CHKBCI_PHASE -group chkbci_phase
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_COLLAR $ControllerInfo(m40_interface_instance)/BIST_SHIFT_COLLAR -group bist_shift_collar
  connect $ControllerInfo(m40_interface_instance)/BIST_SI $ControllerInfo(controllerInstancePath)/MEM39_BIST_COLLAR_SI -group bist_si
  connect $ControllerInfo(m40_interface_instance)/BIST_SO $ControllerInfo(controllerInstancePath)/MEM39_BIST_COLLAR_SO -group bist_so
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_SETUP $ControllerInfo(m40_interface_instance)/BIST_COLLAR_SETUP -group bist_collar_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_DEFAULT $ControllerInfo(m40_interface_instance)/BIST_CLEAR_DEFAULT -group bist_clear_default
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR $ControllerInfo(m40_interface_instance)/BIST_CLEAR -group bist_clear
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_OPSET_SELECT $ControllerInfo(m40_interface_instance)/BIST_COLLAR_OPSET_SELECT -group opset_signals
  connect $ControllerInfo(BIST_SETUP1) $ControllerInfo(m40_interface_instance)/BIST_SETUP1 -group bist_setup
  connect $ControllerInfo(BIST_SETUP0) $ControllerInfo(m40_interface_instance)/BIST_SETUP0 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/FREEZE_STOP_ERROR $ControllerInfo(m40_interface_instance)/FREEZE_STOP_ERROR -group soe
  connect $ControllerInfo(controllerInstancePath)/ERROR_CNT_ZERO $ControllerInfo(m40_interface_instance)/ERROR_CNT_ZERO -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_HOLD $ControllerInfo(m40_interface_instance)/BIST_COLLAR_HOLD -group soe
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_BIRA_EN $ControllerInfo(m40_interface_instance)/BIST_BIRA_EN -group diag
  connect $ControllerInfo(CHECK_REPAIR_NEEDED) $ControllerInfo(m40_interface_instance)/CHECK_REPAIR_NEEDED -group diag
  connect $ControllerInfo(controllerInstancePath)/BIST_COLLAR_DIAG_EN $ControllerInfo(m40_interface_instance)/BIST_DIAG_EN -group diag
  connect $ControllerInfo(m40_interface_instance)/BIST_GO $ControllerInfo(controllerInstancePath)/BIST_COLLAR_GO[39] -group bist_go
  connect $ControllerInfo(BIST_SETUP2) $ControllerInfo(m40_interface_instance)/BIST_SETUP2 -group bist_setup
  connect $ControllerInfo(controllerInstancePath)/BIST_CLEAR_BIRA $ControllerInfo(m40_interface_instance)/BIST_CLEAR_BIRA -group diag
  constant `open $ControllerInfo(m40_interface_instance)/REPAIR_STATUS
  connect $ControllerInfo(controllerInstancePath)/BIST_SHIFT_BIRA_COLLAR $ControllerInfo(m40_interface_instance)/BIST_SHIFT_BIRA_COLLAR -group diag
  connect $ControllerInfo(controllerInstancePath)/PriorityColumn $ControllerInfo(m40_interface_instance)/PriorityColumn -group diag
  connect $ControllerInfo(controllerInstancePath)/MBISTPG_RESET_REG_SETUP2 $ControllerInfo(m40_interface_instance)/RESET_REG_SETUP2 -group setup
  move [string cat $ControllerInfo(m1)/ {wen}] [string cat $ControllerInfo(m1_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m1)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m1_interface_instance)/ {wen}] [string cat $ControllerInfo(m1)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m1)/ {ren}] [string cat $ControllerInfo(m1_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m1)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m1_interface_instance)/ {ren}] [string cat $ControllerInfo(m1)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m1)/ {adr}] [string cat $ControllerInfo(m1_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m1)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m1_interface_instance)/ {adr}] [string cat $ControllerInfo(m1)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m1)/ {din}] [string cat $ControllerInfo(m1_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m1)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m1_interface_instance)/ {din}] [string cat $ControllerInfo(m1)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m1)/ {q}] [string cat $ControllerInfo(m1_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m1)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m1)/ {q}] [string cat $ControllerInfo(m1_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m2)/ {wen}] [string cat $ControllerInfo(m2_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m2)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m2_interface_instance)/ {wen}] [string cat $ControllerInfo(m2)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m2)/ {ren}] [string cat $ControllerInfo(m2_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m2)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m2_interface_instance)/ {ren}] [string cat $ControllerInfo(m2)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m2)/ {adr}] [string cat $ControllerInfo(m2_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m2)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m2_interface_instance)/ {adr}] [string cat $ControllerInfo(m2)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m2)/ {din}] [string cat $ControllerInfo(m2_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m2)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m2_interface_instance)/ {din}] [string cat $ControllerInfo(m2)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m2)/ {q}] [string cat $ControllerInfo(m2_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m2)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m2)/ {q}] [string cat $ControllerInfo(m2_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m3)/ {wen}] [string cat $ControllerInfo(m3_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m3)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m3_interface_instance)/ {wen}] [string cat $ControllerInfo(m3)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m3)/ {ren}] [string cat $ControllerInfo(m3_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m3)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m3_interface_instance)/ {ren}] [string cat $ControllerInfo(m3)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m3)/ {adr}] [string cat $ControllerInfo(m3_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m3)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m3_interface_instance)/ {adr}] [string cat $ControllerInfo(m3)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m3)/ {din}] [string cat $ControllerInfo(m3_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m3)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m3_interface_instance)/ {din}] [string cat $ControllerInfo(m3)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m3)/ {q}] [string cat $ControllerInfo(m3_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m3)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m3)/ {q}] [string cat $ControllerInfo(m3_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m4)/ {wen}] [string cat $ControllerInfo(m4_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m4)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m4_interface_instance)/ {wen}] [string cat $ControllerInfo(m4)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m4)/ {ren}] [string cat $ControllerInfo(m4_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m4)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m4_interface_instance)/ {ren}] [string cat $ControllerInfo(m4)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m4)/ {adr}] [string cat $ControllerInfo(m4_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m4)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m4_interface_instance)/ {adr}] [string cat $ControllerInfo(m4)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m4)/ {din}] [string cat $ControllerInfo(m4_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m4)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m4_interface_instance)/ {din}] [string cat $ControllerInfo(m4)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m4)/ {q}] [string cat $ControllerInfo(m4_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m4)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m4)/ {q}] [string cat $ControllerInfo(m4_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m5)/ {wen}] [string cat $ControllerInfo(m5_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m5)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m5_interface_instance)/ {wen}] [string cat $ControllerInfo(m5)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m5)/ {ren}] [string cat $ControllerInfo(m5_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m5)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m5_interface_instance)/ {ren}] [string cat $ControllerInfo(m5)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m5)/ {adr}] [string cat $ControllerInfo(m5_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m5)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m5_interface_instance)/ {adr}] [string cat $ControllerInfo(m5)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m5)/ {din}] [string cat $ControllerInfo(m5_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m5)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m5_interface_instance)/ {din}] [string cat $ControllerInfo(m5)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m5)/ {q}] [string cat $ControllerInfo(m5_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m5)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m5)/ {q}] [string cat $ControllerInfo(m5_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m6)/ {wen}] [string cat $ControllerInfo(m6_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m6)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m6_interface_instance)/ {wen}] [string cat $ControllerInfo(m6)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m6)/ {ren}] [string cat $ControllerInfo(m6_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m6)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m6_interface_instance)/ {ren}] [string cat $ControllerInfo(m6)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m6)/ {adr}] [string cat $ControllerInfo(m6_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m6)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m6_interface_instance)/ {adr}] [string cat $ControllerInfo(m6)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m6)/ {din}] [string cat $ControllerInfo(m6_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m6)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m6_interface_instance)/ {din}] [string cat $ControllerInfo(m6)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m6)/ {q}] [string cat $ControllerInfo(m6_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m6)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m6)/ {q}] [string cat $ControllerInfo(m6_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m7)/ {wen}] [string cat $ControllerInfo(m7_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m7)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m7_interface_instance)/ {wen}] [string cat $ControllerInfo(m7)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m7)/ {ren}] [string cat $ControllerInfo(m7_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m7)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m7_interface_instance)/ {ren}] [string cat $ControllerInfo(m7)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m7)/ {adr}] [string cat $ControllerInfo(m7_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m7)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m7_interface_instance)/ {adr}] [string cat $ControllerInfo(m7)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m7)/ {din}] [string cat $ControllerInfo(m7_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m7)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m7_interface_instance)/ {din}] [string cat $ControllerInfo(m7)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m7)/ {q}] [string cat $ControllerInfo(m7_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m7)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m7)/ {q}] [string cat $ControllerInfo(m7_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m8)/ {wen}] [string cat $ControllerInfo(m8_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m8)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m8_interface_instance)/ {wen}] [string cat $ControllerInfo(m8)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m8)/ {ren}] [string cat $ControllerInfo(m8_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m8)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m8_interface_instance)/ {ren}] [string cat $ControllerInfo(m8)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m8)/ {adr}] [string cat $ControllerInfo(m8_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m8)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m8_interface_instance)/ {adr}] [string cat $ControllerInfo(m8)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m8)/ {din}] [string cat $ControllerInfo(m8_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m8)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m8_interface_instance)/ {din}] [string cat $ControllerInfo(m8)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m8)/ {q}] [string cat $ControllerInfo(m8_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m8)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m8)/ {q}] [string cat $ControllerInfo(m8_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m9)/ {wen}] [string cat $ControllerInfo(m9_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m9)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m9_interface_instance)/ {wen}] [string cat $ControllerInfo(m9)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m9)/ {ren}] [string cat $ControllerInfo(m9_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m9)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m9_interface_instance)/ {ren}] [string cat $ControllerInfo(m9)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m9)/ {adr}] [string cat $ControllerInfo(m9_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m9)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m9_interface_instance)/ {adr}] [string cat $ControllerInfo(m9)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m9)/ {din}] [string cat $ControllerInfo(m9_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m9)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m9_interface_instance)/ {din}] [string cat $ControllerInfo(m9)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m9)/ {q}] [string cat $ControllerInfo(m9_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m9)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m9)/ {q}] [string cat $ControllerInfo(m9_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m10)/ {wen}] [string cat $ControllerInfo(m10_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m10)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m10_interface_instance)/ {wen}] [string cat $ControllerInfo(m10)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m10)/ {ren}] [string cat $ControllerInfo(m10_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m10)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m10_interface_instance)/ {ren}] [string cat $ControllerInfo(m10)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m10)/ {adr}] [string cat $ControllerInfo(m10_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m10)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m10_interface_instance)/ {adr}] [string cat $ControllerInfo(m10)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m10)/ {din}] [string cat $ControllerInfo(m10_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m10)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m10_interface_instance)/ {din}] [string cat $ControllerInfo(m10)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m10)/ {q}] [string cat $ControllerInfo(m10_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m10)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m10)/ {q}] [string cat $ControllerInfo(m10_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m11)/ {wen}] [string cat $ControllerInfo(m11_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m11)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m11_interface_instance)/ {wen}] [string cat $ControllerInfo(m11)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m11)/ {ren}] [string cat $ControllerInfo(m11_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m11)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m11_interface_instance)/ {ren}] [string cat $ControllerInfo(m11)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m11)/ {adr}] [string cat $ControllerInfo(m11_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m11)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m11_interface_instance)/ {adr}] [string cat $ControllerInfo(m11)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m11)/ {din}] [string cat $ControllerInfo(m11_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m11)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m11_interface_instance)/ {din}] [string cat $ControllerInfo(m11)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m11)/ {q}] [string cat $ControllerInfo(m11_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m11)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m11)/ {q}] [string cat $ControllerInfo(m11_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m12)/ {wen}] [string cat $ControllerInfo(m12_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m12)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m12_interface_instance)/ {wen}] [string cat $ControllerInfo(m12)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m12)/ {ren}] [string cat $ControllerInfo(m12_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m12)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m12_interface_instance)/ {ren}] [string cat $ControllerInfo(m12)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m12)/ {adr}] [string cat $ControllerInfo(m12_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m12)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m12_interface_instance)/ {adr}] [string cat $ControllerInfo(m12)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m12)/ {din}] [string cat $ControllerInfo(m12_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m12)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m12_interface_instance)/ {din}] [string cat $ControllerInfo(m12)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m12)/ {q}] [string cat $ControllerInfo(m12_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m12)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m12)/ {q}] [string cat $ControllerInfo(m12_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m13)/ {wen}] [string cat $ControllerInfo(m13_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m13)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m13_interface_instance)/ {wen}] [string cat $ControllerInfo(m13)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m13)/ {ren}] [string cat $ControllerInfo(m13_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m13)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m13_interface_instance)/ {ren}] [string cat $ControllerInfo(m13)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m13)/ {adr}] [string cat $ControllerInfo(m13_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m13)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m13_interface_instance)/ {adr}] [string cat $ControllerInfo(m13)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m13)/ {din}] [string cat $ControllerInfo(m13_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m13)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m13_interface_instance)/ {din}] [string cat $ControllerInfo(m13)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m13)/ {q}] [string cat $ControllerInfo(m13_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m13)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m13)/ {q}] [string cat $ControllerInfo(m13_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m14)/ {wen}] [string cat $ControllerInfo(m14_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m14)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m14_interface_instance)/ {wen}] [string cat $ControllerInfo(m14)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m14)/ {ren}] [string cat $ControllerInfo(m14_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m14)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m14_interface_instance)/ {ren}] [string cat $ControllerInfo(m14)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m14)/ {adr}] [string cat $ControllerInfo(m14_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m14)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m14_interface_instance)/ {adr}] [string cat $ControllerInfo(m14)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m14)/ {din}] [string cat $ControllerInfo(m14_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m14)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m14_interface_instance)/ {din}] [string cat $ControllerInfo(m14)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m14)/ {q}] [string cat $ControllerInfo(m14_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m14)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m14)/ {q}] [string cat $ControllerInfo(m14_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m15)/ {wen}] [string cat $ControllerInfo(m15_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m15)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m15_interface_instance)/ {wen}] [string cat $ControllerInfo(m15)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m15)/ {ren}] [string cat $ControllerInfo(m15_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m15)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m15_interface_instance)/ {ren}] [string cat $ControllerInfo(m15)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m15)/ {adr}] [string cat $ControllerInfo(m15_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m15)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m15_interface_instance)/ {adr}] [string cat $ControllerInfo(m15)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m15)/ {din}] [string cat $ControllerInfo(m15_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m15)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m15_interface_instance)/ {din}] [string cat $ControllerInfo(m15)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m15)/ {q}] [string cat $ControllerInfo(m15_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m15)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m15)/ {q}] [string cat $ControllerInfo(m15_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m16)/ {wen}] [string cat $ControllerInfo(m16_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m16)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m16_interface_instance)/ {wen}] [string cat $ControllerInfo(m16)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m16)/ {ren}] [string cat $ControllerInfo(m16_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m16)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m16_interface_instance)/ {ren}] [string cat $ControllerInfo(m16)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m16)/ {adr}] [string cat $ControllerInfo(m16_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m16)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m16_interface_instance)/ {adr}] [string cat $ControllerInfo(m16)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m16)/ {din}] [string cat $ControllerInfo(m16_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m16)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m16_interface_instance)/ {din}] [string cat $ControllerInfo(m16)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m16)/ {q}] [string cat $ControllerInfo(m16_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m16)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m16)/ {q}] [string cat $ControllerInfo(m16_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m17)/ {wen}] [string cat $ControllerInfo(m17_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m17)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m17_interface_instance)/ {wen}] [string cat $ControllerInfo(m17)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m17)/ {ren}] [string cat $ControllerInfo(m17_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m17)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m17_interface_instance)/ {ren}] [string cat $ControllerInfo(m17)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m17)/ {adr}] [string cat $ControllerInfo(m17_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m17)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m17_interface_instance)/ {adr}] [string cat $ControllerInfo(m17)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m17)/ {din}] [string cat $ControllerInfo(m17_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m17)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m17_interface_instance)/ {din}] [string cat $ControllerInfo(m17)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m17)/ {q}] [string cat $ControllerInfo(m17_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m17)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m17)/ {q}] [string cat $ControllerInfo(m17_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m18)/ {wen}] [string cat $ControllerInfo(m18_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m18)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m18_interface_instance)/ {wen}] [string cat $ControllerInfo(m18)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m18)/ {ren}] [string cat $ControllerInfo(m18_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m18)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m18_interface_instance)/ {ren}] [string cat $ControllerInfo(m18)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m18)/ {adr}] [string cat $ControllerInfo(m18_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m18)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m18_interface_instance)/ {adr}] [string cat $ControllerInfo(m18)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m18)/ {din}] [string cat $ControllerInfo(m18_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m18)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m18_interface_instance)/ {din}] [string cat $ControllerInfo(m18)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m18)/ {q}] [string cat $ControllerInfo(m18_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m18)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m18)/ {q}] [string cat $ControllerInfo(m18_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m19)/ {wen}] [string cat $ControllerInfo(m19_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m19)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m19_interface_instance)/ {wen}] [string cat $ControllerInfo(m19)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m19)/ {ren}] [string cat $ControllerInfo(m19_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m19)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m19_interface_instance)/ {ren}] [string cat $ControllerInfo(m19)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m19)/ {adr}] [string cat $ControllerInfo(m19_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m19)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m19_interface_instance)/ {adr}] [string cat $ControllerInfo(m19)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m19)/ {din}] [string cat $ControllerInfo(m19_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m19)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m19_interface_instance)/ {din}] [string cat $ControllerInfo(m19)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m19)/ {q}] [string cat $ControllerInfo(m19_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m19)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m19)/ {q}] [string cat $ControllerInfo(m19_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m20)/ {wen}] [string cat $ControllerInfo(m20_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m20)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m20_interface_instance)/ {wen}] [string cat $ControllerInfo(m20)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m20)/ {ren}] [string cat $ControllerInfo(m20_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m20)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m20_interface_instance)/ {ren}] [string cat $ControllerInfo(m20)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m20)/ {adr}] [string cat $ControllerInfo(m20_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m20)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m20_interface_instance)/ {adr}] [string cat $ControllerInfo(m20)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m20)/ {din}] [string cat $ControllerInfo(m20_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m20)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m20_interface_instance)/ {din}] [string cat $ControllerInfo(m20)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m20)/ {q}] [string cat $ControllerInfo(m20_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m20)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m20)/ {q}] [string cat $ControllerInfo(m20_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m21)/ {wen}] [string cat $ControllerInfo(m21_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m21)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m21_interface_instance)/ {wen}] [string cat $ControllerInfo(m21)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m21)/ {ren}] [string cat $ControllerInfo(m21_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m21)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m21_interface_instance)/ {ren}] [string cat $ControllerInfo(m21)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m21)/ {adr}] [string cat $ControllerInfo(m21_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m21)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m21_interface_instance)/ {adr}] [string cat $ControllerInfo(m21)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m21)/ {din}] [string cat $ControllerInfo(m21_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m21)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m21_interface_instance)/ {din}] [string cat $ControllerInfo(m21)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m21)/ {q}] [string cat $ControllerInfo(m21_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m21)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m21)/ {q}] [string cat $ControllerInfo(m21_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m22)/ {wen}] [string cat $ControllerInfo(m22_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m22)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m22_interface_instance)/ {wen}] [string cat $ControllerInfo(m22)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m22)/ {ren}] [string cat $ControllerInfo(m22_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m22)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m22_interface_instance)/ {ren}] [string cat $ControllerInfo(m22)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m22)/ {adr}] [string cat $ControllerInfo(m22_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m22)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m22_interface_instance)/ {adr}] [string cat $ControllerInfo(m22)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m22)/ {din}] [string cat $ControllerInfo(m22_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m22)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m22_interface_instance)/ {din}] [string cat $ControllerInfo(m22)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m22)/ {q}] [string cat $ControllerInfo(m22_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m22)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m22)/ {q}] [string cat $ControllerInfo(m22_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m23)/ {wen}] [string cat $ControllerInfo(m23_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m23)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m23_interface_instance)/ {wen}] [string cat $ControllerInfo(m23)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m23)/ {ren}] [string cat $ControllerInfo(m23_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m23)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m23_interface_instance)/ {ren}] [string cat $ControllerInfo(m23)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m23)/ {adr}] [string cat $ControllerInfo(m23_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m23)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m23_interface_instance)/ {adr}] [string cat $ControllerInfo(m23)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m23)/ {din}] [string cat $ControllerInfo(m23_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m23)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m23_interface_instance)/ {din}] [string cat $ControllerInfo(m23)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m23)/ {q}] [string cat $ControllerInfo(m23_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m23)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m23)/ {q}] [string cat $ControllerInfo(m23_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m24)/ {wen}] [string cat $ControllerInfo(m24_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m24)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m24_interface_instance)/ {wen}] [string cat $ControllerInfo(m24)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m24)/ {ren}] [string cat $ControllerInfo(m24_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m24)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m24_interface_instance)/ {ren}] [string cat $ControllerInfo(m24)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m24)/ {adr}] [string cat $ControllerInfo(m24_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m24)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m24_interface_instance)/ {adr}] [string cat $ControllerInfo(m24)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m24)/ {din}] [string cat $ControllerInfo(m24_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m24)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m24_interface_instance)/ {din}] [string cat $ControllerInfo(m24)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m24)/ {q}] [string cat $ControllerInfo(m24_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m24)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m24)/ {q}] [string cat $ControllerInfo(m24_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m25)/ {wen}] [string cat $ControllerInfo(m25_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m25)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m25_interface_instance)/ {wen}] [string cat $ControllerInfo(m25)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m25)/ {ren}] [string cat $ControllerInfo(m25_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m25)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m25_interface_instance)/ {ren}] [string cat $ControllerInfo(m25)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m25)/ {adr}] [string cat $ControllerInfo(m25_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m25)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m25_interface_instance)/ {adr}] [string cat $ControllerInfo(m25)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m25)/ {din}] [string cat $ControllerInfo(m25_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m25)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m25_interface_instance)/ {din}] [string cat $ControllerInfo(m25)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m25)/ {q}] [string cat $ControllerInfo(m25_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m25)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m25)/ {q}] [string cat $ControllerInfo(m25_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m26)/ {wen}] [string cat $ControllerInfo(m26_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m26)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m26_interface_instance)/ {wen}] [string cat $ControllerInfo(m26)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m26)/ {ren}] [string cat $ControllerInfo(m26_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m26)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m26_interface_instance)/ {ren}] [string cat $ControllerInfo(m26)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m26)/ {adr}] [string cat $ControllerInfo(m26_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m26)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m26_interface_instance)/ {adr}] [string cat $ControllerInfo(m26)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m26)/ {din}] [string cat $ControllerInfo(m26_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m26)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m26_interface_instance)/ {din}] [string cat $ControllerInfo(m26)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m26)/ {q}] [string cat $ControllerInfo(m26_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m26)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m26)/ {q}] [string cat $ControllerInfo(m26_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m27)/ {wen}] [string cat $ControllerInfo(m27_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m27)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m27_interface_instance)/ {wen}] [string cat $ControllerInfo(m27)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m27)/ {ren}] [string cat $ControllerInfo(m27_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m27)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m27_interface_instance)/ {ren}] [string cat $ControllerInfo(m27)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m27)/ {adr}] [string cat $ControllerInfo(m27_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m27)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m27_interface_instance)/ {adr}] [string cat $ControllerInfo(m27)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m27)/ {din}] [string cat $ControllerInfo(m27_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m27)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m27_interface_instance)/ {din}] [string cat $ControllerInfo(m27)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m27)/ {q}] [string cat $ControllerInfo(m27_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m27)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m27)/ {q}] [string cat $ControllerInfo(m27_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m28)/ {wen}] [string cat $ControllerInfo(m28_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m28)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m28_interface_instance)/ {wen}] [string cat $ControllerInfo(m28)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m28)/ {ren}] [string cat $ControllerInfo(m28_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m28)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m28_interface_instance)/ {ren}] [string cat $ControllerInfo(m28)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m28)/ {adr}] [string cat $ControllerInfo(m28_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m28)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m28_interface_instance)/ {adr}] [string cat $ControllerInfo(m28)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m28)/ {din}] [string cat $ControllerInfo(m28_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m28)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m28_interface_instance)/ {din}] [string cat $ControllerInfo(m28)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m28)/ {q}] [string cat $ControllerInfo(m28_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m28)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m28)/ {q}] [string cat $ControllerInfo(m28_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m29)/ {wen}] [string cat $ControllerInfo(m29_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m29)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m29_interface_instance)/ {wen}] [string cat $ControllerInfo(m29)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m29)/ {ren}] [string cat $ControllerInfo(m29_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m29)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m29_interface_instance)/ {ren}] [string cat $ControllerInfo(m29)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m29)/ {adr}] [string cat $ControllerInfo(m29_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m29)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m29_interface_instance)/ {adr}] [string cat $ControllerInfo(m29)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m29)/ {din}] [string cat $ControllerInfo(m29_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m29)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m29_interface_instance)/ {din}] [string cat $ControllerInfo(m29)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m29)/ {q}] [string cat $ControllerInfo(m29_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m29)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m29)/ {q}] [string cat $ControllerInfo(m29_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m30)/ {wen}] [string cat $ControllerInfo(m30_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m30)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m30_interface_instance)/ {wen}] [string cat $ControllerInfo(m30)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m30)/ {ren}] [string cat $ControllerInfo(m30_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m30)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m30_interface_instance)/ {ren}] [string cat $ControllerInfo(m30)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m30)/ {adr}] [string cat $ControllerInfo(m30_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m30)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m30_interface_instance)/ {adr}] [string cat $ControllerInfo(m30)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m30)/ {din}] [string cat $ControllerInfo(m30_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m30)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m30_interface_instance)/ {din}] [string cat $ControllerInfo(m30)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m30)/ {q}] [string cat $ControllerInfo(m30_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m30)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m30)/ {q}] [string cat $ControllerInfo(m30_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m31)/ {wen}] [string cat $ControllerInfo(m31_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m31)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m31_interface_instance)/ {wen}] [string cat $ControllerInfo(m31)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m31)/ {ren}] [string cat $ControllerInfo(m31_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m31)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m31_interface_instance)/ {ren}] [string cat $ControllerInfo(m31)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m31)/ {adr}] [string cat $ControllerInfo(m31_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m31)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m31_interface_instance)/ {adr}] [string cat $ControllerInfo(m31)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m31)/ {din}] [string cat $ControllerInfo(m31_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m31)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m31_interface_instance)/ {din}] [string cat $ControllerInfo(m31)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m31)/ {q}] [string cat $ControllerInfo(m31_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m31)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m31)/ {q}] [string cat $ControllerInfo(m31_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m32)/ {wen}] [string cat $ControllerInfo(m32_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m32)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m32_interface_instance)/ {wen}] [string cat $ControllerInfo(m32)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m32)/ {ren}] [string cat $ControllerInfo(m32_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m32)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m32_interface_instance)/ {ren}] [string cat $ControllerInfo(m32)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m32)/ {adr}] [string cat $ControllerInfo(m32_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m32)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m32_interface_instance)/ {adr}] [string cat $ControllerInfo(m32)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m32)/ {din}] [string cat $ControllerInfo(m32_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m32)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m32_interface_instance)/ {din}] [string cat $ControllerInfo(m32)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m32)/ {q}] [string cat $ControllerInfo(m32_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m32)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m32)/ {q}] [string cat $ControllerInfo(m32_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m33)/ {wen}] [string cat $ControllerInfo(m33_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m33)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m33_interface_instance)/ {wen}] [string cat $ControllerInfo(m33)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m33)/ {ren}] [string cat $ControllerInfo(m33_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m33)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m33_interface_instance)/ {ren}] [string cat $ControllerInfo(m33)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m33)/ {adr}] [string cat $ControllerInfo(m33_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m33)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m33_interface_instance)/ {adr}] [string cat $ControllerInfo(m33)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m33)/ {din}] [string cat $ControllerInfo(m33_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m33)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m33_interface_instance)/ {din}] [string cat $ControllerInfo(m33)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m33)/ {q}] [string cat $ControllerInfo(m33_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m33)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m33)/ {q}] [string cat $ControllerInfo(m33_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m34)/ {wen}] [string cat $ControllerInfo(m34_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m34)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m34_interface_instance)/ {wen}] [string cat $ControllerInfo(m34)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m34)/ {ren}] [string cat $ControllerInfo(m34_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m34)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m34_interface_instance)/ {ren}] [string cat $ControllerInfo(m34)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m34)/ {adr}] [string cat $ControllerInfo(m34_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m34)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m34_interface_instance)/ {adr}] [string cat $ControllerInfo(m34)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m34)/ {din}] [string cat $ControllerInfo(m34_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m34)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m34_interface_instance)/ {din}] [string cat $ControllerInfo(m34)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m34)/ {q}] [string cat $ControllerInfo(m34_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m34)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m34)/ {q}] [string cat $ControllerInfo(m34_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m35)/ {wen}] [string cat $ControllerInfo(m35_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m35)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m35_interface_instance)/ {wen}] [string cat $ControllerInfo(m35)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m35)/ {ren}] [string cat $ControllerInfo(m35_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m35)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m35_interface_instance)/ {ren}] [string cat $ControllerInfo(m35)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m35)/ {adr}] [string cat $ControllerInfo(m35_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m35)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m35_interface_instance)/ {adr}] [string cat $ControllerInfo(m35)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m35)/ {din}] [string cat $ControllerInfo(m35_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m35)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m35_interface_instance)/ {din}] [string cat $ControllerInfo(m35)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m35)/ {q}] [string cat $ControllerInfo(m35_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m35)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m35)/ {q}] [string cat $ControllerInfo(m35_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m36)/ {wen}] [string cat $ControllerInfo(m36_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m36)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m36_interface_instance)/ {wen}] [string cat $ControllerInfo(m36)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m36)/ {ren}] [string cat $ControllerInfo(m36_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m36)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m36_interface_instance)/ {ren}] [string cat $ControllerInfo(m36)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m36)/ {adr}] [string cat $ControllerInfo(m36_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m36)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m36_interface_instance)/ {adr}] [string cat $ControllerInfo(m36)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m36)/ {din}] [string cat $ControllerInfo(m36_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m36)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m36_interface_instance)/ {din}] [string cat $ControllerInfo(m36)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m36)/ {q}] [string cat $ControllerInfo(m36_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m36)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m36)/ {q}] [string cat $ControllerInfo(m36_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m37)/ {wen}] [string cat $ControllerInfo(m37_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m37)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m37_interface_instance)/ {wen}] [string cat $ControllerInfo(m37)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m37)/ {ren}] [string cat $ControllerInfo(m37_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m37)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m37_interface_instance)/ {ren}] [string cat $ControllerInfo(m37)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m37)/ {adr}] [string cat $ControllerInfo(m37_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m37)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m37_interface_instance)/ {adr}] [string cat $ControllerInfo(m37)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m37)/ {din}] [string cat $ControllerInfo(m37_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m37)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m37_interface_instance)/ {din}] [string cat $ControllerInfo(m37)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m37)/ {q}] [string cat $ControllerInfo(m37_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m37)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m37)/ {q}] [string cat $ControllerInfo(m37_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m38)/ {wen}] [string cat $ControllerInfo(m38_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m38)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m38_interface_instance)/ {wen}] [string cat $ControllerInfo(m38)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m38)/ {ren}] [string cat $ControllerInfo(m38_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m38)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m38_interface_instance)/ {ren}] [string cat $ControllerInfo(m38)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m38)/ {adr}] [string cat $ControllerInfo(m38_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m38)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m38_interface_instance)/ {adr}] [string cat $ControllerInfo(m38)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m38)/ {din}] [string cat $ControllerInfo(m38_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m38)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m38_interface_instance)/ {din}] [string cat $ControllerInfo(m38)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m38)/ {q}] [string cat $ControllerInfo(m38_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m38)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m38)/ {q}] [string cat $ControllerInfo(m38_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m39)/ {wen}] [string cat $ControllerInfo(m39_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m39)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m39_interface_instance)/ {wen}] [string cat $ControllerInfo(m39)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m39)/ {ren}] [string cat $ControllerInfo(m39_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m39)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m39_interface_instance)/ {ren}] [string cat $ControllerInfo(m39)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m39)/ {adr}] [string cat $ControllerInfo(m39_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m39)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m39_interface_instance)/ {adr}] [string cat $ControllerInfo(m39)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m39)/ {din}] [string cat $ControllerInfo(m39_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m39)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m39_interface_instance)/ {din}] [string cat $ControllerInfo(m39)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m39)/ {q}] [string cat $ControllerInfo(m39_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m39)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m39)/ {q}] [string cat $ControllerInfo(m39_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  move [string cat $ControllerInfo(m40)/ {wen}] [string cat $ControllerInfo(m40_interface_instance)/ {wen_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m40)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m40_interface_instance)/ {wen}] [string cat $ControllerInfo(m40)/ {wen}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_wen
  move [string cat $ControllerInfo(m40)/ {ren}] [string cat $ControllerInfo(m40_interface_instance)/ {ren_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m40)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m40_interface_instance)/ {ren}] [string cat $ControllerInfo(m40)/ {ren}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group control_port_ren
  move [string cat $ControllerInfo(m40)/ {adr}] [string cat $ControllerInfo(m40_interface_instance)/ {adr_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m40)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m40_interface_instance)/ {adr}] [string cat $ControllerInfo(m40)/ {adr}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group address_adr
  move [string cat $ControllerInfo(m40)/ {din}] [string cat $ControllerInfo(m40_interface_instance)/ {din_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m40)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m40_interface_instance)/ {din}] [string cat $ControllerInfo(m40)/ {din}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_din
  move [string cat $ControllerInfo(m40)/ {q}] [string cat $ControllerInfo(m40_interface_instance)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  constant `open [string cat $ControllerInfo(m40)/ {q}] -condition "$ControllerInfo(create_shared_bus_assembly)"
  connect [string cat $ControllerInfo(m40)/ {q}] [string cat $ControllerInfo(m40_interface_instance)/ {q_IN}] -condition "$ControllerInfo(create_shared_bus_assembly)" -group data_q
  }
  set merger_proc_name C1_ConnectionInfo
