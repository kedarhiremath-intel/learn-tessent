/*
----------------------------------------------------------------------------------
-                                                                                -
-  Unpublished work. Copyright 2022 Siemens                                      -
-                                                                                -
-  This material contains trade secrets or otherwise confidential                -
-  information owned by Siemens Industry Software Inc. or its affiliates         -
-  (collectively, SISW), or its licensors. Access to and use of this             -
-  information is strictly limited as set forth in the Customer's                -
-  applicable agreements with SISW.                                              -
-                                                                                -
----------------------------------------------------------------------------------
-  File created by: Tessent Shell                                                -
-          Version: 2022.4                                                       -
<<<<<<< HEAD
-       Created on: Sun Oct 29 23:50:34 PDT 2023                                 -
=======
-       Created on: Sun Oct 29 14:14:35 PDT 2023                                 -
>>>>>>> 4e4549e56b67a7b4dea437b7120c3145ada194bf
----------------------------------------------------------------------------------


*/
`ifdef MGC_INHIBIT_MEM_SCAN_MODEL
`else

`celldefine
module ip783hdspsr1024x72m2b2s0c1r2p3d0a2_mem_wrapper (
    row_repair_in, 
    col_repair_in, 
    
    clk,
    wen,
    ren,
    async_rst,
    fastsleep,
    deepsleep,
    sbc,
    shutoff,
    mce,
    stbyp,
    rmce,
    wmce,
    wpulse,
    wa_disable,
    wa,
    ra,
    global_rrow_en_in,
    isolation_control_in,
    dpslp_or_shutoffout,
    shutoffout,
    adr,
    din,
    q

);
input           clk;
input           wen;
input           ren;
input           async_rst;
input           fastsleep;
input           deepsleep;
input   [1:0]   sbc;
input           shutoff;
input           mce;
input           stbyp;
input   [3:0]   rmce;
input   [1:0]   wmce;
input   [1:0]   wpulse;
input           wa_disable;
input   [2:0]   wa;
input   [1:0]   ra;
input   [1:0]   global_rrow_en_in;
input           isolation_control_in;
output          dpslp_or_shutoffout;
output          shutoffout;
input  [9:0]    adr;
input  [71:0]   din;
output [71:0]   q;
input [25:0]    row_repair_in;
input [12:0]    col_repair_in;


//------------
//-- Wires  --
//------------
// {{{
wire clk_BIT0_MUXED;
wire adr_BIT9_MUXED;
wire adr_BIT8_MUXED;
wire adr_BIT7_MUXED;
wire adr_BIT6_MUXED;
wire adr_BIT5_MUXED;
wire adr_BIT4_MUXED;
wire adr_BIT3_MUXED;
wire adr_BIT2_MUXED;
wire adr_BIT1_MUXED;
wire adr_BIT0_MUXED;
wire wen_BIT0_MUXED;
wire ren_BIT0_MUXED;
wire din_BIT71_MUXED;
wire din_BIT70_MUXED;
wire din_BIT69_MUXED;
wire din_BIT68_MUXED;
wire din_BIT67_MUXED;
wire din_BIT66_MUXED;
wire din_BIT65_MUXED;
wire din_BIT64_MUXED;
wire din_BIT63_MUXED;
wire din_BIT62_MUXED;
wire din_BIT61_MUXED;
wire din_BIT60_MUXED;
wire din_BIT59_MUXED;
wire din_BIT58_MUXED;
wire din_BIT57_MUXED;
wire din_BIT56_MUXED;
wire din_BIT55_MUXED;
wire din_BIT54_MUXED;
wire din_BIT53_MUXED;
wire din_BIT52_MUXED;
wire din_BIT51_MUXED;
wire din_BIT50_MUXED;
wire din_BIT49_MUXED;
wire din_BIT48_MUXED;
wire din_BIT47_MUXED;
wire din_BIT46_MUXED;
wire din_BIT45_MUXED;
wire din_BIT44_MUXED;
wire din_BIT43_MUXED;
wire din_BIT42_MUXED;
wire din_BIT41_MUXED;
wire din_BIT40_MUXED;
wire din_BIT39_MUXED;
wire din_BIT38_MUXED;
wire din_BIT37_MUXED;
wire din_BIT36_MUXED;
wire din_BIT35_MUXED;
wire din_BIT34_MUXED;
wire din_BIT33_MUXED;
wire din_BIT32_MUXED;
wire din_BIT31_MUXED;
wire din_BIT30_MUXED;
wire din_BIT29_MUXED;
wire din_BIT28_MUXED;
wire din_BIT27_MUXED;
wire din_BIT26_MUXED;
wire din_BIT25_MUXED;
wire din_BIT24_MUXED;
wire din_BIT23_MUXED;
wire din_BIT22_MUXED;
wire din_BIT21_MUXED;
wire din_BIT20_MUXED;
wire din_BIT19_MUXED;
wire din_BIT18_MUXED;
wire din_BIT17_MUXED;
wire din_BIT16_MUXED;
wire din_BIT15_MUXED;
wire din_BIT14_MUXED;
wire din_BIT13_MUXED;
wire din_BIT12_MUXED;
wire din_BIT11_MUXED;
wire din_BIT10_MUXED;
wire din_BIT9_MUXED;
wire din_BIT8_MUXED;
wire din_BIT7_MUXED;
wire din_BIT6_MUXED;
wire din_BIT5_MUXED;
wire din_BIT4_MUXED;
wire din_BIT3_MUXED;
wire din_BIT2_MUXED;
wire din_BIT1_MUXED;
wire din_BIT0_MUXED;
wire q_BIT71_DRIVER;
wire q_BIT70_DRIVER;
wire q_BIT69_DRIVER;
wire q_BIT68_DRIVER;
wire q_BIT67_DRIVER;
wire q_BIT66_DRIVER;
wire q_BIT65_DRIVER;
wire q_BIT64_DRIVER;
wire q_BIT63_DRIVER;
wire q_BIT62_DRIVER;
wire q_BIT61_DRIVER;
wire q_BIT60_DRIVER;
wire q_BIT59_DRIVER;
wire q_BIT58_DRIVER;
wire q_BIT57_DRIVER;
wire q_BIT56_DRIVER;
wire q_BIT55_DRIVER;
wire q_BIT54_DRIVER;
wire q_BIT53_DRIVER;
wire q_BIT52_DRIVER;
wire q_BIT51_DRIVER;
wire q_BIT50_DRIVER;
wire q_BIT49_DRIVER;
wire q_BIT48_DRIVER;
wire q_BIT47_DRIVER;
wire q_BIT46_DRIVER;
wire q_BIT45_DRIVER;
wire q_BIT44_DRIVER;
wire q_BIT43_DRIVER;
wire q_BIT42_DRIVER;
wire q_BIT41_DRIVER;
wire q_BIT40_DRIVER;
wire q_BIT39_DRIVER;
wire q_BIT38_DRIVER;
wire q_BIT37_DRIVER;
wire q_BIT36_DRIVER;
wire q_BIT35_DRIVER;
wire q_BIT34_DRIVER;
wire q_BIT33_DRIVER;
wire q_BIT32_DRIVER;
wire q_BIT31_DRIVER;
wire q_BIT30_DRIVER;
wire q_BIT29_DRIVER;
wire q_BIT28_DRIVER;
wire q_BIT27_DRIVER;
wire q_BIT26_DRIVER;
wire q_BIT25_DRIVER;
wire q_BIT24_DRIVER;
wire q_BIT23_DRIVER;
wire q_BIT22_DRIVER;
wire q_BIT21_DRIVER;
wire q_BIT20_DRIVER;
wire q_BIT19_DRIVER;
wire q_BIT18_DRIVER;
wire q_BIT17_DRIVER;
wire q_BIT16_DRIVER;
wire q_BIT15_DRIVER;
wire q_BIT14_DRIVER;
wire q_BIT13_DRIVER;
wire q_BIT12_DRIVER;
wire q_BIT11_DRIVER;
wire q_BIT10_DRIVER;
wire q_BIT9_DRIVER;
wire q_BIT8_DRIVER;
wire q_BIT7_DRIVER;
wire q_BIT6_DRIVER;
wire q_BIT5_DRIVER;
wire q_BIT4_DRIVER;
wire q_BIT3_DRIVER;
wire q_BIT2_DRIVER;
wire q_BIT1_DRIVER;
wire q_BIT0_DRIVER;
// }}}

//---------------
//-- Main Code --
//---------------

//-----------------
//-- Clock ports --
//-----------------
// {{{
assign clk_BIT0_MUXED  = clk;
// }}}

//-------------------
//-- Address ports --
//-------------------
// {{{
assign adr_BIT9_MUXED  = adr[9];
assign adr_BIT8_MUXED  = adr[8];
assign adr_BIT7_MUXED  = adr[7];
assign adr_BIT6_MUXED  = adr[6];
assign adr_BIT5_MUXED  = adr[5];
assign adr_BIT4_MUXED  = adr[4];
assign adr_BIT3_MUXED  = adr[3];
assign adr_BIT2_MUXED  = adr[2];
assign adr_BIT1_MUXED  = adr[1];
assign adr_BIT0_MUXED  = adr[0];
// }}}

//-------------------
//-- Control ports --
//-------------------
// {{{
assign wen_BIT0_MUXED  = wen;
assign ren_BIT0_MUXED  = ren;
// }}}

//----------------------
//-- Data input ports --
//----------------------
// {{{
assign din_BIT71_MUXED  = din[71];
assign din_BIT70_MUXED  = din[70];
assign din_BIT69_MUXED  = din[69];
assign din_BIT68_MUXED  = din[68];
assign din_BIT67_MUXED  = din[67];
assign din_BIT66_MUXED  = din[66];
assign din_BIT65_MUXED  = din[65];
assign din_BIT64_MUXED  = din[64];
assign din_BIT63_MUXED  = din[63];
assign din_BIT62_MUXED  = din[62];
assign din_BIT61_MUXED  = din[61];
assign din_BIT60_MUXED  = din[60];
assign din_BIT59_MUXED  = din[59];
assign din_BIT58_MUXED  = din[58];
assign din_BIT57_MUXED  = din[57];
assign din_BIT56_MUXED  = din[56];
assign din_BIT55_MUXED  = din[55];
assign din_BIT54_MUXED  = din[54];
assign din_BIT53_MUXED  = din[53];
assign din_BIT52_MUXED  = din[52];
assign din_BIT51_MUXED  = din[51];
assign din_BIT50_MUXED  = din[50];
assign din_BIT49_MUXED  = din[49];
assign din_BIT48_MUXED  = din[48];
assign din_BIT47_MUXED  = din[47];
assign din_BIT46_MUXED  = din[46];
assign din_BIT45_MUXED  = din[45];
assign din_BIT44_MUXED  = din[44];
assign din_BIT43_MUXED  = din[43];
assign din_BIT42_MUXED  = din[42];
assign din_BIT41_MUXED  = din[41];
assign din_BIT40_MUXED  = din[40];
assign din_BIT39_MUXED  = din[39];
assign din_BIT38_MUXED  = din[38];
assign din_BIT37_MUXED  = din[37];
assign din_BIT36_MUXED  = din[36];
assign din_BIT35_MUXED  = din[35];
assign din_BIT34_MUXED  = din[34];
assign din_BIT33_MUXED  = din[33];
assign din_BIT32_MUXED  = din[32];
assign din_BIT31_MUXED  = din[31];
assign din_BIT30_MUXED  = din[30];
assign din_BIT29_MUXED  = din[29];
assign din_BIT28_MUXED  = din[28];
assign din_BIT27_MUXED  = din[27];
assign din_BIT26_MUXED  = din[26];
assign din_BIT25_MUXED  = din[25];
assign din_BIT24_MUXED  = din[24];
assign din_BIT23_MUXED  = din[23];
assign din_BIT22_MUXED  = din[22];
assign din_BIT21_MUXED  = din[21];
assign din_BIT20_MUXED  = din[20];
assign din_BIT19_MUXED  = din[19];
assign din_BIT18_MUXED  = din[18];
assign din_BIT17_MUXED  = din[17];
assign din_BIT16_MUXED  = din[16];
assign din_BIT15_MUXED  = din[15];
assign din_BIT14_MUXED  = din[14];
assign din_BIT13_MUXED  = din[13];
assign din_BIT12_MUXED  = din[12];
assign din_BIT11_MUXED  = din[11];
assign din_BIT10_MUXED  = din[10];
assign din_BIT9_MUXED  = din[9];
assign din_BIT8_MUXED  = din[8];
assign din_BIT7_MUXED  = din[7];
assign din_BIT6_MUXED  = din[6];
assign din_BIT5_MUXED  = din[5];
assign din_BIT4_MUXED  = din[4];
assign din_BIT3_MUXED  = din[3];
assign din_BIT2_MUXED  = din[2];
assign din_BIT1_MUXED  = din[1];
assign din_BIT0_MUXED  = din[0];
// }}}

//-----------------------
//-- Data output ports --
//-----------------------
// {{{
assign q_BIT71_DRIVER  = 1'bz;
assign q_BIT70_DRIVER  = 1'bz;
assign q_BIT69_DRIVER  = 1'bz;
assign q_BIT68_DRIVER  = 1'bz;
assign q_BIT67_DRIVER  = 1'bz;
assign q_BIT66_DRIVER  = 1'bz;
assign q_BIT65_DRIVER  = 1'bz;
assign q_BIT64_DRIVER  = 1'bz;
assign q_BIT63_DRIVER  = 1'bz;
assign q_BIT62_DRIVER  = 1'bz;
assign q_BIT61_DRIVER  = 1'bz;
assign q_BIT60_DRIVER  = 1'bz;
assign q_BIT59_DRIVER  = 1'bz;
assign q_BIT58_DRIVER  = 1'bz;
assign q_BIT57_DRIVER  = 1'bz;
assign q_BIT56_DRIVER  = 1'bz;
assign q_BIT55_DRIVER  = 1'bz;
assign q_BIT54_DRIVER  = 1'bz;
assign q_BIT53_DRIVER  = 1'bz;
assign q_BIT52_DRIVER  = 1'bz;
assign q_BIT51_DRIVER  = 1'bz;
assign q_BIT50_DRIVER  = 1'bz;
assign q_BIT49_DRIVER  = 1'bz;
assign q_BIT48_DRIVER  = 1'bz;
assign q_BIT47_DRIVER  = 1'bz;
assign q_BIT46_DRIVER  = 1'bz;
assign q_BIT45_DRIVER  = 1'bz;
assign q_BIT44_DRIVER  = 1'bz;
assign q_BIT43_DRIVER  = 1'bz;
assign q_BIT42_DRIVER  = 1'bz;
assign q_BIT41_DRIVER  = 1'bz;
assign q_BIT40_DRIVER  = 1'bz;
assign q_BIT39_DRIVER  = 1'bz;
assign q_BIT38_DRIVER  = 1'bz;
assign q_BIT37_DRIVER  = 1'bz;
assign q_BIT36_DRIVER  = 1'bz;
assign q_BIT35_DRIVER  = 1'bz;
assign q_BIT34_DRIVER  = 1'bz;
assign q_BIT33_DRIVER  = 1'bz;
assign q_BIT32_DRIVER  = 1'bz;
assign q_BIT31_DRIVER  = 1'bz;
assign q_BIT30_DRIVER  = 1'bz;
assign q_BIT29_DRIVER  = 1'bz;
assign q_BIT28_DRIVER  = 1'bz;
assign q_BIT27_DRIVER  = 1'bz;
assign q_BIT26_DRIVER  = 1'bz;
assign q_BIT25_DRIVER  = 1'bz;
assign q_BIT24_DRIVER  = 1'bz;
assign q_BIT23_DRIVER  = 1'bz;
assign q_BIT22_DRIVER  = 1'bz;
assign q_BIT21_DRIVER  = 1'bz;
assign q_BIT20_DRIVER  = 1'bz;
assign q_BIT19_DRIVER  = 1'bz;
assign q_BIT18_DRIVER  = 1'bz;
assign q_BIT17_DRIVER  = 1'bz;
assign q_BIT16_DRIVER  = 1'bz;
assign q_BIT15_DRIVER  = 1'bz;
assign q_BIT14_DRIVER  = 1'bz;
assign q_BIT13_DRIVER  = 1'bz;
assign q_BIT12_DRIVER  = 1'bz;
assign q_BIT11_DRIVER  = 1'bz;
assign q_BIT10_DRIVER  = 1'bz;
assign q_BIT9_DRIVER  = 1'bz;
assign q_BIT8_DRIVER  = 1'bz;
assign q_BIT7_DRIVER  = 1'bz;
assign q_BIT6_DRIVER  = 1'bz;
assign q_BIT5_DRIVER  = 1'bz;
assign q_BIT4_DRIVER  = 1'bz;
assign q_BIT3_DRIVER  = 1'bz;
assign q_BIT2_DRIVER  = 1'bz;
assign q_BIT1_DRIVER  = 1'bz;
assign q_BIT0_DRIVER  = 1'bz;
assign q[71]    = q_BIT71_DRIVER;
assign q[70]    = q_BIT70_DRIVER;
assign q[69]    = q_BIT69_DRIVER;
assign q[68]    = q_BIT68_DRIVER;
assign q[67]    = q_BIT67_DRIVER;
assign q[66]    = q_BIT66_DRIVER;
assign q[65]    = q_BIT65_DRIVER;
assign q[64]    = q_BIT64_DRIVER;
assign q[63]    = q_BIT63_DRIVER;
assign q[62]    = q_BIT62_DRIVER;
assign q[61]    = q_BIT61_DRIVER;
assign q[60]    = q_BIT60_DRIVER;
assign q[59]    = q_BIT59_DRIVER;
assign q[58]    = q_BIT58_DRIVER;
assign q[57]    = q_BIT57_DRIVER;
assign q[56]    = q_BIT56_DRIVER;
assign q[55]    = q_BIT55_DRIVER;
assign q[54]    = q_BIT54_DRIVER;
assign q[53]    = q_BIT53_DRIVER;
assign q[52]    = q_BIT52_DRIVER;
assign q[51]    = q_BIT51_DRIVER;
assign q[50]    = q_BIT50_DRIVER;
assign q[49]    = q_BIT49_DRIVER;
assign q[48]    = q_BIT48_DRIVER;
assign q[47]    = q_BIT47_DRIVER;
assign q[46]    = q_BIT46_DRIVER;
assign q[45]    = q_BIT45_DRIVER;
assign q[44]    = q_BIT44_DRIVER;
assign q[43]    = q_BIT43_DRIVER;
assign q[42]    = q_BIT42_DRIVER;
assign q[41]    = q_BIT41_DRIVER;
assign q[40]    = q_BIT40_DRIVER;
assign q[39]    = q_BIT39_DRIVER;
assign q[38]    = q_BIT38_DRIVER;
assign q[37]    = q_BIT37_DRIVER;
assign q[36]    = q_BIT36_DRIVER;
assign q[35]    = q_BIT35_DRIVER;
assign q[34]    = q_BIT34_DRIVER;
assign q[33]    = q_BIT33_DRIVER;
assign q[32]    = q_BIT32_DRIVER;
assign q[31]    = q_BIT31_DRIVER;
assign q[30]    = q_BIT30_DRIVER;
assign q[29]    = q_BIT29_DRIVER;
assign q[28]    = q_BIT28_DRIVER;
assign q[27]    = q_BIT27_DRIVER;
assign q[26]    = q_BIT26_DRIVER;
assign q[25]    = q_BIT25_DRIVER;
assign q[24]    = q_BIT24_DRIVER;
assign q[23]    = q_BIT23_DRIVER;
assign q[22]    = q_BIT22_DRIVER;
assign q[21]    = q_BIT21_DRIVER;
assign q[20]    = q_BIT20_DRIVER;
assign q[19]    = q_BIT19_DRIVER;
assign q[18]    = q_BIT18_DRIVER;
assign q[17]    = q_BIT17_DRIVER;
assign q[16]    = q_BIT16_DRIVER;
assign q[15]    = q_BIT15_DRIVER;
assign q[14]    = q_BIT14_DRIVER;
assign q[13]    = q_BIT13_DRIVER;
assign q[12]    = q_BIT12_DRIVER;
assign q[11]    = q_BIT11_DRIVER;
assign q[10]    = q_BIT10_DRIVER;
assign q[9]     = q_BIT9_DRIVER;
assign q[8]     = q_BIT8_DRIVER;
assign q[7]     = q_BIT7_DRIVER;
assign q[6]     = q_BIT6_DRIVER;
assign q[5]     = q_BIT5_DRIVER;
assign q[4]     = q_BIT4_DRIVER;
assign q[3]     = q_BIT3_DRIVER;
assign q[2]     = q_BIT2_DRIVER;
assign q[1]     = q_BIT1_DRIVER;
assign q[0]     = q_BIT0_DRIVER;
// }}}

`ifdef LV_scanmodel
// {{{
lv_assumed_mbist_mem_in( adr_BIT9_MUXED );
lv_assumed_mbist_mem_in( adr_BIT8_MUXED );
lv_assumed_mbist_mem_in( adr_BIT7_MUXED );
lv_assumed_mbist_mem_in( adr_BIT6_MUXED );
lv_assumed_mbist_mem_in( adr_BIT5_MUXED );
lv_assumed_mbist_mem_in( adr_BIT4_MUXED );
lv_assumed_mbist_mem_in( adr_BIT3_MUXED );
lv_assumed_mbist_mem_in( adr_BIT2_MUXED );
lv_assumed_mbist_mem_in( adr_BIT1_MUXED );
lv_assumed_mbist_mem_in( adr_BIT0_MUXED );
lv_assumed_mbist_mem_in( wen_BIT0_MUXED );
lv_assumed_mbist_mem_in( ren_BIT0_MUXED );
lv_assumed_mbist_mem_in( din_BIT71_MUXED );
lv_assumed_mbist_mem_in( din_BIT70_MUXED );
lv_assumed_mbist_mem_in( din_BIT69_MUXED );
lv_assumed_mbist_mem_in( din_BIT68_MUXED );
lv_assumed_mbist_mem_in( din_BIT67_MUXED );
lv_assumed_mbist_mem_in( din_BIT66_MUXED );
lv_assumed_mbist_mem_in( din_BIT65_MUXED );
lv_assumed_mbist_mem_in( din_BIT64_MUXED );
lv_assumed_mbist_mem_in( din_BIT63_MUXED );
lv_assumed_mbist_mem_in( din_BIT62_MUXED );
lv_assumed_mbist_mem_in( din_BIT61_MUXED );
lv_assumed_mbist_mem_in( din_BIT60_MUXED );
lv_assumed_mbist_mem_in( din_BIT59_MUXED );
lv_assumed_mbist_mem_in( din_BIT58_MUXED );
lv_assumed_mbist_mem_in( din_BIT57_MUXED );
lv_assumed_mbist_mem_in( din_BIT56_MUXED );
lv_assumed_mbist_mem_in( din_BIT55_MUXED );
lv_assumed_mbist_mem_in( din_BIT54_MUXED );
lv_assumed_mbist_mem_in( din_BIT53_MUXED );
lv_assumed_mbist_mem_in( din_BIT52_MUXED );
lv_assumed_mbist_mem_in( din_BIT51_MUXED );
lv_assumed_mbist_mem_in( din_BIT50_MUXED );
lv_assumed_mbist_mem_in( din_BIT49_MUXED );
lv_assumed_mbist_mem_in( din_BIT48_MUXED );
lv_assumed_mbist_mem_in( din_BIT47_MUXED );
lv_assumed_mbist_mem_in( din_BIT46_MUXED );
lv_assumed_mbist_mem_in( din_BIT45_MUXED );
lv_assumed_mbist_mem_in( din_BIT44_MUXED );
lv_assumed_mbist_mem_in( din_BIT43_MUXED );
lv_assumed_mbist_mem_in( din_BIT42_MUXED );
lv_assumed_mbist_mem_in( din_BIT41_MUXED );
lv_assumed_mbist_mem_in( din_BIT40_MUXED );
lv_assumed_mbist_mem_in( din_BIT39_MUXED );
lv_assumed_mbist_mem_in( din_BIT38_MUXED );
lv_assumed_mbist_mem_in( din_BIT37_MUXED );
lv_assumed_mbist_mem_in( din_BIT36_MUXED );
lv_assumed_mbist_mem_in( din_BIT35_MUXED );
lv_assumed_mbist_mem_in( din_BIT34_MUXED );
lv_assumed_mbist_mem_in( din_BIT33_MUXED );
lv_assumed_mbist_mem_in( din_BIT32_MUXED );
lv_assumed_mbist_mem_in( din_BIT31_MUXED );
lv_assumed_mbist_mem_in( din_BIT30_MUXED );
lv_assumed_mbist_mem_in( din_BIT29_MUXED );
lv_assumed_mbist_mem_in( din_BIT28_MUXED );
lv_assumed_mbist_mem_in( din_BIT27_MUXED );
lv_assumed_mbist_mem_in( din_BIT26_MUXED );
lv_assumed_mbist_mem_in( din_BIT25_MUXED );
lv_assumed_mbist_mem_in( din_BIT24_MUXED );
lv_assumed_mbist_mem_in( din_BIT23_MUXED );
lv_assumed_mbist_mem_in( din_BIT22_MUXED );
lv_assumed_mbist_mem_in( din_BIT21_MUXED );
lv_assumed_mbist_mem_in( din_BIT20_MUXED );
lv_assumed_mbist_mem_in( din_BIT19_MUXED );
lv_assumed_mbist_mem_in( din_BIT18_MUXED );
lv_assumed_mbist_mem_in( din_BIT17_MUXED );
lv_assumed_mbist_mem_in( din_BIT16_MUXED );
lv_assumed_mbist_mem_in( din_BIT15_MUXED );
lv_assumed_mbist_mem_in( din_BIT14_MUXED );
lv_assumed_mbist_mem_in( din_BIT13_MUXED );
lv_assumed_mbist_mem_in( din_BIT12_MUXED );
lv_assumed_mbist_mem_in( din_BIT11_MUXED );
lv_assumed_mbist_mem_in( din_BIT10_MUXED );
lv_assumed_mbist_mem_in( din_BIT9_MUXED );
lv_assumed_mbist_mem_in( din_BIT8_MUXED );
lv_assumed_mbist_mem_in( din_BIT7_MUXED );
lv_assumed_mbist_mem_in( din_BIT6_MUXED );
lv_assumed_mbist_mem_in( din_BIT5_MUXED );
lv_assumed_mbist_mem_in( din_BIT4_MUXED );
lv_assumed_mbist_mem_in( din_BIT3_MUXED );
lv_assumed_mbist_mem_in( din_BIT2_MUXED );
lv_assumed_mbist_mem_in( din_BIT1_MUXED );
lv_assumed_mbist_mem_in( din_BIT0_MUXED );
lv_assumed_mbist_mem_out( q_BIT71_DRIVER );
lv_assumed_mbist_mem_out( q_BIT70_DRIVER );
lv_assumed_mbist_mem_out( q_BIT69_DRIVER );
lv_assumed_mbist_mem_out( q_BIT68_DRIVER );
lv_assumed_mbist_mem_out( q_BIT67_DRIVER );
lv_assumed_mbist_mem_out( q_BIT66_DRIVER );
lv_assumed_mbist_mem_out( q_BIT65_DRIVER );
lv_assumed_mbist_mem_out( q_BIT64_DRIVER );
lv_assumed_mbist_mem_out( q_BIT63_DRIVER );
lv_assumed_mbist_mem_out( q_BIT62_DRIVER );
lv_assumed_mbist_mem_out( q_BIT61_DRIVER );
lv_assumed_mbist_mem_out( q_BIT60_DRIVER );
lv_assumed_mbist_mem_out( q_BIT59_DRIVER );
lv_assumed_mbist_mem_out( q_BIT58_DRIVER );
lv_assumed_mbist_mem_out( q_BIT57_DRIVER );
lv_assumed_mbist_mem_out( q_BIT56_DRIVER );
lv_assumed_mbist_mem_out( q_BIT55_DRIVER );
lv_assumed_mbist_mem_out( q_BIT54_DRIVER );
lv_assumed_mbist_mem_out( q_BIT53_DRIVER );
lv_assumed_mbist_mem_out( q_BIT52_DRIVER );
lv_assumed_mbist_mem_out( q_BIT51_DRIVER );
lv_assumed_mbist_mem_out( q_BIT50_DRIVER );
lv_assumed_mbist_mem_out( q_BIT49_DRIVER );
lv_assumed_mbist_mem_out( q_BIT48_DRIVER );
lv_assumed_mbist_mem_out( q_BIT47_DRIVER );
lv_assumed_mbist_mem_out( q_BIT46_DRIVER );
lv_assumed_mbist_mem_out( q_BIT45_DRIVER );
lv_assumed_mbist_mem_out( q_BIT44_DRIVER );
lv_assumed_mbist_mem_out( q_BIT43_DRIVER );
lv_assumed_mbist_mem_out( q_BIT42_DRIVER );
lv_assumed_mbist_mem_out( q_BIT41_DRIVER );
lv_assumed_mbist_mem_out( q_BIT40_DRIVER );
lv_assumed_mbist_mem_out( q_BIT39_DRIVER );
lv_assumed_mbist_mem_out( q_BIT38_DRIVER );
lv_assumed_mbist_mem_out( q_BIT37_DRIVER );
lv_assumed_mbist_mem_out( q_BIT36_DRIVER );
lv_assumed_mbist_mem_out( q_BIT35_DRIVER );
lv_assumed_mbist_mem_out( q_BIT34_DRIVER );
lv_assumed_mbist_mem_out( q_BIT33_DRIVER );
lv_assumed_mbist_mem_out( q_BIT32_DRIVER );
lv_assumed_mbist_mem_out( q_BIT31_DRIVER );
lv_assumed_mbist_mem_out( q_BIT30_DRIVER );
lv_assumed_mbist_mem_out( q_BIT29_DRIVER );
lv_assumed_mbist_mem_out( q_BIT28_DRIVER );
lv_assumed_mbist_mem_out( q_BIT27_DRIVER );
lv_assumed_mbist_mem_out( q_BIT26_DRIVER );
lv_assumed_mbist_mem_out( q_BIT25_DRIVER );
lv_assumed_mbist_mem_out( q_BIT24_DRIVER );
lv_assumed_mbist_mem_out( q_BIT23_DRIVER );
lv_assumed_mbist_mem_out( q_BIT22_DRIVER );
lv_assumed_mbist_mem_out( q_BIT21_DRIVER );
lv_assumed_mbist_mem_out( q_BIT20_DRIVER );
lv_assumed_mbist_mem_out( q_BIT19_DRIVER );
lv_assumed_mbist_mem_out( q_BIT18_DRIVER );
lv_assumed_mbist_mem_out( q_BIT17_DRIVER );
lv_assumed_mbist_mem_out( q_BIT16_DRIVER );
lv_assumed_mbist_mem_out( q_BIT15_DRIVER );
lv_assumed_mbist_mem_out( q_BIT14_DRIVER );
lv_assumed_mbist_mem_out( q_BIT13_DRIVER );
lv_assumed_mbist_mem_out( q_BIT12_DRIVER );
lv_assumed_mbist_mem_out( q_BIT11_DRIVER );
lv_assumed_mbist_mem_out( q_BIT10_DRIVER );
lv_assumed_mbist_mem_out( q_BIT9_DRIVER );
lv_assumed_mbist_mem_out( q_BIT8_DRIVER );
lv_assumed_mbist_mem_out( q_BIT7_DRIVER );
lv_assumed_mbist_mem_out( q_BIT6_DRIVER );
lv_assumed_mbist_mem_out( q_BIT5_DRIVER );
lv_assumed_mbist_mem_out( q_BIT4_DRIVER );
lv_assumed_mbist_mem_out( q_BIT3_DRIVER );
lv_assumed_mbist_mem_out( q_BIT2_DRIVER );
lv_assumed_mbist_mem_out( q_BIT1_DRIVER );
lv_assumed_mbist_mem_out( q_BIT0_DRIVER );
// }}}
`endif

endmodule
`endcelldefine

`endif
