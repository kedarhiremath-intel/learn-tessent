//------------------------------------------------------------------------------
//
//  INTEL CONFIDENTIAL
//
//  Copyright 2020 Intel Corporation All Rights Reserved.
//
//  The source code contained or described herein and all documents related
//  to the source code (Material) are owned by Intel Corporation or its
//  suppliers or licensors. Title to the Material remains with Intel
//  Corporation or its suppliers and licensors. The Material contains trade
//  secrets and proprietary and confidential information of Intel or its
//  suppliers and licensors. The Material is protected by worldwide copyright
//  and trade secret laws and treaty provisions. No part of the Material may
//  be used, copied, reproduced, modified, published, uploaded, posted,
//  transmitted, distributed, or disclosed in any way without Intel's prior
//  express written permission.
//
//  No license under any patent, copyright, trade secret or other intellectual
//  property right is granted to or conferred upon you by disclosure or
//  delivery of the Materials, either expressly, by implication, inducement,
//  estoppel or otherwise. Any license under such intellectual property rights
//  must be express and approved by Intel in writing.
//
//  Collateral Description:
//  dteg-upm
//
//  Source organization:
//  DTEG Engineering Group (DTEG)
//
//  Support Information:
//  HSD: https://hsdes.intel.com/appstore/article/#/dft_services.bugeco/create
//
//  Revision:
//  DTEG_UPM_2023WW17_FV_1P1_18A
//
//  Module tap_upm_thermal_cbb_reg :  < put your functional description here in plain text >
//
//------------------------------------------------------------------------------
///====================================================================================================================
///
/// tap_upm_thermal_cbb_reg.vs
///
/// Unit Owner        : dft_build.pl
///
/// Original Author   : Auto-generated by dft_build
///
/// Copyright (c) 2012 Intel Corporation
/// Intel Proprietary
///
///====================================================================================================================
`include "tap_upm_thermal_cbb_reg.vh"
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                       - COMMON SIGNAL DEFINITION -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
logic [TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE - 1:0] ComShiftRegT731H;
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                   -  TAP ASYNC RESET -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
logic dc_fdfx_powergood_b;
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//`UPM_CUTMCP_PD(dc_fdfx_powergood_b, ~fdfx_powergood, 2, 1'b0, 1'b0)
assign dc_fdfx_powergood_b = ~fdfx_powergood;
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//                                                                                                      
//                                       - TCLK BUFFER -                                                
//                                                                                                      
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
logic ClkTapTH;
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
`UPM_CLKBF(ClkTapTH, tck)
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//                                                                                                      
//                                  - upm_cbb_reg IR select FF stage -                                        
//                                                                                                      
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
logic selH;
assign selH = sel;
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//`UPM_ASYNC_RST_MSFF(selH, sel, ClkTapTH, dc_fdfx_powergood_b) /* lintra s-50529 */ 
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                        - IJTAG_CBB_REG TAP REGISTER -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
t_ta_ijtag_thermal_cbb_reg  IJTAG_CBB_REG_RegTnnnH;      
t_ta_ijtag_thermal_cbb_reg  IJTAG_CBB_REG_RegInTnnnH;    
logic               IJTAG_CBB_REG_UpdateDRT731H; 
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
always_comb begin : IJTAG_CBB_REG_UPDATEDR
       IJTAG_CBB_REG_UpdateDRT731H = selH & update;   /* lintra s-50519 */
       IJTAG_CBB_REG_RegInTnnnH    = (IJTAG_CBB_REG_UpdateDRT731H) ? t_ta_ijtag_thermal_cbb_reg'(ComShiftRegT731H[TA_sib_reg__upm_thermal_cbb_reg_IJTAG_CBB_REG_SIZE - 1 : 0]) : IJTAG_CBB_REG_RegTnnnH;
end
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//Main register running at Tclk
`UPM_ASYNC_RST_MSFF (IJTAG_CBB_REG_RegTnnnH, IJTAG_CBB_REG_RegInTnnnH, ClkTapTH, dc_fdfx_powergood_b) /* lintra s-50529 */
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                       - EXTERNAL TAP COMMON SHIFT REGISTER -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
logic [TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE - 1:0] ComShiftRegCaptureT731H;
logic [TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE - 1:0] ComShiftRegTdiT731H;
logic [TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE - 1:0] ComShiftRegInT731H;
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//Capture DR
always_comb begin : COMMON_SHIFT_TCLK_REG_CAPTURE
       ComShiftRegCaptureT731H = '0; //default 0
       unique casez(1'b1)
           selH    : ComShiftRegCaptureT731H[TA_sib_reg__upm_thermal_cbb_reg_IJTAG_CBB_REG_SIZE - 1:0] = IJTAG_CBB_REG_RegTnnnH; //IJTAG_CBB_REG 
           default : ComShiftRegCaptureT731H[TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE          - 1:0] = '0;                     //CAPTURE DEFAULT VALUE 
       endcase
end
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//Shift DR TDI input location
always_comb begin : COMMON_SHIFT_TCK_REG_TDI
       ComShiftRegTdiT731H = {so_out, ComShiftRegT731H[TA_UPM_THERMAL_CBB_REG_COM_SHIFT_REG_SIZE - 1:1] };    /* lintra s-50519 */ //Shift right
       unique casez(1'b1)
           selH    : ComShiftRegTdiT731H[TA_sib_reg__upm_thermal_cbb_reg_IJTAG_CBB_REG_SIZE - 1] = so_out; /* lintra s-50519 */ //IJTAG_CBB_REG 
           default : ComShiftRegTdiT731H[0]                                              = 1'b0;   
       endcase
end
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//Shift or keep the previous value
always_comb begin : COMMON_SHIFT_TCK_REG_SHIFT
       unique casez(1'b1)
           capture : ComShiftRegInT731H = ComShiftRegCaptureT731H; 
           shift   : ComShiftRegInT731H = ComShiftRegTdiT731H;     
           default : ComShiftRegInT731H = ComShiftRegT731H;        
       endcase
end
//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
//common DR register
`UPM_ASYNC_RST_MSFF (ComShiftRegT731H, ComShiftRegInT731H, ClkTapTH,dc_fdfx_powergood_b)
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                       - FINAL TDO -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
//Final TDO
assign so = ComShiftRegT731H[0]; //TDO for IJTAG_CBB_REG 
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                        - CBB CONFIG -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
assign power_enable = IJTAG_CBB_REG_RegTnnnH.POWER_ENABLE;
upm_address_decoder_thermal u_upm_address_decoder_thermal(
		.power_enable(IJTAG_CBB_REG_RegTnnnH.POWER_ENABLE),
        .address     (IJTAG_CBB_REG_RegTnnnH.UPM_ADDR),
        .dec_address (upm_address)
);
//------------------------------------------------------------------------------------------------------
//______________________________________________________________________________________________________
//======================================================================================================
//
//                                        - next SIB_REG connection -
//
//______________________________________________________________________________________________________
//======================================================================================================
//------------------------------------------------------------------------------------------------------
    assign tck_out     = tck;     
    assign shift_out   = shift;   
    assign capture_out = capture; 
    assign update_out  = update;  
    assign sel_out     = sel;     
    assign si_out      = si;      
//------------------------------------------------------------------------------------------------------
