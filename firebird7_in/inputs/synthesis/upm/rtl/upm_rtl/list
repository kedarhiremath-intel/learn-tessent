./upm_reg_2.vs:               parameter UPM_NUMBER_OF_BITS_IN_COUNTER    = 20, 
./upm_reg_2.vs:               parameter NUMBER_OF_BITS_IN_WINDOW_COUNTER = 16,
./upm_reg_2.vs:			   parameter CBB_HIP_TYPE = "UPM_T_A"
./upm_fabric.sv:       parameter NUMBER_OF_BITS_IN_WINDOW_COUNTER = 16,
./upm_fabric.sv:       parameter UPM_NUMBER_OF_BITS_IN_COUNTER = 20,
./upm_fabric.sv:	   parameter CBB_HIP_TYPE = "UPM_T_A"
./dteg_upm_top_apm_out.sv:       parameter DFX_UPM_NUMBER_OF_BITS_IN_WINDOW_COUNTER = 16,
./dteg_upm_top_apm_out.sv:       parameter DFX_UPM_NUMBER_OF_BITS_IN_COUNTER = 20,
./dteg_upm_top_apm_out.sv:       parameter DFX_UPM_CBB_HIP_TYPE ="UPM_APM"
./upm_reg.vs:               parameter UPM_NUMBER_OF_BITS_IN_COUNTER    = 20, 
./upm_reg.vs:               parameter NUMBER_OF_BITS_IN_WINDOW_COUNTER = 16 ,
./upm_reg.vs:			   parameter CBB_HIP_TYPE  = "UPM_T_A"
./upm_system_controller.sv:       parameter DFX_UPM_NUMBER_OF_BITS_IN_WINDOW_COUNTER = 16,
./upm_system_controller.sv:       parameter DFX_UPM_NUMBER_OF_BITS_IN_COUNTER = 20,
./upm_system_controller.sv:	   parameter DFX_UPM_CBB_HIP_TYPE = "UPM_T_A"
./upm_thermal_cbb_reg.vs:               parameter THERMAL_ADDR_SIZE = 5,
./upm_thermal_cbb_reg.vs:			   parameter OUTPUT_SIZE = 12
Binary file ./.upm_cbb_control.sv.swp matches
./upm_address_decoder.sv:  parameter WIDTH  = 4
./upm_address_decoder.sv:parameter tmp =  {{OUTPUT_SIZE-1{1'b0}}, 1'b1};
./upm_address_decoder_thermal.sv:  parameter WIDTH  = 5,
./upm_address_decoder_thermal.sv:  parameter OUTPUT_SIZE = 12
./upm_apm_cbb_control.sv:       parameter APM_CNTRL_LEN = 14
./upm_apm_cbb_reg.vs:               parameter APM_CNTRL_LEN = 14
./upm_cbb_control.sv:       parameter BANK_SIZE = 4
./upm_cbb_control_2_cntrs.sv:       parameter THERMAL_ADDR_SIZE = 5,
./upm_cbb_control_2_cntrs.sv:	   parameter OUTPUT_SIZE = 12
./upm_cbb_reg.vs:               parameter BANK_SIZE = 4 
./upm_controller.sv:                parameter NUMBER_OF_BITS_IN_FSM = 12
./upm_counter.sv:                  parameter NUMBER_OF_BITS_IN_COUNTER  = 20
./upm_cutmcp_mcr_pd_dftb.vs:    parameter CYCLES                    = 1,       // the cycles for MCP BE command and for validation
./upm_cutmcp_mcr_pd_dftb.vs:    parameter WIDTH                     = 1,       // width of the mcp buffer. 
./upm_cutmcp_mcr_pd_dftb.vs:    parameter DISABLE_CUTMCP_MODELING   = 0,       
./upm_cutmcp_mcr_pd_dftb.vs:    parameter ENABLE_CUTMCP_MODELING    = 0,       // enable the validation capabilities - should be set to "1" from ace files during test.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter USE_SIM_CLK               = "yes",   // no - use provided clock as MCP delay, yes - use pound delay as MCP delay    
./upm_cutmcp_mcr_pd_dftb.vs:    parameter MCPSEED                   = 1,       // not in used - keep to match with legacy cutmcp MCR module
./upm_cutmcp_mcr_pd_dftb.vs:    parameter TYPE                      = "setup", // setup/hold/any to define the type of MCP command to create
./upm_cutmcp_mcr_pd_dftb.vs:    parameter SVA_ENABLE_INSTANCE       = 1,       // to disable the assertion in module.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter ENABLE_X_INJ              = 1,       // to choose X injection or random delay validation.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter CLK_SOURCE                = "none",  // pointer to one clock from SPY_CLOCK module to define the clock to be passed to BE command.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter USE_CLK_SOURCE            = "yes",   // to enable the SPY_CLOCK feature.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter COVERAGE                  = 0,       // to enable COVERAGE for mcp points.
./upm_cutmcp_mcr_pd_dftb.vs:    parameter DISABLE_CUTMCP_GLITCH_FILTER = 1     // TGL CUTMCP Enhancement, by default GLITCH filter is always enabled
./upm_cutmcp_mcr_pd_dftb.vs://parameters
./upm_fdr_mcr_dftb.vs:    parameter BE_CMD_TYPE   = "none",       // "none" / "mcp" / "false_path"
./upm_fdr_mcr_dftb.vs:    parameter BE_NUM_CYCLES = 0,            // number of cycles in case of BE_CMD_TYPE="mcp"
./upm_fdr_mcr_dftb.vs:    parameter BE_DELAY_TYPE = "any",        // "setup" / "hold" / "any"
./upm_fdr_mcr_dftb.vs:    parameter BE_ALLCLOCKS  = "no",         // "yes": if you want to allow BE constraint for all clocks going through buffer.
./upm_fdr_mcr_dftb.vs:    parameter SYNC_CLOCKS   = "no",         // "yes": will create MCP BE command in case of synchronous clocks. 
./upm_fdr_mcr_dftb.vs:    parameter CLK_USE       = "default",    // "setup" / "hold" / "any"
./upm_fdr_mcr_dftb.vs:    parameter CLK_SOURCE    = "none"
