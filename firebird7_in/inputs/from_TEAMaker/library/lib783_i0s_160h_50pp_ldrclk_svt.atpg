//
// ***********************************************************************
// Unpublished work. Copyright 2021 Siemens
// For use only with Tessent tools
// ***********************************************************************
// File Type:       Tessent Cell Library 
// Generated by:    Tessent Shell -- write_cell_library 
// Tool Version:    2022.4 
// Tool Build Date:   Tue Nov 29 21:19:37 GMT 2022 
// ***********************************************************************
// Library Created : Local Time = Fri Jul  7 15:12:55 2023
//                          GMT = Fri Jul  7 22:12:55 2023


library_format_version = 9;

array_delimiter = "[]";


model INTCldrclk_cbf000ac_0
  (clkout, clk)
(
  model_source = verilog_udp;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    primitive = _buf mlc_gate0 (clk, clkout);
  )
) // end model INTCldrclk_cbf000ac_0


model INTCldrclk_cilb05mc_1
  (MGM_EN0, clk)
(
  model_source = verilog_udp;
  simulation_function = inverter;

  input (clk) ( )
  output (MGM_EN0) ( )
  (
    primitive = _inv mlc_gate0 (clk, MGM_EN0);
  )
) // end model INTCldrclk_cilb05mc_1


model INTCldrclk_cilb05mc_2
  (MGM_D0, en, te)
(
  model_source = verilog_udp;
  simulation_function = or;

  input (en) ( )
  input (te) ( )
  output (MGM_D0) ( )
  (
    primitive = _or mlc_gate0 (en, te, MGM_D0);
  )
) // end model INTCldrclk_cilb05mc_2


model INTCldrclk_cilb05mc_3
  (clkout, IQ, clk)
(
  model_source = verilog_udp;
  simulation_function = and;

  input (IQ) ( )
  input (clk) ( )
  output (clkout) ( )
  (
    primitive = _and mlc_gate0 (IQ, clk, clkout);
  )
) // end model INTCldrclk_cilb05mc_3


model INTCldrclk_cilb05mc_N_IQ_LATCH_UDP
  (Q, C, P, CK,
   D, N)
(
  model_source = verilog_udp;
  simulation_function = latch;

  input (C) ( active_high_reset; )
  input (P) ( active_high_set; )
  input (CK) ( active_high_clock; )
  input (D) ( data_in; )
  input (N) ( unused; no_fault = sa0 sa1; )
  output (Q) ( data_out; )
  (
    primitive = _dlat mlc_latch (P, C, CK, D, Q,  );
  )
) // end model INTCldrclk_cilb05mc_N_IQ_LATCH_UDP


model INTCldrclk_cmbn22ac_4
  (clkout, clk1, clk2, s)
(
  model_source = verilog_udp;
  simulation_function = mux;

  input (clk1) ( mux_in1; )
  input (clk2) ( mux_in0; )
  input (s) ( mux_select; )
  output (clkout) ( mux_out; )
  (
    primitive = _mux mlc_gate0 (clk2, clk1, s, clkout);
  )
) // end model INTCldrclk_cmbn22ac_4


model INTCldrclk_cbf000ac_func
  (clk, clkout)
(
  model_source = verilog_module;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cbf000ac_0 inst1 (clkout, clk);
  )
) // end model INTCldrclk_cbf000ac_func


model INTCldrclk_cilb05mc_func
  (clk, clkout, en, te,
   notifier)
(
  model_source = verilog_module;

  input (clk) ( active_low_clock; )
  input (en) ( )
  input (te) ( )
  input (notifier) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cilb05mc_1 inst1 (MGM_EN0, clk);
    instance = INTCldrclk_cilb05mc_2 inst2 (MGM_D0, en, te);
    instance = INTCldrclk_cilb05mc_N_IQ_LATCH_UDP inst3 (IQ, mlc_n0, mlc_n1, MGM_EN0, MGM_D0, notifier);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _tie0 mlc_tie0_2 (mlc_n1);
    instance = INTCldrclk_cilb05mc_3 inst4 (clkout, IQ, clk);
  )
) // end model INTCldrclk_cilb05mc_func


model INTCldrclk_clb0a2ac_func
  (clk, clkout, en)
(
  model_source = verilog_module;
  simulation_function = and;

  input (clk) ( )
  input (en) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cilb05mc_3 inst1 (clkout, clk, en);
  )
) // end model INTCldrclk_clb0a2ac_func


model INTCldrclk_clb0o2ac_func
  (clk, clkout, enb)
(
  model_source = verilog_module;
  simulation_function = or;

  input (clk) ( )
  input (enb) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cilb05mc_2 inst1 (clkout, clk, enb);
  )
) // end model INTCldrclk_clb0o2ac_func


model INTCldrclk_cmbn22ac_func
  (clk1, clk2, clkout, s)
(
  model_source = verilog_module;
  simulation_function = mux;

  input (clk1) ( mux_in1; )
  input (clk2) ( mux_in0; )
  input (s) ( mux_select; )
  output (clkout) ( mux_out; )
  (
    instance = INTCldrclk_cmbn22ac_4 inst1 (clkout, clk1, clk2, s);
  )
) // end model INTCldrclk_cmbn22ac_func


model i0scbf000ac1n01x1
  (clk, clkout)
(
  model_source = verilog_module;
  cell_type = buffer;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cbf000ac_func i0scbf000ac1n01x1_behav_inst (clk, clkout_tmp);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0scbf000ac1n01x1


model i0scbf000ac1n02x1
  (clk, clkout)
(
  model_source = verilog_module;
  cell_type = buffer;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_cbf000ac_func i0scbf000ac1n02x1_behav_inst (clk, clkout_tmp);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0scbf000ac1n02x1


model i0scilb05mc1n01x1
  (clk, clkout, en, te)
(
  model_source = verilog_module;
  simulation_function = clock_gating_and;

  input (clk) ( clock_in; )
  input (en) ( func_enable; )
  input (te) ( test_enable; )
  output (clkout) ( clock_out; )
  (
    instance = INTCldrclk_cilb05mc_func i0scilb05mc1n01x1_behav_inst (clk, clkout_tmp, en, te, mlc_n0);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _wire clkout (clkout_random_init, clkout);
    primitive = _wire clkout_random_init (clkout_tmp, clkout_random_init);
  )
) // end model i0scilb05mc1n01x1


model i0scilb05mc1n02x1
  (clk, clkout, en, te)
(
  model_source = verilog_module;
  simulation_function = clock_gating_and;

  input (clk) ( clock_in; )
  input (en) ( func_enable; )
  input (te) ( test_enable; )
  output (clkout) ( clock_out; )
  (
    instance = INTCldrclk_cilb05mc_func i0scilb05mc1n02x1_behav_inst (clk, clkout_tmp, en, te, mlc_n0);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _wire clkout (clkout_random_init, clkout);
    primitive = _wire clkout_random_init (clkout_tmp, clkout_random_init);
  )
) // end model i0scilb05mc1n02x1


model i0sclb0a2ac1n01x1
  (clk, clkout, en)
(
  model_source = verilog_module;
  simulation_function = and;

  input (clk) ( )
  input (en) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_clb0a2ac_func i0sclb0a2ac1n01x1_behav_inst (clk, clkout_tmp, en);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0sclb0a2ac1n01x1


model i0sclb0a2ac1n02x1
  (clk, clkout, en)
(
  model_source = verilog_module;
  simulation_function = and;

  input (clk) ( )
  input (en) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_clb0a2ac_func i0sclb0a2ac1n02x1_behav_inst (clk, clkout_tmp, en);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0sclb0a2ac1n02x1


model i0sclb0o2ac1n02x1
  (clk, clkout, enb)
(
  model_source = verilog_module;
  simulation_function = or;

  input (clk) ( )
  input (enb) ( )
  output (clkout) ( )
  (
    instance = INTCldrclk_clb0o2ac_func i0sclb0o2ac1n02x1_behav_inst (clk, clkout_tmp, enb);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0sclb0o2ac1n02x1


model i0scmbn22ac1n02x1
  (clk1, clk2, clkout, s)
(
  model_source = verilog_module;
  cell_type = mux;
  simulation_function = mux;

  input (clk1) ( mux_in1; )
  input (clk2) ( mux_in0; )
  input (s) ( mux_select; )
  output (clkout) ( mux_out; )
  (
    instance = INTCldrclk_cmbn22ac_func i0scmbn22ac1n02x1_behav_inst (clk1, clk2, clkout_tmp, s);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0scmbn22ac1n02x1
