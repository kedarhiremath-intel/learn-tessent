//
// ***********************************************************************
// Unpublished work. Copyright 2021 Siemens
// For use only with Tessent tools
// ***********************************************************************
// File Type:       Tessent Cell Library 
// Generated by:    Tessent Shell -- write_cell_library 
// Tool Version:    2022.4 
// Tool Build Date:   Tue Nov 29 21:19:37 GMT 2022 
// ***********************************************************************
// Library Created : Local Time = Fri Jul  7 15:17:45 2023
//                          GMT = Fri Jul  7 22:17:45 2023


library_format_version = 9;

array_delimiter = "[]";


model INTCldrsupbase_and004ab_0
  (o, a, b, c,
   d)
(
  model_source = verilog_udp;
  simulation_function = and;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    primitive = _and mlc_gate0 (a, mlc_data_net0, o);
    primitive = _and mlc_gate1 (b, mlc_data_net1, mlc_data_net0);
    primitive = _and mlc_gate2 (c, d, mlc_data_net1);
  )
) // end model INTCldrsupbase_and004ab_0


model INTCldrsupbase_aoi302ab_1
  (o1, a, b, c,
   d, e)
(
  model_source = verilog_udp;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    primitive = _and mlc_gate0 (mlc_inv_net1, mlc_data_net2, o1);
    primitive = _inv mlc_gate1 (a, mlc_inv_net1);
    primitive = _and mlc_gate3 (mlc_inv_net4, mlc_data_net5, mlc_data_net2);
    primitive = _inv mlc_gate4 (b, mlc_inv_net4);
    primitive = _and mlc_gate6 (mlc_inv_net7, mlc_data_net8, mlc_data_net5);
    primitive = _inv mlc_gate7 (c, mlc_inv_net7);
    primitive = _or mlc_gate9 (mlc_inv_net10, mlc_data_net11, mlc_data_net8);
    primitive = _inv mlc_gate10 (d, mlc_inv_net10);
    primitive = _inv mlc_gate12 (e, mlc_data_net11);
  )
) // end model INTCldrsupbase_aoi302ab_1


model INTCldrsupbase_aoix22ab_2
  (o1, a, c, e,
   g, h, f, d,
   b)
(
  model_source = verilog_udp;

  input (a) ( )
  input (c) ( )
  input (e) ( )
  input (g) ( )
  input (h) ( )
  input (f) ( )
  input (d) ( )
  input (b) ( )
  output (o1) ( )
  (
    primitive = _inv mlc_not_a_gate (a, mlc_not_a);
    primitive = _inv mlc_not_c_gate (c, mlc_not_c);
    primitive = _inv mlc_not_e_gate (e, mlc_not_e);
    primitive = _inv mlc_not_g_gate (g, mlc_not_g);
    primitive = _and mlc_sop_product_gate0 (mlc_not_a, mlc_not_c, mlc_not_e, mlc_not_g, mlc_product_net0_0);
    primitive = _inv mlc_not_h_gate (h, mlc_not_h);
    primitive = _and mlc_sop_product_gate1 (mlc_not_a, mlc_not_c, mlc_not_e, mlc_not_h, mlc_product_net0_1);
    primitive = _inv mlc_not_f_gate (f, mlc_not_f);
    primitive = _and mlc_sop_product_gate2 (mlc_not_a, mlc_not_c, mlc_not_h, mlc_not_f, mlc_product_net0_2);
    primitive = _and mlc_sop_product_gate3 (mlc_not_a, mlc_not_c, mlc_not_g, mlc_not_f, mlc_product_net0_3);
    primitive = _inv mlc_not_d_gate (d, mlc_not_d);
    primitive = _and mlc_sop_product_gate4 (mlc_not_a, mlc_not_h, mlc_not_f, mlc_not_d, mlc_product_net0_4);
    primitive = _and mlc_sop_product_gate5 (mlc_not_a, mlc_not_e, mlc_not_h, mlc_not_d, mlc_product_net0_5);
    primitive = _and mlc_sop_product_gate6 (mlc_not_a, mlc_not_g, mlc_not_f, mlc_not_d, mlc_product_net0_6);
    primitive = _and mlc_sop_product_gate7 (mlc_not_a, mlc_not_e, mlc_not_g, mlc_not_d, mlc_product_net0_7);
    primitive = _inv mlc_not_b_gate (b, mlc_not_b);
    primitive = _and mlc_sop_product_gate8 (mlc_not_h, mlc_not_f, mlc_not_d, mlc_not_b, mlc_product_net0_8);
    primitive = _and mlc_sop_product_gate9 (mlc_not_c, mlc_not_h, mlc_not_f, mlc_not_b, mlc_product_net0_9);
    primitive = _and mlc_sop_product_gate10 (mlc_not_e, mlc_not_h, mlc_not_d, mlc_not_b, mlc_product_net0_10);
    primitive = _and mlc_sop_product_gate11 (mlc_not_c, mlc_not_e, mlc_not_h, mlc_not_b, mlc_product_net0_11);
    primitive = _and mlc_sop_product_gate12 (mlc_not_g, mlc_not_f, mlc_not_d, mlc_not_b, mlc_product_net0_12);
    primitive = _and mlc_sop_product_gate13 (mlc_not_c, mlc_not_g, mlc_not_f, mlc_not_b, mlc_product_net0_13);
    primitive = _and mlc_sop_product_gate14 (mlc_not_e, mlc_not_g, mlc_not_d, mlc_not_b, mlc_product_net0_14);
    primitive = _and mlc_sop_product_gate15 (mlc_not_c, mlc_not_e, mlc_not_g, mlc_not_b, mlc_product_net0_15);
    primitive = _or mlc_sop_sum_gate0 (mlc_product_net0_0, mlc_product_net0_1, mlc_product_net0_2, mlc_product_net0_3, mlc_product_net0_4, mlc_product_net0_5,
      mlc_product_net0_6, mlc_product_net0_7, mlc_product_net0_8, mlc_product_net0_9, mlc_product_net0_10, mlc_product_net0_11,
      mlc_product_net0_12, mlc_product_net0_13, mlc_product_net0_14, mlc_product_net0_15, o1);
  )
) // end model INTCldrsupbase_aoix22ab_2


model INTCldrsupbase_nand24ab_3
  (o1, a, b, c,
   d)
(
  model_source = verilog_udp;
  simulation_function = nand;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    primitive = _or mlc_gate0 (mlc_inv_net1, mlc_data_net2, o1);
    primitive = _inv mlc_gate1 (a, mlc_inv_net1);
    primitive = _or mlc_gate3 (mlc_inv_net4, mlc_data_net5, mlc_data_net2);
    primitive = _inv mlc_gate4 (b, mlc_inv_net4);
    primitive = _or mlc_gate6 (mlc_inv_net7, mlc_data_net8, mlc_data_net5);
    primitive = _inv mlc_gate7 (c, mlc_inv_net7);
    primitive = _inv mlc_gate9 (d, mlc_data_net8);
  )
) // end model INTCldrsupbase_nand24ab_3


model INTCldrsupbase_nor044ab_4
  (o1, a, b, c,
   d)
(
  model_source = verilog_udp;
  simulation_function = nor;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    primitive = _and mlc_gate0 (mlc_inv_net1, mlc_data_net2, o1);
    primitive = _inv mlc_gate1 (a, mlc_inv_net1);
    primitive = _and mlc_gate3 (mlc_inv_net4, mlc_data_net5, mlc_data_net2);
    primitive = _inv mlc_gate4 (b, mlc_inv_net4);
    primitive = _and mlc_gate6 (mlc_inv_net7, mlc_data_net8, mlc_data_net5);
    primitive = _inv mlc_gate7 (c, mlc_inv_net7);
    primitive = _inv mlc_gate9 (d, mlc_data_net8);
  )
) // end model INTCldrsupbase_nor044ab_4


model INTCldrsupbase_oai302ab_5
  (o1, a, b, c,
   d, e)
(
  model_source = verilog_udp;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    primitive = _or mlc_gate0 (mlc_inv_net1, mlc_data_net2, o1);
    primitive = _inv mlc_gate1 (a, mlc_inv_net1);
    primitive = _or mlc_gate3 (mlc_inv_net4, mlc_data_net5, mlc_data_net2);
    primitive = _inv mlc_gate4 (b, mlc_inv_net4);
    primitive = _or mlc_gate6 (mlc_inv_net7, mlc_data_net8, mlc_data_net5);
    primitive = _inv mlc_gate7 (c, mlc_inv_net7);
    primitive = _and mlc_gate9 (mlc_inv_net10, mlc_data_net11, mlc_data_net8);
    primitive = _inv mlc_gate10 (d, mlc_inv_net10);
    primitive = _inv mlc_gate12 (e, mlc_data_net11);
  )
) // end model INTCldrsupbase_oai302ab_5


model INTCldrsupbase_oaix22ab_6
  (o1, a, b, c,
   d, e, f, g,
   h)
(
  model_source = verilog_udp;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  input (f) ( )
  input (g) ( )
  input (h) ( )
  output (o1) ( )
  (
    primitive = _inv mlc_not_a_gate (a, mlc_not_a);
    primitive = _inv mlc_not_b_gate (b, mlc_not_b);
    primitive = _and mlc_sop_product_gate0 (mlc_not_a, mlc_not_b, mlc_product_net0_0);
    primitive = _inv mlc_not_c_gate (c, mlc_not_c);
    primitive = _inv mlc_not_d_gate (d, mlc_not_d);
    primitive = _and mlc_sop_product_gate1 (mlc_not_c, mlc_not_d, mlc_product_net0_1);
    primitive = _inv mlc_not_e_gate (e, mlc_not_e);
    primitive = _inv mlc_not_f_gate (f, mlc_not_f);
    primitive = _and mlc_sop_product_gate2 (mlc_not_e, mlc_not_f, mlc_product_net0_2);
    primitive = _inv mlc_not_g_gate (g, mlc_not_g);
    primitive = _inv mlc_not_h_gate (h, mlc_not_h);
    primitive = _and mlc_sop_product_gate3 (mlc_not_g, mlc_not_h, mlc_product_net0_3);
    primitive = _or mlc_sop_sum_gate0 (mlc_product_net0_0, mlc_product_net0_1, mlc_product_net0_2, mlc_product_net0_3, o1);
  )
) // end model INTCldrsupbase_oaix22ab_6


model INTCldrsupbase_orn004ab_7
  (o, a, b, c,
   d)
(
  model_source = verilog_udp;
  simulation_function = or;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    primitive = _or mlc_gate0 (a, mlc_data_net0, o);
    primitive = _or mlc_gate1 (b, mlc_data_net1, mlc_data_net0);
    primitive = _or mlc_gate2 (c, d, mlc_data_net1);
  )
) // end model INTCldrsupbase_orn004ab_7


model INTCldrsupbase_and004ab_func
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  simulation_function = and;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_and004ab_0 inst1 (o, a, b, c, d);
  )
) // end model INTCldrsupbase_and004ab_func


model INTCldrsupbase_aoi302ab_func
  (a, b, c, d,
   e, o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_aoi302ab_1 inst1 (o1, a, b, c, d, e);
  )
) // end model INTCldrsupbase_aoi302ab_func


model INTCldrsupbase_aoix22ab_func
  (a, b, c, d,
   e, f, g, h,
   o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  input (f) ( )
  input (g) ( )
  input (h) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_aoix22ab_2 inst1 (o1, a, c, e, g, h,
      f, d, b);
  )
) // end model INTCldrsupbase_aoix22ab_func


model INTCldrsupbase_nand24ab_func
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  simulation_function = nand;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nand24ab_3 inst1 (o1, a, b, c, d);
  )
) // end model INTCldrsupbase_nand24ab_func


model INTCldrsupbase_nanp04ab_func
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  simulation_function = nand;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nand24ab_3 inst1 (o1, a, b, c, d);
  )
) // end model INTCldrsupbase_nanp04ab_func


model INTCldrsupbase_nor044ab_func
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  simulation_function = nor;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nor044ab_4 inst1 (o1, a, b, c, d);
  )
) // end model INTCldrsupbase_nor044ab_func


model INTCldrsupbase_norp04ab_func
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  simulation_function = nor;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nor044ab_4 inst1 (o1, a, b, c, d);
  )
) // end model INTCldrsupbase_norp04ab_func


model INTCldrsupbase_oai302ab_func
  (a, b, c, d,
   e, o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_oai302ab_5 inst1 (o1, a, b, c, d, e);
  )
) // end model INTCldrsupbase_oai302ab_func


model INTCldrsupbase_oaix22ab_func
  (a, b, c, d,
   e, f, g, h,
   o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  input (f) ( )
  input (g) ( )
  input (h) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_oaix22ab_6 inst1 (o1, a, b, c, d, e,
      f, g, h);
  )
) // end model INTCldrsupbase_oaix22ab_func


model INTCldrsupbase_orn004ab_func
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  simulation_function = or;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_orn004ab_7 inst1 (o, a, b, c, d);
  )
) // end model INTCldrsupbase_orn004ab_func


model i0sand004ab1n01x1
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  cell_type = and;
  simulation_function = and;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_and004ab_func i0sand004ab1n01x1_behav_inst (a, b, c, d, o_tmp);
    primitive = _wire o (o_tmp, o);
  )
) // end model i0sand004ab1n01x1


model i0sand004ab1n02x1
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  cell_type = and;
  simulation_function = and;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_and004ab_func i0sand004ab1n02x1_behav_inst (a, b, c, d, o_tmp);
    primitive = _wire o (o_tmp, o);
  )
) // end model i0sand004ab1n02x1


model i0saoi302ab1n01x1
  (a, b, c, d,
   e, o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_aoi302ab_func i0saoi302ab1n01x1_behav_inst (a, b, c, d, e, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0saoi302ab1n01x1


model i0saoix22ab1d01x1
  (a, b, c, d,
   e, f, g, h,
   o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  input (f) ( )
  input (g) ( )
  input (h) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_aoix22ab_func i0saoix22ab1d01x1_behav_inst (a, b, c, d, e, f,
      g, h, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0saoix22ab1d01x1


model i0snand24ab1n01x1
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  cell_type = nand;
  simulation_function = nand;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nand24ab_func i0snand24ab1n01x1_behav_inst (a, b, c, d, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0snand24ab1n01x1


model i0snanp04ab1n01x1
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  cell_type = nand;
  simulation_function = nand;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nanp04ab_func i0snanp04ab1n01x1_behav_inst (a, b, c, d, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0snanp04ab1n01x1


model i0snor044ab1n01x1
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  cell_type = nor;
  simulation_function = nor;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_nor044ab_func i0snor044ab1n01x1_behav_inst (a, b, c, d, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0snor044ab1n01x1


model i0snorp04ab1n01x1
  (a, b, c, d,
   o1)
(
  model_source = verilog_module;
  cell_type = nor;
  simulation_function = nor;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_norp04ab_func i0snorp04ab1n01x1_behav_inst (a, b, c, d, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0snorp04ab1n01x1


model i0soai302ab1n01x1
  (a, b, c, d,
   e, o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_oai302ab_func i0soai302ab1n01x1_behav_inst (a, b, c, d, e, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0soai302ab1n01x1


model i0soaix22ab1d01x1
  (a, b, c, d,
   e, f, g, h,
   o1)
(
  model_source = verilog_module;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  input (e) ( )
  input (f) ( )
  input (g) ( )
  input (h) ( )
  output (o1) ( )
  (
    instance = INTCldrsupbase_oaix22ab_func i0soaix22ab1d01x1_behav_inst (a, b, c, d, e, f,
      g, h, o1_tmp);
    primitive = _wire o1 (o1_tmp, o1);
  )
) // end model i0soaix22ab1d01x1


model i0sorn004ab1n01x1
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  cell_type = or;
  simulation_function = or;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_orn004ab_func i0sorn004ab1n01x1_behav_inst (a, b, c, d, o_tmp);
    primitive = _wire o (o_tmp, o);
  )
) // end model i0sorn004ab1n01x1


model i0sorn004ab1n02x1
  (a, b, c, d,
   o)
(
  model_source = verilog_module;
  cell_type = or;
  simulation_function = or;

  input (a) ( )
  input (b) ( )
  input (c) ( )
  input (d) ( )
  output (o) ( )
  (
    instance = INTCldrsupbase_orn004ab_func i0sorn004ab1n02x1_behav_inst (a, b, c, d, o_tmp);
    primitive = _wire o (o_tmp, o);
  )
) // end model i0sorn004ab1n02x1
