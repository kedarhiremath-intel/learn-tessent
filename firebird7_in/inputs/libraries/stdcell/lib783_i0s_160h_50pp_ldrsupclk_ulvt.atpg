//
// ***********************************************************************
// Unpublished work. Copyright 2021 Siemens
// For use only with Tessent tools
// ***********************************************************************
// File Type:       Tessent Cell Library 
// Generated by:    Tessent Shell -- write_cell_library 
// Tool Version:    2023.2 
// Tool Build Date:   Mon May 22 20:47:23 GMT 2023 
// ***********************************************************************
// Library Created : Local Time = Tue Oct  3 08:19:27 2023
//                          GMT = Tue Oct  3 15:19:27 2023


library_format_version = 9;

array_delimiter = "[]";


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_0
  (clkout, clk)
(
  model_source = verilog_udp;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    primitive = _buf mlc_gate0 (clk, clkout);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_0


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_1
  (MGM_EN0, clk)
(
  model_source = verilog_udp;
  simulation_function = inverter;

  input (clk) ( )
  output (MGM_EN0) ( )
  (
    primitive = _inv mlc_gate0 (clk, MGM_EN0);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_1


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_2
  (MGM_D0, en, te)
(
  model_source = verilog_udp;
  simulation_function = or;

  input (en) ( )
  input (te) ( )
  output (MGM_D0) ( )
  (
    primitive = _or mlc_gate0 (en, te, MGM_D0);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_2


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3
  (clkout, IQ, clk)
(
  model_source = verilog_udp;
  simulation_function = and;

  input (IQ) ( )
  input (clk) ( )
  output (clkout) ( )
  (
    primitive = _and mlc_gate0 (IQ, clk, clkout);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_N_IQ_LATCH_UDP
  (Q, C, P, CK,
   D, N)
(
  model_source = verilog_udp;
  simulation_function = latch;

  input (C) ( active_high_reset; )
  input (P) ( active_high_set; )
  input (CK) ( active_high_clock; )
  input (D) ( data_in; )
  input (N) ( unused; no_fault = sa0 sa1; )
  output (Q) ( data_out; )
  (
    primitive = _dlat mlc_latch (P, C, CK, D, Q,  );
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_N_IQ_LATCH_UDP


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_func
  (clk, clkout)
(
  model_source = verilog_module;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_0 inst1 (clkout, clk);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_func


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_func
  (clk, clkout, en, te,
   notifier)
(
  model_source = verilog_module;

  input (clk) ( active_low_clock; )
  input (en) ( )
  input (te) ( )
  input (notifier) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_1 inst1 (MGM_EN0, clk);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_2 inst2 (MGM_D0, en, te);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_N_IQ_LATCH_UDP inst3 (IQ, mlc_n0, mlc_n1, MGM_EN0, MGM_D0, notifier);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _tie0 mlc_tie0_2 (mlc_n1);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3 inst4 (clkout, IQ, clk);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_func


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb05ha_func
  (clk, clkout, en, te,
   notifier)
(
  model_source = verilog_module;

  input (clk) ( active_low_clock; )
  input (en) ( )
  input (te) ( )
  input (notifier) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_1 inst1 (MGM_EN0, clk);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_2 inst2 (MGM_D0, en, te);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_N_IQ_LATCH_UDP inst3 (IQ, mlc_n0, mlc_n1, MGM_EN0, MGM_D0, notifier);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _tie0 mlc_tie0_2 (mlc_n1);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3 inst4 (clkout, IQ, clk);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb05ha_func


model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb25aa_func
  (clk, clkout, en, te,
   notifier)
(
  model_source = verilog_module;

  input (clk) ( active_low_clock; )
  input (en) ( )
  input (te) ( )
  input (notifier) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_1 inst1 (MGM_EN0, clk);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_2 inst2 (MGM_D0, en, te);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_N_IQ_LATCH_UDP inst3 (IQ, mlc_n0, mlc_n1, MGM_EN0, MGM_D0, notifier);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _tie0 mlc_tie0_2 (mlc_n1);
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3 inst4 (clkout, IQ, clk);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb25aa_func


model INTC_lib783_i0s_160h_50pp_ldrsupclk_clb0a2ha_func
  (clk, clkout, en)
(
  model_source = verilog_module;
  simulation_function = and;

  input (clk) ( )
  input (en) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_3 inst1 (clkout, clk, en);
  )
) // end model INTC_lib783_i0s_160h_50pp_ldrsupclk_clb0a2ha_func


model i0scbf000ha1n02x1
  (clk, clkout)
(
  model_source = verilog_module;
  cell_type = buffer;
  simulation_function = buffer;

  input (clk) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cbf000ha_func i0scbf000ha1n02x1_behav_inst (clk, clkout_tmp);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0scbf000ha1n02x1


model i0scilb01aa1n02x1
  (clk, clkout, en, te)
(
  model_source = verilog_module;
  simulation_function = clock_gating_and;

  input (clk) ( clock_in; )
  input (en) ( func_enable; )
  input (te) ( test_enable; )
  output (clkout) ( clock_out; )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb01aa_func i0scilb01aa1n02x1_behav_inst (clk, clkout_tmp, en, te, mlc_n0);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _wire clkout (clkout_random_init, clkout);
    primitive = _wire clkout_random_init (clkout_tmp, clkout_random_init);
  )
) // end model i0scilb01aa1n02x1


model i0scilb05ha1n02x1
  (clk, clkout, en, te)
(
  model_source = verilog_module;
  simulation_function = clock_gating_and;

  input (clk) ( clock_in; )
  input (en) ( func_enable; )
  input (te) ( test_enable; )
  output (clkout) ( clock_out; )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb05ha_func i0scilb05ha1n02x1_behav_inst (clk, clkout_tmp, en, te, mlc_n0);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _wire clkout (clkout_random_init, clkout);
    primitive = _wire clkout_random_init (clkout_tmp, clkout_random_init);
  )
) // end model i0scilb05ha1n02x1


model i0scilb25aa1n02x1
  (clk, clkout, en, te)
(
  model_source = verilog_module;
  simulation_function = clock_gating_and;

  input (clk) ( clock_in; )
  input (en) ( func_enable; )
  input (te) ( test_enable; )
  output (clkout) ( clock_out; )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_cilb25aa_func i0scilb25aa1n02x1_behav_inst (clk, clkout_tmp, en, te, mlc_n0);
    primitive = _tie0 mlc_tie0_1 (mlc_n0);
    primitive = _wire clkout (clkout_random_init, clkout);
    primitive = _wire clkout_random_init (clkout_tmp, clkout_random_init);
  )
) // end model i0scilb25aa1n02x1


model i0sclb0a2ha1n02x1
  (clk, clkout, en)
(
  model_source = verilog_module;
  simulation_function = and;

  input (clk) ( )
  input (en) ( )
  output (clkout) ( )
  (
    instance = INTC_lib783_i0s_160h_50pp_ldrsupclk_clb0a2ha_func i0sclb0a2ha1n02x1_behav_inst (clk, clkout_tmp, en);
    primitive = _wire clkout (clkout_tmp, clkout);
  )
) // end model i0sclb0a2ha1n02x1
