#=====================================================================================================
# TEAMaker DFT - Design Compiler Synthesis Setup File
#
# - We at TEAMaker generally dislike the use of .synopsys hidden files but the Tessent flow requires
#   this file in conjunction with the synthesis scripts which it produces
# - It is recommended that ths file be clearly and explicitly sourced in the synthesis scripts where
#   this is possible as opposed to running as a hidden file
#
# Applicable Technology: Intel p1278d3
#=====================================================================================================


#-----------------------------------------------------------------------------------------------------
# Import environment variables
#-----------------------------------------------------------------------------------------------------
if {[catch {set SYNOPSYS [getenv SYNOPSYS]} errmsg]} { 
   puts "***E: SYNOPSYS not set.  Set this variable in order to continue\n"
   exit -1  
} else {
   puts "***I: SYNOPSYS is set to $SYNOPSYS.\n"
}


#-----------------------------------------------------------------------------------------------------
# Search Path, Link Library, Target Library
#-----------------------------------------------------------------------------------------------------
set ivar(i0s_techlib_attr_value,version) "lib783_i0s_160h_50pp/pdk080_r4v2p0_efv"
set ivar(i0s_techlib_dir) "/p/hdk/cad/stdcells/${ivar(i0s_techlib_attr_value,version)}"

set search_path [ list \
   . \
   ${ivar(i0s_techlib_dir)}/base_lvt/lib \
   ${ivar(i0s_techlib_dir)}/clk_lvt/lib \
   ${ivar(i0s_techlib_dir)}/dsibase_lvt/lib \
   ${ivar(i0s_techlib_dir)}/dsihs_lvt/lib \
   ${ivar(i0s_techlib_dir)}/dsiseq_lvt/lib \
   ${ivar(i0s_techlib_dir)}/lvl_lvt/lib \
   ${ivar(i0s_techlib_dir)}/pwm_lvt/lib \
   ${ivar(i0s_techlib_dir)}/seq_lvt/lib \
   ${ivar(i0s_techlib_dir)}/spcl_lvt/lib \
   ${ivar(i0s_techlib_dir)}/supbase_lvt/lib \
   ${ivar(i0s_techlib_dir)}/supclk_lvt/lib \
   ${ivar(i0s_techlib_dir)}/supseq_lvt/lib \
   ${ivar(i0s_techlib_dir)}/ctech/source/p1278/160h_i0s_50pp/lvt \
   ${ivar(i0s_techlib_dir)}/dsiclk_lvt/lib \
   ${SYNOPSYS}/libraries/syn \
]

set target_library {
   lib783_i0s_160h_50pp_base_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_clk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsibase_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsihs_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsiseq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_lvl_lvt_tttt_0p650v_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_pwm_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_seq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_spcl_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supbase_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supclk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supseq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsiclk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
}

set link_lib_std [ list \
   * \
   lib783_i0s_160h_50pp_base_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_clk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsibase_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsihs_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsiseq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_lvl_lvt_tttt_0p650v_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_pwm_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_seq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_spcl_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supbase_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supclk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_supseq_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
   lib783_i0s_160h_50pp_dsiclk_lvt_tttt_0p650v_100c_tttt_cmax_nldm.ldb \
]

set symbol_library "generic.sdb"
set synthetic_library "standard.sldb dw_foundation.sldb"
set link_library "* $link_lib_std $synthetic_library"


#-----------------------------------------------------------------------------------------------------
# Define Power & Ground Nets
#-----------------------------------------------------------------------------------------------------
set mw_logic1_net vcc
set mw_logic0_net vss


#-----------------------------------------------------------------------------------------------------
# Change_names
# - The standard Intel ASIC flow names; critically to eliminate escaped names
#-----------------------------------------------------------------------------------------------------
define_name_rules slash -restricted "/" -replacement_char "_" -flatten_multi_dimension_buses -dont_change_ports
define_name_rules exclamation_rule -restricted "!" -replacement_char "_" -dont_change_ports
define_name_rules open_bracket -restricted "(" -replacement_char "_" -dont_change_ports
define_name_rules close_bracket -restricted ")" -replacement_char "_" -dont_change_ports
define_name_rules standard_names \
   -allow "A-Za-z0-9_\[\]" -first_restricted "0-9_" -equal_ports_nets -remove_internal_net_bus \
   -last_restricted "_" -target_bus_naming_style "%s\[%d\]" -add_dummy_nets -max_length 950 \
   -flatten_multi_dimension_busses -case_insensitive -collapse_name_space
define_name_rules standard_netnames \
   -allow "A-Za-z0-9_" -first_restricted "0-9_" -equal_ports_nets -remove_internal_net_bus \
   -last_restricted "_" -target_bus_naming_style "%s\[%d\]" -add_dummy_nets -type net
define_name_rules reg_names -type cell -map {{{"\]", ""}, {"\[", "_"}}}

set compile_enable_library_pruning false


#-----------------------------------------------------------------------------------------------------
# Don't use list
#-----------------------------------------------------------------------------------------------------
set dont_use_list { \
i0sbfm...........
i0sbfrf..........
i0sc.............
i0sf..r..........
i0sf.y...........
i0sfan.5b........
i0sfan003........
i0sfaz...........
i0sfdz...........
i0sfhn...........
i0sfm.....a......
i0sfm.....c......
i0sfm.....d......
i0sfqz...........
i0sfs..12........
i0sfs..53........
i0sfsn.1c........
i0sfsn000........
i0sfsz...........
i0sft............
i0sfun.03........
i0sfun.0b........
i0sfun.4.........
i0sfun.8b........
i0sfuz.8b........
i0sfvn.4.........
i0sfvz.4.........
i0sg.............
i0sinrf..........
i0sl..r..........
i0slbz...........
i0slmn...........
i0slsn.10........
i0slsn.83........
i0slsn.88........
i0slsn.90........
i0slsz...........
i0slsz.03........
i0slsz.08........
i0sltn...........
i0slun...........
i0sluz...........
i0smdssa.........
i0smxn0..........
i0soaih..........
i0sq.............
i0ssg.....c......
i0ssg..s0........
i0sz......a......
}


remove_attribute -quiet [get_lib_pins */*/* -quiet] connection_class

set do_not_use {}
foreach pattern $dont_use_list {
   set lib_cells [ get_lib_cell -regexp ".*/$pattern" -quiet]
   if {[ sizeof_collection $lib_cells ] > 0} {
      append_to_collection do_not_use $lib_cells
   }
}

if {[sizeof_collection $do_not_use] > 0 } {
   echo "Setting dont_use on the following [sizeof_collection $do_not_use] lib cells"
   foreach_in_collection cell $do_not_use {
      query_objects $cell
   }
   set_dont_use  $do_not_use
}

