/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP5-1
// Date      : Mon Oct 23 13:10:57 2023
/////////////////////////////////////////////////////////////


module firebird7_in_gate1_tessent_mbist_c1_controller_data_gen ( BIST_CLK, 
        BIST_HOLD, BIST_ASYNC_RESETN, BIST_SWITCH_ADDRESS_EN, 
        RESET_REG_DEFAULT_MODE, WDATA_CMD, EDATA_CMD, ROW_ADDRESS, 
        COLUMN_ADDRESS, LAST_TICK, LAST_TICK_PIPELINED, OPSET_SELECT_DECODED, 
        BIST_RUN, BIST_SHIFT_SHORT, SI, BIST_ALGO_SEL_CNT, MBISTPG_ALGO_SEL, 
        WRITE_DATA, EXPECT_DATA, BIST_WRITEENABLE, SO );
  input [3:0] WDATA_CMD;
  input [3:0] EDATA_CMD;
  input [7:0] ROW_ADDRESS;
  input [2:0] COLUMN_ADDRESS;
  input [1:0] OPSET_SELECT_DECODED;
  output [3:0] WRITE_DATA;
  output [3:0] EXPECT_DATA;
  input BIST_CLK, BIST_HOLD, BIST_ASYNC_RESETN, BIST_SWITCH_ADDRESS_EN,
         RESET_REG_DEFAULT_MODE, LAST_TICK, LAST_TICK_PIPELINED, BIST_RUN,
         BIST_SHIFT_SHORT, SI, BIST_ALGO_SEL_CNT, MBISTPG_ALGO_SEL,
         BIST_WRITEENABLE;
  output SO;
  wire   EDATA_CMD_PIPE_0_3_, EDATA_CMD_PIPE_0_2_, EDATA_CMD_PIPE_0_1_,
         EDATA_CMD_PIPE_0_0_, WDATA_REG_3_, WDATA_REG_2_, WDATA_REG_1_,
         WDATA_REG_0_, EDATA_REG_3_, EDATA_REG_2_, EDATA_REG_1_, EDATA_REG_0_,
         X_ADDR_BIT_SEL_REG, EN_ADDR_BIT_INVERSION_TO_BUF,
         EN_ADDR_BIT_INVERSION, EN_ADDR_BIT_INVERSION_PIPE, n44, n45, n46, n47,
         n119, n120, n71, n74, n77, n80, n83, n86, n89, n92, n95, n98, n101,
         n106, n111, n116, n121, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n72,
         n73, n75, n76, n78, n79, n81, n82, n84, n85, n87, n88, n90, n91, n93,
         n94, n96, n97, n99, n100, n102, n103, n104, n105, n107, n108, n109,
         n110, n112, n113, n114, n115, n117, n118, n122, n123, n124, n125,
         n126, n127, SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15;

  i0sbfn000ab1n02x5 tessent_persistent_cell_EN_ADDR_BIT_INVERSION ( .a(
        EN_ADDR_BIT_INVERSION_TO_BUF), .o(EN_ADDR_BIT_INVERSION) );
  i0sfvz003ab1d03x6 EDATA_CMD_PIPE_0_reg_3 ( .si(n120), .d(n121), .ssb(n119), 
        .clk(BIST_CLK), .rb(n9), .o(EDATA_CMD_PIPE_0_3_), .so(
        SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 EDATA_CMD_PIPE_0_reg_2 ( .si(n120), .d(n116), .ssb(n119), 
        .clk(BIST_CLK), .rb(n9), .o(EDATA_CMD_PIPE_0_2_), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d12x5 WDATA_REG_reg_2 ( .si(n120), .d(n95), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(WDATA_REG_2_), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d12x5 EDATA_CMD_PIPE_0_reg_1 ( .si(n120), .d(n111), .ssb(n119), 
        .clk(BIST_CLK), .rb(n9), .o(EDATA_CMD_PIPE_0_1_), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d02x6 EN_ADDR_BIT_INVERSION_PIPE_reg ( .si(n120), .d(n71), .ssb(
        n119), .clk(BIST_CLK), .rb(n10), .o(EN_ADDR_BIT_INVERSION_PIPE), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d02x6 EDATA_REG_reg_0 ( .si(n120), .d(n89), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(EDATA_REG_0_), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d02x6 WDATA_REG_reg_1 ( .si(n120), .d(n98), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(WDATA_REG_1_), .so(SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d02x6 WDATA_REG_reg_0 ( .si(n120), .d(n101), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(WDATA_REG_0_), .so(SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 EDATA_REG_reg_2 ( .si(n120), .d(n83), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(EDATA_REG_2_), .so(SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 EDATA_REG_reg_1 ( .si(n120), .d(n86), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(EDATA_REG_1_), .so(SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 WDATA_REG_reg_3 ( .si(n120), .d(n92), .ssb(n119), .clk(
        BIST_CLK), .rb(n9), .o(WDATA_REG_3_), .so(SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d03x6 EDATA_CMD_PIPE_0_reg_0 ( .si(n120), .d(n106), .ssb(n119), 
        .clk(BIST_CLK), .rb(n10), .o(EDATA_CMD_PIPE_0_0_), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d03x6 EDATA_REG_reg_3 ( .si(n120), .d(n80), .ssb(n119), .clk(
        BIST_CLK), .rb(n10), .o(EDATA_REG_3_), .so(SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d03x6 Y_ADDR_BIT_SEL_REG_reg ( .si(n120), .d(n74), .ssb(n119), 
        .clk(BIST_CLK), .rb(n10), .o(SO), .so(SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d03x6 X_ADDR_BIT_SEL_REG_reg ( .si(n120), .d(n77), .ssb(n119), 
        .clk(BIST_CLK), .rb(n10), .o(X_ADDR_BIT_SEL_REG), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sinv030ab1n04x5 U3 ( .a(OPSET_SELECT_DECODED[1]), .o1(n69) );
  i0sinv030ab1n04x5 U4 ( .a(n50), .o1(n82) );
  i0sinv030ab1n04x5 U5 ( .a(n5), .o1(n59) );
  i0sinv030ab1n04x5 U6 ( .a(n43), .o1(n78) );
  i0sinv030ab1n04x5 U7 ( .a(n41), .o1(n91) );
  i0smdn022ab1n02x4 U8 ( .b(n108), .a(n107), .sa(EDATA_REG_3_), .o1(n110) );
  i0snona23ab1n09x5 U9 ( .c(n81), .d(n100), .a(n99), .b(n6), .out0(n72) );
  i0snanb02ab1n12x5 U10 ( .a(EDATA_CMD[0]), .b(n85), .out0(n99) );
  i0smd2na2ab1n03x5 U11 ( .c(n109), .b(n108), .a(n107), .sa(EDATA_REG_2_), 
        .out0(EXPECT_DATA[2]) );
  i0snand02ab1n04x5 U12 ( .a(n110), .b(n109), .o1(EXPECT_DATA[3]) );
  i0snanp02ab1n03x5 U13 ( .a(n104), .b(n103), .o1(n105) );
  i0snorp02ab1n03x5 U14 ( .a(EDATA_CMD[0]), .b(n1), .o1(n97) );
  i0sinv000ab1n03x5 U15 ( .a(n63), .o1(n2) );
  i0sorn002ab1n02x7 U16 ( .a(n75), .b(n82), .o(n3) );
  i0sinv000ab1n03x5 U17 ( .a(n76), .o1(n109) );
  i0soao112ab1n02x5 U18 ( .c(n60), .d(n2), .b(n3), .a(EDATA_CMD[0]), .o(n65)
         );
  i0sinv000ab1n06x5 U19 ( .a(n72), .o1(n66) );
  i0snona32ab1n09x5 U20 ( .b(n66), .c(n67), .d(n68), .a(n65), .out0(
        EXPECT_DATA[0]) );
  i0sinv000ab1n02x5 U21 ( .a(EDATA_CMD[0]), .o1(n62) );
  i0saob012ab1n02x5 U22 ( .b(n70), .c(EDATA_CMD[0]), .a(n85), .out0(n73) );
  i0sand003ab1n02x5 U23 ( .a(n58), .b(EDATA_CMD[0]), .c(n64), .o(n67) );
  i0sinv000ab1n02x5 U24 ( .a(WDATA_CMD[1]), .o1(n126) );
  i0sorn002ab1n02x7 U25 ( .a(n91), .b(n82), .o(n1) );
  i0smd2na2ab1n03x5 U26 ( .c(n109), .b(n108), .a(n107), .sa(EDATA_REG_1_), 
        .out0(EXPECT_DATA[1]) );
  i0sao0022ab1n03x5 U27 ( .a(EDATA_CMD_PIPE_0_1_), .b(OPSET_SELECT_DECODED[0]), 
        .c(EDATA_CMD[1]), .d(OPSET_SELECT_DECODED[1]), .o(n41) );
  i0saboi22ab1n03x5 U28 ( .c(EDATA_CMD[3]), .d(OPSET_SELECT_DECODED[1]), .a(
        OPSET_SELECT_DECODED[1]), .b(EDATA_CMD_PIPE_0_3_), .out0(n5) );
  i0soai012ab1n03x5 U29 ( .b(n73), .c(n75), .a(n72), .o1(n76) );
  i0saoai13ab1n03x5 U30 ( .c(n93), .d(n91), .b(n102), .a(EDATA_CMD[0]), .o1(
        n94) );
  i0soabi13ab1n02x5 U31 ( .c(EDATA_CMD[0]), .d(n81), .a(n84), .b(n79), .o1(
        n104) );
  i0snanb02ab1n02x5 U32 ( .a(n35), .b(MBISTPG_ALGO_SEL), .out0(n33) );
  i0sinv030ab1n02x5 U33 ( .a(n13), .o1(n12) );
  i0snanb04ab1n03x5 U34 ( .a(n97), .b(n94), .c(n96), .d(n84), .out0(n103) );
  i0snand02ab1n02x5 U35 ( .a(EDATA_REG_3_), .b(n30), .o1(n31) );
  i0sinv030ab1n03x5 U36 ( .a(n41), .o1(n38) );
  i0sinv020ab1n03x5 U37 ( .a(EN_ADDR_BIT_INVERSION), .o1(n112) );
  i0sinv000ab1n02x5 U38 ( .a(n32), .o1(n25) );
  i0sxor002ab1n02x7 U39 ( .a(n124), .b(n123), .out0(
        EN_ADDR_BIT_INVERSION_TO_BUF) );
  i0snanp02ab1n02x5 U40 ( .a(COLUMN_ADDRESS[0]), .b(SO), .o1(n124) );
  i0snanp02ab1n02x5 U41 ( .a(ROW_ADDRESS[0]), .b(X_ADDR_BIT_SEL_REG), .o1(n123) );
  i0smkn022ab1n04x5 U42 ( .b(n45), .a(n46), .sa(EN_ADDR_BIT_INVERSION), .o(n7)
         );
  i0smkn022ab1n04x5 U43 ( .b(n46), .a(n45), .sa(EN_ADDR_BIT_INVERSION), .o(n8)
         );
  i0snanp02ab1n02x5 U44 ( .a(BIST_ALGO_SEL_CNT), .b(RESET_REG_DEFAULT_MODE), 
        .o1(n35) );
  i0sand003ab1n03x5 U45 ( .a(LAST_TICK_PIPELINED), .b(EDATA_CMD_PIPE_0_2_), 
        .c(OPSET_SELECT_DECODED[0]), .o(n19) );
  i0soai022ab1n02x5 U46 ( .a(n18), .b(n16), .c(n37), .d(n15), .o1(n95) );
  i0snanp03ab1n02x5 U47 ( .a(X_ADDR_BIT_SEL_REG), .b(n35), .c(n13), .o1(n34)
         );
  i0snanp02ab1n02x5 U48 ( .a(SO), .b(n35), .o1(n36) );
  i0smkn022ab1n04x5 U49 ( .b(EDATA_CMD[1]), .a(EDATA_CMD_PIPE_0_1_), .sa(
        BIST_HOLD), .o(n111) );
  i0smkn022ab1n04x5 U50 ( .b(EDATA_CMD[3]), .a(EDATA_CMD_PIPE_0_3_), .sa(
        BIST_HOLD), .o(n121) );
  i0sand002ab1n02x5 U51 ( .a(BIST_HOLD), .b(EDATA_CMD_PIPE_0_2_), .o(n116) );
  i0sbff000ab1n02x5 U52 ( .a(n11), .o(n9) );
  i0sbff000ab1n02x5 U53 ( .a(n11), .o(n10) );
  i0sbff000ab1n02x5 U54 ( .a(BIST_ASYNC_RESETN), .o(n11) );
  i0sinv000ab1n03x5 U55 ( .a(BIST_SHIFT_SHORT), .o1(n13) );
  i0sand003ab1n03x7 U56 ( .a(n102), .b(n100), .c(n99), .o(n4) );
  i0sinv000ab1n03x5 U57 ( .a(n35), .o1(n21) );
  i0sinv000ab1n03x5 U58 ( .a(n60), .o1(n64) );
  i0sinv000ab1n03x5 U59 ( .a(n81), .o1(n102) );
  i0snanp02ab1n03x5 U60 ( .a(n87), .b(n93), .o1(n88) );
  i0snorp02ab1n03x5 U61 ( .a(n75), .b(n93), .o1(n68) );
  i0snanp02ab1n03x5 U62 ( .a(n90), .b(n88), .o1(n96) );
  i0sinv000ab1n03x5 U63 ( .a(n69), .o1(n70) );
  i0sinv000ab1n03x5 U64 ( .a(n78), .o1(n79) );
  i0soai122ab1n02x5 U65 ( .b(n18), .c(n15), .d(n37), .e(n14), .a(n33), .o1(n98) );
  i0sinv000ab1n03x5 U66 ( .a(n52), .o1(n53) );
  i0soai012ab1n03x5 U67 ( .b(n54), .c(n51), .a(n52), .o1(n57) );
  i0sorn002ab1n03x5 U68 ( .a(n69), .b(n57), .o(n58) );
  i0snorp02ab1n03x5 U69 ( .a(n6), .b(n100), .o1(n49) );
  i0sinv000ab1n03x5 U70 ( .a(n82), .o1(n85) );
  i0snanp02ab1n03x5 U71 ( .a(n85), .b(n69), .o1(n93) );
  i0sinv000ab1n03x5 U72 ( .a(WDATA_CMD[0]), .o1(n125) );
  i0sinv000ab1n03x5 U73 ( .a(n91), .o1(n87) );
  i0sinv000ab1n03x5 U74 ( .a(n48), .o1(n51) );
  i0snanp02ab1n03x5 U75 ( .a(n87), .b(n78), .o1(n100) );
  i0sinv000ab1n03x5 U76 ( .a(n59), .o1(n54) );
  i0snanp02ab1n03x5 U77 ( .a(n85), .b(n91), .o1(n90) );
  i0snand03ab1n02x5 U78 ( .a(BIST_RUN), .b(n5), .c(n19), .o1(n20) );
  i0sinv000ab1n03x5 U79 ( .a(EDATA_REG_2_), .o1(n29) );
  i0sinv000ab1n03x5 U80 ( .a(WDATA_REG_3_), .o1(n23) );
  i0sxor002ab1n03x5 U81 ( .a(EDATA_REG_3_), .b(n38), .out0(n24) );
  i0sinv000ab1n03x5 U82 ( .a(EDATA_CMD_PIPE_0_0_), .o1(n40) );
  i0sinv000ab1n03x5 U83 ( .a(WDATA_REG_2_), .o1(n16) );
  i0sinv000ab1n03x5 U84 ( .a(EN_ADDR_BIT_INVERSION_PIPE), .o1(n39) );
  i0snanp02ab1n02x5 U85 ( .a(EDATA_CMD_PIPE_0_0_), .b(OPSET_SELECT_DECODED[0]), 
        .o1(n50) );
  i0snanp02ab1n02x5 U86 ( .a(EDATA_CMD_PIPE_0_2_), .b(OPSET_SELECT_DECODED[0]), 
        .o1(n42) );
  i0sinv000ab1n03x5 U87 ( .a(EDATA_REG_1_), .o1(n28) );
  i0sinv000ab1n03x5 U88 ( .a(WDATA_REG_0_), .o1(n14) );
  i0sinv000ab1n03x5 U89 ( .a(WDATA_REG_1_), .o1(n15) );
  i0saoi022ab1n02x5 U90 ( .a(OPSET_SELECT_DECODED[1]), .b(
        EN_ADDR_BIT_INVERSION), .c(EN_ADDR_BIT_INVERSION_PIPE), .d(
        OPSET_SELECT_DECODED[0]), .o1(n6) );
  i0sxnr002ab1n03x5 U91 ( .a(EDATA_REG_0_), .b(n6), .out0(n52) );
  i0snorp03ab1n03x5 U92 ( .a(n125), .b(WDATA_CMD[1]), .c(WDATA_CMD[3]), .o1(
        n45) );
  i0snanp02ab1n03x5 U93 ( .a(n122), .b(n114), .o1(WRITE_DATA[0]) );
  i0soai122ab1n02x5 U94 ( .b(n113), .c(n126), .d(n125), .e(n112), .a(n44), 
        .o1(n122) );
  i0snanp02ab1n03x5 U95 ( .a(n126), .b(n127), .o1(n44) );
  i0saoib12ab1n02x5 U96 ( .c(EN_ADDR_BIT_INVERSION), .b(n125), .a(WDATA_CMD[3]), .out0(n113) );
  i0soai012ab1n03x5 U97 ( .b(WDATA_CMD[1]), .c(WDATA_CMD[0]), .a(n47), .o1(n46) );
  i0snanp03ab1n03x5 U98 ( .a(WDATA_CMD[1]), .b(WDATA_CMD[3]), .c(WDATA_CMD[0]), 
        .o1(n47) );
  i0snanp02ab1n03x5 U99 ( .a(n125), .b(WDATA_CMD[3]), .o1(n127) );
  i0snanp02ab1n03x5 U100 ( .a(n122), .b(n117), .o1(WRITE_DATA[2]) );
  i0snanp02ab1n03x5 U101 ( .a(n122), .b(n118), .o1(WRITE_DATA[3]) );
  i0snanp02ab1n03x5 U102 ( .a(n122), .b(n115), .o1(WRITE_DATA[1]) );
  i0sinv000ab1n03x5 U103 ( .a(n42), .o1(n43) );
  i0stihi00ab1n02x5 U104 ( .o(n119) );
  i0stilo00ab1n02x5 U105 ( .o(n120) );
  i0smdn022ab1n02x4 U106 ( .b(n62), .a(n40), .sa(BIST_HOLD), .o1(n106) );
  i0snanp02ab1n06x5 U107 ( .a(n12), .b(n35), .o1(n37) );
  i0snanb02ab1n03x5 U108 ( .a(n21), .b(n37), .out0(n18) );
  i0sobai22ab1n03x5 U109 ( .a(SI), .b(n37), .c(n18), .d(n14), .out0(n101) );
  i0snanb02ab1n03x5 U110 ( .a(n37), .b(WDATA_REG_2_), .out0(n17) );
  i0soabi13ab1n03x5 U111 ( .c(WDATA_REG_3_), .d(n18), .a(n33), .b(n17), .o1(
        n92) );
  i0sao0012ab1n03x7 U112 ( .b(n20), .c(n13), .a(n21), .o(n32) );
  i0snanb02ab1n03x5 U113 ( .a(n21), .b(n32), .out0(n22) );
  i0sinv030ab1n04x5 U114 ( .a(n22), .o1(n30) );
  i0smd2na2ab1n03x5 U115 ( .c(n25), .b(n24), .a(n23), .sa(n12), .out0(n26) );
  i0saob012ab1n03x5 U116 ( .b(EDATA_REG_0_), .c(n30), .a(n26), .out0(n89) );
  i0snanb02ab1n03x5 U117 ( .a(n28), .b(n30), .out0(n27) );
  i0soabi13ab1n03x5 U118 ( .c(EDATA_REG_0_), .d(n32), .a(n27), .b(n33), .o1(
        n86) );
  i0sobai22ab1n03x5 U119 ( .a(n30), .b(n29), .c(n32), .d(n28), .out0(n83) );
  i0soabi13ab1n03x5 U120 ( .c(EDATA_REG_2_), .d(n32), .a(n31), .b(n33), .o1(
        n80) );
  i0soabi13ab1n03x5 U121 ( .c(EDATA_REG_3_), .d(n37), .a(n34), .b(n33), .o1(
        n77) );
  i0sobai22ab1n03x5 U122 ( .a(X_ADDR_BIT_SEL_REG), .b(n37), .c(n12), .d(n36), 
        .out0(n74) );
  i0smdn022ab1n03x4 U123 ( .b(n112), .a(n39), .sa(BIST_HOLD), .o1(n71) );
  i0snanb02ab1n03x5 U124 ( .a(n87), .b(n78), .out0(n48) );
  i0smdn022ab1n03x4 U125 ( .b(n51), .a(n49), .sa(n54), .o1(n75) );
  i0snanb02ab1n03x5 U126 ( .a(n53), .b(n100), .out0(n61) );
  i0snanb02ab1n03x5 U127 ( .a(n93), .b(n61), .out0(n56) );
  i0saob012ab1n03x5 U128 ( .b(n54), .c(n100), .a(n53), .out0(n55) );
  i0soabi13ab1n03x5 U129 ( .c(n82), .d(n57), .a(n56), .b(n55), .o1(n60) );
  i0snanb02ab1n03x5 U130 ( .a(n59), .b(n93), .out0(n81) );
  i0snanb02ab1n03x5 U131 ( .a(n82), .b(n61), .out0(n63) );
  i0snanb02ab1n03x5 U132 ( .a(n85), .b(n102), .out0(n84) );
  i0smbn022ab1n06x5 U133 ( .b(n105), .a(n4), .sa(n6), .o(n108) );
  i0smbn022ab1n06x5 U134 ( .b(n4), .a(n105), .sa(n6), .o(n107) );
  i0smdn022ab1n03x4 U135 ( .b(n7), .a(n8), .sa(WDATA_REG_0_), .o1(n114) );
  i0smdn022ab1n03x4 U136 ( .b(n7), .a(n8), .sa(WDATA_REG_1_), .o1(n115) );
  i0smdn022ab1n03x4 U137 ( .b(n7), .a(n8), .sa(WDATA_REG_2_), .o1(n117) );
  i0smdn022ab1n03x4 U138 ( .b(n7), .a(n8), .sa(WDATA_REG_3_), .o1(n118) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_delaycounter ( BIST_CLK, 
        BIST_HOLD, BIST_ASYNC_RESETN, BIST_SHIFT_SHORT, RESET_REG_DEFAULT_MODE, 
        RESET_REG_SETUP1, BIST_ALGO_SEL_CNT, DELAYCOUNTER_CMD, LAST_TICK, 
        BIST_RUN, SI, MBISTPG_ALGO_SEL, MEM_ARRAY_DUMP_MODE, ESOE_RESET, 
        DELAYCOUNTER_ENDCOUNT_TRIGGER, SO );
  input BIST_CLK, BIST_HOLD, BIST_ASYNC_RESETN, BIST_SHIFT_SHORT,
         RESET_REG_DEFAULT_MODE, RESET_REG_SETUP1, BIST_ALGO_SEL_CNT,
         DELAYCOUNTER_CMD, LAST_TICK, BIST_RUN, SI, MBISTPG_ALGO_SEL,
         MEM_ARRAY_DUMP_MODE, ESOE_RESET;
  output DELAYCOUNTER_ENDCOUNT_TRIGGER, SO;
  wire   DELAYCOUNTER_CNT_7_, DELAYCOUNTER_CNT_6_, DELAYCOUNTER_CNT_5_,
         DELAYCOUNTER_CNT_4_, DELAYCOUNTER_CNT_3_, DELAYCOUNTER_CNT_2_,
         DELAYCOUNTER_CNT_1_, DELAYCOUNTER_CNT_0_, COMPARE_COUNTER_DATA_6_,
         COMPARE_COUNTER_DATA_5_, COMPARE_COUNTER_DATA_4_,
         COMPARE_COUNTER_DATA_3_, COMPARE_COUNTER_DATA_2_,
         COMPARE_COUNTER_DATA_1_, COMPARE_COUNTER_DATA_0_, RESET_DELAYCOUNTER,
         n8, n13, n20, n24, n26, n31, n33, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n109, n110, n58, n59, n62, n63, n66, n67, n70, n71, n74,
         n75, n78, n79, n82, n83, n86, n87, n90, n93, n96, n99, n102, n105,
         n108, n111, n1, n2, n3, n4, n5, n6, n7, n10, n11, n12, n14, n15, n16,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16;

  i0saob012ab1n03x5 U6 ( .b(n5), .c(DELAYCOUNTER_CNT_6_), .a(n13), .out0(n63)
         );
  i0saob012ab1n03x5 U20 ( .b(n5), .c(DELAYCOUNTER_CNT_3_), .a(n26), .out0(n75)
         );
  i0saob012ab1n03x5 U29 ( .b(n5), .c(DELAYCOUNTER_CNT_1_), .a(n33), .out0(n83)
         );
  i0snorb02ab1n03x4 U80 ( .a(n67), .b(RESET_DELAYCOUNTER), .out0(n66) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_7 ( .si(n110), .d(n90), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(SO), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_0 ( .si(n110), .d(n111), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(COMPARE_COUNTER_DATA_0_), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_1 ( .si(n110), .d(n108), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(COMPARE_COUNTER_DATA_1_), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_2 ( .si(n110), .d(n105), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(COMPARE_COUNTER_DATA_2_), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_3 ( .si(n110), .d(n102), .ssb(n109), 
        .clk(BIST_CLK), .rb(n2), .o(COMPARE_COUNTER_DATA_3_), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_4 ( .si(n110), .d(n99), .ssb(n109), 
        .clk(BIST_CLK), .rb(n2), .o(COMPARE_COUNTER_DATA_4_), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_5 ( .si(n110), .d(n96), .ssb(n109), 
        .clk(BIST_CLK), .rb(n2), .o(COMPARE_COUNTER_DATA_5_), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_REG_reg_6 ( .si(n110), .d(n93), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(COMPARE_COUNTER_DATA_6_), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_1 ( .si(n110), .d(n82), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_1_), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_3 ( .si(n110), .d(n74), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_3_), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_6 ( .si(n110), .d(n62), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_6_), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_2 ( .si(n110), .d(n78), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_2_), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_4 ( .si(n110), .d(n70), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_4_), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_7 ( .si(n110), .d(n58), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_7_), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_0 ( .si(n110), .d(n86), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_0_), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfvz003ab1d02x6 DELAYCOUNTER_CNT_reg_5 ( .si(n110), .d(n66), .ssb(n109), 
        .clk(BIST_CLK), .rb(n1), .o(DELAYCOUNTER_CNT_5_), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0snorb02ab1n02x5 U86 ( .a(n75), .b(RESET_DELAYCOUNTER), .out0(n74) );
  i0snorb02ab1n02x5 U92 ( .a(n83), .b(RESET_DELAYCOUNTER), .out0(n82) );
  i0snorb02ab1n02x5 U77 ( .a(n63), .b(RESET_DELAYCOUNTER), .out0(n62) );
  i0snorb02ab1n02x7 U89 ( .a(n79), .b(RESET_DELAYCOUNTER), .out0(n78) );
  i0snorb02ab1n02x7 U83 ( .a(n71), .b(RESET_DELAYCOUNTER), .out0(n70) );
  i0snorb02ab1n02x7 U74 ( .a(n59), .b(RESET_DELAYCOUNTER), .out0(n58) );
  i0snorb02ab1n02x7 U95 ( .a(n87), .b(RESET_DELAYCOUNTER), .out0(n86) );
  i0sinv000ab1n02x5 U3 ( .a(MEM_ARRAY_DUMP_MODE), .o1(n7) );
  i0sinv030ab1n06x5 U4 ( .a(n5), .o1(n4) );
  i0sinv020ab1n02x5 U5 ( .a(n20), .o1(n14) );
  i0soai012ab1n02x5 U7 ( .b(n12), .c(n5), .a(n14), .o1(n67) );
  i0snand02ab1n02x5 U8 ( .a(n5), .b(DELAYCOUNTER_CNT_7_), .o1(n8) );
  i0snand02ab1n02x5 U9 ( .a(n5), .b(DELAYCOUNTER_CNT_4_), .o1(n24) );
  i0snand02ab1n02x5 U10 ( .a(n5), .b(DELAYCOUNTER_CNT_2_), .o1(n31) );
  i0snanp02ab1n02x5 U11 ( .a(n4), .b(DELAYCOUNTER_CNT_5_), .o1(n13) );
  i0snanp02ab1n02x5 U12 ( .a(n4), .b(DELAYCOUNTER_CNT_0_), .o1(n33) );
  i0snanp02ab1n02x5 U13 ( .a(n4), .b(DELAYCOUNTER_CNT_2_), .o1(n26) );
  i0smkn022ab1n04x5 U14 ( .b(DELAYCOUNTER_CNT_0_), .a(SI), .sa(n4), .o(n87) );
  i0sao0012ab1n03x5 U15 ( .b(RESET_REG_SETUP1), .c(n7), .a(ESOE_RESET), .o(
        RESET_DELAYCOUNTER) );
  i0sbff000ab1n02x5 U16 ( .a(n3), .o(n1) );
  i0sbff000ab1n02x5 U17 ( .a(n3), .o(n2) );
  i0sbff000ab1n02x5 U18 ( .a(BIST_ASYNC_RESETN), .o(n3) );
  i0sinv000ab1n03x5 U19 ( .a(BIST_SHIFT_SHORT), .o1(n5) );
  i0snorp02ab1n02x5 U21 ( .a(n4), .b(n15), .o1(n20) );
  i0sinv000ab1n03x5 U22 ( .a(DELAYCOUNTER_CNT_5_), .o1(n15) );
  i0sinv000ab1n03x5 U23 ( .a(DELAYCOUNTER_CNT_4_), .o1(n12) );
  i0soai012ab1n02x5 U24 ( .b(n5), .c(n16), .a(n8), .o1(n59) );
  i0sinv000ab1n03x5 U25 ( .a(DELAYCOUNTER_CNT_6_), .o1(n16) );
  i0soai012ab1n02x5 U26 ( .b(n5), .c(n11), .a(n24), .o1(n71) );
  i0sinv000ab1n03x5 U27 ( .a(DELAYCOUNTER_CNT_3_), .o1(n11) );
  i0soai012ab1n02x5 U28 ( .b(n5), .c(n10), .a(n31), .o1(n79) );
  i0sinv000ab1n03x5 U30 ( .a(DELAYCOUNTER_CNT_1_), .o1(n10) );
  i0sxor002ab1n03x5 U31 ( .a(DELAYCOUNTER_CNT_7_), .b(SO), .out0(n48) );
  i0sxor002ab1n03x5 U32 ( .a(DELAYCOUNTER_CNT_4_), .b(COMPARE_COUNTER_DATA_4_), 
        .out0(n51) );
  i0sxor002ab1n03x5 U33 ( .a(DELAYCOUNTER_CNT_2_), .b(COMPARE_COUNTER_DATA_2_), 
        .out0(n53) );
  i0sxor002ab1n03x5 U34 ( .a(DELAYCOUNTER_CNT_3_), .b(COMPARE_COUNTER_DATA_3_), 
        .out0(n52) );
  i0sxor002ab1n03x5 U35 ( .a(DELAYCOUNTER_CNT_1_), .b(COMPARE_COUNTER_DATA_1_), 
        .out0(n54) );
  i0sxor002ab1n03x5 U36 ( .a(DELAYCOUNTER_CNT_6_), .b(COMPARE_COUNTER_DATA_6_), 
        .out0(n49) );
  i0sinv000ab1n03x5 U37 ( .a(n47), .o1(DELAYCOUNTER_ENDCOUNT_TRIGGER) );
  i0sorn008ab1n03x5 U38 ( .a(n48), .b(n49), .c(n50), .d(n51), .e(n52), .f(n53), 
        .g(n54), .h(n55), .o(n47) );
  i0sxor002ab1n03x5 U39 ( .a(DELAYCOUNTER_CNT_0_), .b(COMPARE_COUNTER_DATA_0_), 
        .out0(n55) );
  i0sxor002ab1n03x5 U40 ( .a(DELAYCOUNTER_CNT_5_), .b(COMPARE_COUNTER_DATA_5_), 
        .out0(n50) );
  i0stihi00ab1n02x5 U41 ( .o(n109) );
  i0stilo00ab1n02x5 U42 ( .o(n110) );
  i0snanb02ab1n03x5 U43 ( .a(MEM_ARRAY_DUMP_MODE), .b(RESET_REG_DEFAULT_MODE), 
        .out0(n6) );
  i0smd2na2ab1n03x5 U44 ( .c(n6), .b(COMPARE_COUNTER_DATA_0_), .a(
        DELAYCOUNTER_CNT_7_), .sa(n4), .out0(n111) );
  i0smd2na2ab1n03x5 U45 ( .c(n6), .b(COMPARE_COUNTER_DATA_1_), .a(
        COMPARE_COUNTER_DATA_0_), .sa(n4), .out0(n108) );
  i0smd2na2ab1n03x5 U46 ( .c(n6), .b(COMPARE_COUNTER_DATA_2_), .a(
        COMPARE_COUNTER_DATA_1_), .sa(n4), .out0(n105) );
  i0smd2na2ab1n03x5 U47 ( .c(n6), .b(COMPARE_COUNTER_DATA_3_), .a(
        COMPARE_COUNTER_DATA_2_), .sa(n4), .out0(n102) );
  i0smd2na2ab1n03x5 U48 ( .c(n6), .b(COMPARE_COUNTER_DATA_4_), .a(
        COMPARE_COUNTER_DATA_3_), .sa(n4), .out0(n99) );
  i0smd2na2ab1n03x5 U49 ( .c(n6), .b(COMPARE_COUNTER_DATA_5_), .a(
        COMPARE_COUNTER_DATA_4_), .sa(n4), .out0(n96) );
  i0smd2na2ab1n03x5 U50 ( .c(n6), .b(COMPARE_COUNTER_DATA_6_), .a(
        COMPARE_COUNTER_DATA_5_), .sa(n4), .out0(n93) );
  i0smd2na2ab1n03x5 U51 ( .c(n6), .b(SO), .a(COMPARE_COUNTER_DATA_6_), .sa(n4), 
        .out0(n90) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_repeat_loop_cntrl ( 
        BIST_CLK, RESET_REG_SETUP1, RESET_REG_DEFAULT_MODE, LOOP_CMD, 
        BIST_ASYNC_RESETN, ADD_Y0_CMD, ADD_Y1_CMD, ADD_X0_CMD, ADD_X1_CMD, 
        WDATA_CMD, EDATA_CMD, INH_LAST_ADDR_CNT, INH_DATA_CMP, LOOP_STATE_TRUE, 
        A_EQUALS_B_INVERT_DATA, A_EQUALS_B_TRIGGER, SI, BIST_HOLD, LAST_TICK, 
        BIST_SHIFT_SHORT, BIST_RUN, OPSET_SELECT_DECODED, MBISTPG_ALGO_SEL, 
        OPSET_INVERT_EDATA, OPSET_INVERT_WDATA, ESOE_RESET, 
        LOOPCOUNTMAX_TRIGGER, LOOP_POINTER, ADD_Y0_CMD_MODIFIED, 
        ADD_Y1_CMD_MODIFIED, ADD_X0_CMD_MODIFIED, ADD_X1_CMD_MODIFIED, 
        WDATA_CMD_MODIFIED, EDATA_CMD_MODIFIED, INH_LAST_ADDR_CNT_MODIFIED, 
        INH_DATA_CMP_MODIFIED, SO );
  input [1:0] LOOP_CMD;
  input [1:0] ADD_Y0_CMD;
  input [2:0] ADD_Y1_CMD;
  input [1:0] ADD_X0_CMD;
  input [2:0] ADD_X1_CMD;
  input [3:0] WDATA_CMD;
  input [3:0] EDATA_CMD;
  input [1:0] A_EQUALS_B_INVERT_DATA;
  input [1:0] OPSET_SELECT_DECODED;
  output [4:0] LOOP_POINTER;
  output [1:0] ADD_Y0_CMD_MODIFIED;
  output [2:0] ADD_Y1_CMD_MODIFIED;
  output [1:0] ADD_X0_CMD_MODIFIED;
  output [2:0] ADD_X1_CMD_MODIFIED;
  output [3:0] WDATA_CMD_MODIFIED;
  output [3:0] EDATA_CMD_MODIFIED;
  input BIST_CLK, RESET_REG_SETUP1, RESET_REG_DEFAULT_MODE, BIST_ASYNC_RESETN,
         INH_LAST_ADDR_CNT, INH_DATA_CMP, LOOP_STATE_TRUE, A_EQUALS_B_TRIGGER,
         SI, BIST_HOLD, LAST_TICK, BIST_SHIFT_SHORT, BIST_RUN,
         MBISTPG_ALGO_SEL, OPSET_INVERT_EDATA, OPSET_INVERT_WDATA, ESOE_RESET;
  output LOOPCOUNTMAX_TRIGGER, INH_LAST_ADDR_CNT_MODIFIED,
         INH_DATA_CMP_MODIFIED, SO;
  wire   ADD_Y1_CMD_2_, ADD_Y1_CMD_1_, ADD_X1_CMD_2_, ADD_X1_CMD_1_,
         WDATA_CMD_3_, WDATA_CMD_1_, EDATA_CMD_3_, EDATA_CMD_1_,
         LOOP_A_CNTR_1_, LOOP_A_CNTR_0_, LOOP_B_CNTR_0_,
         INH_DATA_CMP_MODIFIED_INT_PIPE, ADD_X0_CMD_MODIFIED_0_, n63, n64, n53,
         n56, n59, n62, n65, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n51, n52, n54, n55, n57, n58,
         n60, n61, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6;
  assign ADD_Y1_CMD_2_ = ADD_Y1_CMD[2];
  assign ADD_Y1_CMD_MODIFIED[2] = ADD_Y1_CMD_2_;
  assign ADD_Y1_CMD_1_ = ADD_Y1_CMD[1];
  assign ADD_Y1_CMD_MODIFIED[1] = ADD_Y1_CMD_1_;
  assign ADD_X1_CMD_2_ = ADD_X1_CMD[2];
  assign ADD_X1_CMD_MODIFIED[2] = ADD_X1_CMD_2_;
  assign ADD_X1_CMD_1_ = ADD_X1_CMD[1];
  assign ADD_X1_CMD_MODIFIED[1] = ADD_X1_CMD_1_;
  assign WDATA_CMD_3_ = WDATA_CMD[3];
  assign WDATA_CMD_MODIFIED[3] = WDATA_CMD_3_;
  assign WDATA_CMD_1_ = WDATA_CMD[1];
  assign WDATA_CMD_MODIFIED[1] = WDATA_CMD_1_;
  assign EDATA_CMD_3_ = EDATA_CMD[3];
  assign EDATA_CMD_MODIFIED[3] = EDATA_CMD_3_;
  assign EDATA_CMD_1_ = EDATA_CMD[1];
  assign EDATA_CMD_MODIFIED[1] = EDATA_CMD_1_;
  assign ADD_Y0_CMD_MODIFIED[0] = ADD_X0_CMD_MODIFIED_0_;
  assign ADD_X0_CMD_MODIFIED[0] = ADD_X0_CMD_MODIFIED_0_;

  i0sfvz003ab1d03x6 LOOP_B_CNTR_reg_0 ( .si(n64), .d(n59), .ssb(n63), .clk(
        BIST_CLK), .rb(n16), .o(LOOP_B_CNTR_0_), .so(SYNOPSYS_UNCONNECTED_1)
         );
  i0sfvz003ab1d03x6 INH_DATA_CMP_MODIFIED_INT_PIPE_reg ( .si(n64), .d(n53), 
        .ssb(n63), .clk(BIST_CLK), .rb(n16), .o(INH_DATA_CMP_MODIFIED_INT_PIPE), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvp003ab1d18x5 LOOP_A_CNTR_reg_1 ( .si(n64), .d(n62), .ssb(n63), .clk(
        BIST_CLK), .rb(n16), .o(LOOP_A_CNTR_1_), .so(SYNOPSYS_UNCONNECTED_3)
         );
  i0sfvz003ab1d09x5 LOOP_B_CNTR_reg_1 ( .si(n64), .d(n56), .ssb(n63), .clk(
        BIST_CLK), .rb(n16), .o(SO), .so(SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d09x5 LOOP_A_CNTR_reg_0 ( .si(n64), .d(n65), .ssb(n63), .clk(
        BIST_CLK), .rb(n16), .o(LOOP_A_CNTR_0_), .so(SYNOPSYS_UNCONNECTED_5)
         );
  i0sinv000ab1n03x5 U3 ( .a(n57), .o1(n1) );
  i0sinv030ab1n04x5 U4 ( .a(n1), .o1(n2) );
  i0soabi12ab1n02x5 U5 ( .b(n7), .c(n54), .a(n6), .out0(n57) );
  i0snorb02ab1n03x4 U6 ( .a(LOOP_STATE_TRUE), .b(n48), .out0(n49) );
  i0soa0013ab1n06x5 U7 ( .b(n75), .c(n34), .d(n33), .a(n4), .o(n5) );
  i0sxo2na2ab1n03x5 U8 ( .c(LOOP_CMD[0]), .a(LOOP_POINTER[0]), .b(
        LOOP_A_CNTR_1_), .out0(n73) );
  i0snanp03ab1n02x5 U9 ( .a(n32), .b(n46), .c(n72), .o1(n36) );
  i0saob012ab1n03x5 U10 ( .b(n54), .c(n8), .a(n13), .out0(n68) );
  i0sinv030ab1n02x5 U11 ( .a(n21), .o1(n22) );
  i0sinv020ab1n02x5 U12 ( .a(n29), .o1(n24) );
  i0sinv000ab1n03x5 U13 ( .a(n47), .o1(n42) );
  i0sxor003ab1n02x5 U14 ( .a(n13), .b(n76), .c(n58), .out0(
        WDATA_CMD_MODIFIED[0]) );
  i0soabi12ab1n02x7 U15 ( .b(n25), .c(n24), .a(n54), .out0(n26) );
  i0snand43ab1n02x5 U16 ( .a(LOOP_CMD[0]), .b(n54), .c(n8), .o1(n31) );
  i0snanb02ab1n03x5 U17 ( .a(n8), .b(LOOP_POINTER[4]), .out0(LOOP_POINTER[1])
         );
  i0snanb02ab1n03x5 U18 ( .a(n8), .b(n70), .out0(n71) );
  i0sinv000ab1n04x5 U19 ( .a(n9), .o1(n8) );
  i0soai033ab1n06x5 U20 ( .a(n75), .b(SO), .c(n74), .d(n73), .e(LOOP_CMD[1]), 
        .f(n6), .o1(LOOPCOUNTMAX_TRIGGER) );
  i0soabi13ab1n06x5 U21 ( .c(n9), .d(n48), .a(n31), .b(n30), .o1(n75) );
  i0sand002ab1n03x5 U22 ( .a(n15), .b(n18), .o(n3) );
  i0soa0012ab1n03x5 U23 ( .b(SO), .c(n36), .a(n3), .o(n4) );
  i0sinv020ab1n02x5 U24 ( .a(LOOP_A_CNTR_0_), .o1(n6) );
  i0snanb03ab1n06x5 U25 ( .a(BIST_HOLD), .b(LOOP_STATE_TRUE), .c(LAST_TICK), 
        .out0(n34) );
  i0sinv020ab1n03x5 U26 ( .a(ADD_Y1_CMD[0]), .o1(n67) );
  i0snor022ab1n02x5 U27 ( .a(ADD_Y1_CMD[0]), .b(LOOP_A_CNTR_1_), .o1(n61) );
  i0soai013ab1n02x4 U28 ( .b(n75), .c(n34), .d(n33), .a(n4), .o1(n37) );
  i0snanb04ab1n03x5 U29 ( .a(n34), .b(n68), .c(BIST_RUN), .d(LOOP_CMD[0]), 
        .out0(n21) );
  i0saoai13ab1n02x7 U30 ( .c(n3), .d(n39), .b(n5), .a(SO), .o1(n38) );
  i0sinv040ab1n02x5 U31 ( .a(n20), .o1(n10) );
  i0sinv020ab1n04x5 U32 ( .a(LOOP_A_CNTR_1_), .o1(n54) );
  i0sinv020ab1n02x5 U33 ( .a(n75), .o1(n46) );
  i0sinv030ab1n02x5 U34 ( .a(n7), .o1(LOOP_POINTER[0]) );
  i0sinv000ab1n02x5 U35 ( .a(MBISTPG_ALGO_SEL), .o1(n7) );
  i0sinv020ab1n04x5 U36 ( .a(MBISTPG_ALGO_SEL), .o1(n20) );
  i0saoib14ab1n06x5 U37 ( .c(n7), .d(n67), .a(n66), .b(n61), .o1(
        ADD_Y1_CMD_MODIFIED[0]) );
  i0snano22ab1n03x5 U38 ( .b(ADD_Y1_CMD[0]), .c(LOOP_A_CNTR_1_), .a(n10), 
        .out0(n66) );
  i0sinv040ab1n03x5 U39 ( .a(n20), .o1(n9) );
  i0snanb03ab1n06x5 U40 ( .a(SO), .b(LOOP_B_CNTR_0_), .c(n9), .out0(n58) );
  i0saoi013ab1n03x5 U41 ( .b(LOOP_CMD[0]), .c(LOOP_STATE_TRUE), .d(
        LOOP_A_CNTR_0_), .a(INH_LAST_ADDR_CNT), .o1(n51) );
  i0snand03ab1n02x5 U42 ( .a(n47), .b(LOOP_STATE_TRUE), .c(n46), .o1(n52) );
  i0sinv000ab1n02x5 U43 ( .a(n71), .o1(LOOP_POINTER[2]) );
  i0saoib12ab1n02x5 U44 ( .c(LOOP_A_CNTR_0_), .b(LOOP_CMD[0]), .a(n69), .out0(
        n30) );
  i0sinv020ab1n02x5 U45 ( .a(n44), .o1(n12) );
  i0sinv020ab1n03x5 U46 ( .a(n45), .o1(n11) );
  i0sinv000ab1n02x5 U47 ( .a(n18), .o1(n17) );
  i0sinv040ab1n03x5 U48 ( .a(n34), .o1(n32) );
  i0sxor003ab1d09x5 U49 ( .a(n2), .b(n55), .c(n58), .out0(
        EDATA_CMD_MODIFIED[0]) );
  i0sinv020ab1n03x5 U50 ( .a(n72), .o1(n74) );
  i0saoai13ab1n03x5 U51 ( .c(n40), .d(n18), .b(n39), .a(n38), .o1(n56) );
  i0soai012ab1n06x5 U52 ( .b(n69), .c(n68), .a(LOOP_CMD[0]), .o1(
        LOOP_POINTER[4]) );
  i0saobi12ab1n02x5 U53 ( .b(LOOP_POINTER[0]), .c(LOOP_A_CNTR_1_), .a(
        LOOP_A_CNTR_0_), .out0(n13) );
  i0sao0012ab1n03x5 U54 ( .b(OPSET_SELECT_DECODED[1]), .c(n11), .a(n12), .o(
        INH_DATA_CMP_MODIFIED) );
  i0saoi022ab1n02x5 U55 ( .a(n4), .b(n39), .c(n17), .d(LOOP_A_CNTR_1_), .o1(
        n35) );
  i0sinv020ab1n03x5 U56 ( .a(LOOP_CMD[1]), .o1(n69) );
  i0snorp02ab1n02x5 U57 ( .a(RESET_REG_SETUP1), .b(ESOE_RESET), .o1(n15) );
  i0sbff000ab1n02x5 U58 ( .a(BIST_ASYNC_RESETN), .o(n16) );
  i0sinv000ab1n03x5 U59 ( .a(BIST_SHIFT_SHORT), .o1(n18) );
  i0sinv000ab1n03x5 U60 ( .a(LOOP_POINTER[4]), .o1(n70) );
  i0sxnr002ab1n03x5 U61 ( .a(LOOP_B_CNTR_0_), .b(LOOP_POINTER[0]), .out0(n72)
         );
  i0snanp02ab1n02x5 U62 ( .a(LOOP_A_CNTR_1_), .b(LOOP_CMD[0]), .o1(n48) );
  i0snanb04ab1n02x5 U63 ( .a(SO), .b(n37), .c(n15), .d(n36), .out0(n40) );
  i0sxor002ab1n02x7 U64 ( .a(OPSET_INVERT_EDATA), .b(EDATA_CMD[0]), .out0(n55)
         );
  i0snanp02ab1n02x5 U65 ( .a(OPSET_SELECT_DECODED[0]), .b(
        INH_DATA_CMP_MODIFIED_INT_PIPE), .o1(n44) );
  i0snorp02ab1n02x5 U66 ( .a(LOOP_A_CNTR_0_), .b(LOOP_A_CNTR_1_), .o1(n41) );
  i0saoai13ab1n02x7 U67 ( .c(n68), .d(n33), .b(n23), .a(n3), .o1(n29) );
  i0snanp02ab1n02x5 U68 ( .a(LOOP_CMD[0]), .b(n32), .o1(n23) );
  i0soaib12ab1n03x5 U69 ( .c(LOOP_A_CNTR_0_), .b(n14), .a(n26), .out0(n62) );
  i0saoi013ab1n02x4 U70 ( .b(n22), .c(n15), .d(n54), .a(n17), .o1(n14) );
  i0snanp02ab1n02x5 U71 ( .a(SI), .b(n17), .o1(n28) );
  i0sinv000ab1n02x5 U72 ( .a(INH_DATA_CMP_MODIFIED_INT_PIPE), .o1(n43) );
  i0sinv000ab1n02x5 U73 ( .a(LOOP_B_CNTR_0_), .o1(n39) );
  i0sinv000ab1n02x5 U74 ( .a(BIST_RUN), .o1(n33) );
  i0sinv000ab1n03x5 U75 ( .a(WDATA_CMD[0]), .o1(n76) );
  i0stihi00ab1n02x5 U76 ( .o(n63) );
  i0stilo00ab1n02x5 U77 ( .o(n64) );
  i0saob012ab1n02x5 U78 ( .b(LOOP_POINTER[4]), .c(n8), .a(n71), .out0(
        LOOP_POINTER[3]) );
  i0sinv000ab1n06x5 U79 ( .a(n60), .o1(ADD_X0_CMD_MODIFIED_0_) );
  i0sxord22ab1n03x7 U80 ( .a(ADD_X1_CMD[0]), .b(ADD_X0_CMD_MODIFIED_0_), 
        .oxnr(SYNOPSYS_UNCONNECTED_6), .oxor(ADD_X1_CMD_MODIFIED[0]) );
  i0snanb02ab1n06x5 U81 ( .a(n9), .b(LOOP_A_CNTR_1_), .out0(n60) );
  i0snand03ab1n04x5 U82 ( .a(n22), .b(n3), .c(n6), .o1(n27) );
  i0sinv030ab1n04x5 U83 ( .a(n27), .o1(n25) );
  i0soabi13ab1n03x5 U84 ( .c(LOOP_A_CNTR_0_), .d(n29), .a(n28), .b(n27), .o1(
        n65) );
  i0smdn022ab1n03x4 U85 ( .b(n35), .a(n39), .sa(n5), .o1(n59) );
  i0sorn002ab1n03x5 U86 ( .a(SO), .b(LOOP_B_CNTR_0_), .o(n47) );
  i0snand03ab1n04x5 U87 ( .a(INH_DATA_CMP), .b(n42), .c(n41), .o1(n45) );
  i0smdn022ab1n03x4 U88 ( .b(n45), .a(n43), .sa(BIST_HOLD), .o1(n53) );
  i0snorb03ab1n03x5 U89 ( .a(n52), .b(n51), .c(n49), .out0(
        INH_LAST_ADDR_CNT_MODIFIED) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_signal_gen ( BIST_CLK, 
        BIST_ASYNC_RESETN, LV_TM, MEM_BYPASS_EN, SI, BIST_SHIFT_SHORT, 
        BIST_HOLD_R_INT, RESET_REG_DEFAULT_MODE, OP_SELECT_CMD, BIST_RUN, 
        BIST_RUN_TO_BUF, BIST_RUN_BUF, LAST_STATE_DONE, 
        LAST_STATE_DONE_PIPELINED, BIST_ALGO_SEL_CNT, MBISTPG_ALGO_SEL, 
        MEM_ARRAY_DUMP_MODE, LAST_TICK, LAST_TICK_PIPELINED, 
        OPSET_SELECT_DECODED, BIST_COLLAR_OPSET_SELECT, BIST_CMP, 
        BIST_Y0_COUNT_EN, BIST_X0_COUNT_EN, SWITCH_ADDRESS_REG, 
        OPSET_INVERT_EDATA, OPSET_INVERT_WDATA, BIST_WRITEENABLE, 
        BIST_READENABLE, SO );
  input [5:0] OP_SELECT_CMD;
  output [1:0] OPSET_SELECT_DECODED;
  input BIST_CLK, BIST_ASYNC_RESETN, LV_TM, MEM_BYPASS_EN, SI,
         BIST_SHIFT_SHORT, BIST_HOLD_R_INT, RESET_REG_DEFAULT_MODE, BIST_RUN,
         BIST_RUN_TO_BUF, BIST_RUN_BUF, LAST_STATE_DONE,
         LAST_STATE_DONE_PIPELINED, BIST_ALGO_SEL_CNT, MBISTPG_ALGO_SEL,
         MEM_ARRAY_DUMP_MODE;
  output LAST_TICK, LAST_TICK_PIPELINED, BIST_COLLAR_OPSET_SELECT, BIST_CMP,
         BIST_Y0_COUNT_EN, BIST_X0_COUNT_EN, SWITCH_ADDRESS_REG,
         OPSET_INVERT_EDATA, OPSET_INVERT_WDATA, BIST_WRITEENABLE,
         BIST_READENABLE, SO;
  wire   n61, LAST_TICK_REG_1_, JCNT_2_, JCNT_1_, JCNT_0_,
         DEFAULT_STROBEDATAOUT_PIPE_0_, n134, n135, n115, n116, n119, n122,
         n125, n128, n129, n132, n133, n136, n1, n2, n3, n4, n5,
         BIST_COLLAR_OPSET_SELECT, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7;
  assign OPSET_SELECT_DECODED[1] = BIST_COLLAR_OPSET_SELECT;
  assign SO = BIST_COLLAR_OPSET_SELECT;

  i0sfvz003ab1d03x6 OPSET_SELECT_REG_reg ( .si(n135), .d(n136), .ssb(n134), 
        .clk(BIST_CLK), .rb(n4), .o(n61), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 LAST_TICK_REG_reg_0 ( .si(n135), .d(n132), .ssb(n134), 
        .clk(BIST_CLK), .rb(n4), .o(LAST_TICK), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 LAST_TICK_REG_reg_1 ( .si(n135), .d(n128), .ssb(n134), 
        .clk(BIST_CLK), .rb(n4), .o(LAST_TICK_REG_1_), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 JCNT_reg_1 ( .si(n135), .d(n119), .ssb(n134), .clk(
        BIST_CLK), .rb(n4), .o(JCNT_1_), .so(SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 DEFAULT_STROBEDATAOUT_PIPE_reg_0 ( .si(n135), .d(n115), 
        .ssb(n134), .clk(BIST_CLK), .rb(n4), .o(DEFAULT_STROBEDATAOUT_PIPE_0_), 
        .so(SYNOPSYS_UNCONNECTED_5) );
  i0sand002ab1n02x5 U146 ( .a(n133), .b(BIST_RUN), .o(n132) );
  i0sand002ab1n02x5 U143 ( .a(n129), .b(BIST_RUN), .o(n128) );
  i0sand002ab1n03x5 U134 ( .a(n116), .b(BIST_RUN), .o(n115) );
  i0sfvz003ab1d09x5 JCNT_reg_0 ( .si(n135), .d(n122), .ssb(n134), .clk(
        BIST_CLK), .rb(n4), .o(JCNT_0_), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d09x5 JCNT_reg_2 ( .si(n135), .d(n125), .ssb(n134), .clk(
        BIST_CLK), .rb(n4), .o(JCNT_2_), .so(SYNOPSYS_UNCONNECTED_7) );
  i0snor002ab1n02x5 U3 ( .a(JCNT_2_), .b(n12), .o1(n10) );
  i0snanb02ab1n06x5 U4 ( .a(JCNT_1_), .b(JCNT_0_), .out0(n45) );
  i0snanb03ab1n06x5 U5 ( .a(OP_SELECT_CMD[3]), .b(OP_SELECT_CMD[1]), .c(
        OP_SELECT_CMD[0]), .out0(n44) );
  i0sinv030ab1n08x5 U6 ( .a(OPSET_SELECT_DECODED[0]), .o1(
        BIST_COLLAR_OPSET_SELECT) );
  i0soa0012ab1n03x5 U7 ( .b(n46), .c(n55), .a(n56), .o(n1) );
  i0sinv040ab1n03x5 U8 ( .a(n30), .o1(n36) );
  i0snona22ab1n03x5 U9 ( .b(OP_SELECT_CMD[1]), .c(OP_SELECT_CMD[0]), .a(
        OP_SELECT_CMD[3]), .out0(n19) );
  i0sinv040ab1n03x5 U10 ( .a(n19), .o1(n56) );
  i0snor002ab1n02x5 U11 ( .a(OP_SELECT_CMD[0]), .b(OP_SELECT_CMD[1]), .o1(n21)
         );
  i0sinv000ab1n06x5 U12 ( .a(n61), .o1(OPSET_SELECT_DECODED[0]) );
  i0smdn022ab1n02x5 U13 ( .b(n25), .a(n24), .sa(BIST_COLLAR_OPSET_SELECT), 
        .o1(n27) );
  i0smdn022ab1n02x5 U14 ( .b(n60), .a(n59), .sa(BIST_COLLAR_OPSET_SELECT), 
        .o1(LAST_TICK_PIPELINED) );
  i0sand002ab1n03x5 U15 ( .a(n49), .b(n44), .o(n2) );
  i0sinv020ab1n02x5 U16 ( .a(n13), .o1(n17) );
  i0sinv000ab1n02x5 U17 ( .a(n49), .o1(n39) );
  i0snorp02ab1n02x5 U18 ( .a(OP_SELECT_CMD[3]), .b(OP_SELECT_CMD[1]), .o1(n3)
         );
  i0snanp02ab1n02x5 U19 ( .a(n3), .b(OP_SELECT_CMD[0]), .o1(n43) );
  i0sinv000ab1n02x5 U20 ( .a(BIST_HOLD_R_INT), .o1(n5) );
  i0snanp03ab1n02x5 U21 ( .a(n38), .b(n5), .c(n59), .o1(n12) );
  i0snona22ab1n03x5 U22 ( .b(OP_SELECT_CMD[3]), .c(OP_SELECT_CMD[0]), .a(
        OP_SELECT_CMD[1]), .out0(n49) );
  i0snanb02ab1n02x5 U23 ( .a(n16), .b(JCNT_0_), .out0(n11) );
  i0sinv000ab1n02x5 U24 ( .a(LAST_TICK), .o1(n59) );
  i0snanb04ab1n02x5 U25 ( .a(n28), .b(n27), .c(n26), .d(n59), .out0(n29) );
  i0snorp02ab1n02x5 U26 ( .a(n55), .b(n23), .o1(n24) );
  i0sbff000ab1n02x5 U27 ( .a(BIST_ASYNC_RESETN), .o(n4) );
  i0snanp02ab1n02x5 U28 ( .a(n56), .b(n45), .o1(n20) );
  i0saoi012ab1n02x5 U29 ( .b(n2), .c(n43), .a(n46), .o1(n28) );
  i0snanp03ab1n03x5 U30 ( .a(n42), .b(n41), .c(n40), .o1(BIST_READENABLE) );
  i0snanp03ab1n02x5 U31 ( .a(n46), .b(n38), .c(n37), .o1(n41) );
  i0soai013ab1n02x4 U32 ( .b(n1), .c(n37), .d(n36), .a(n35), .o1(n42) );
  i0snanp02ab1n02x5 U33 ( .a(n56), .b(n47), .o1(n48) );
  i0sinv000ab1n02x5 U34 ( .a(n44), .o1(n37) );
  i0snanp02ab1n02x5 U35 ( .a(n38), .b(BIST_COLLAR_OPSET_SELECT), .o1(n52) );
  i0sinv000ab1n03x5 U36 ( .a(MEM_BYPASS_EN), .o1(n8) );
  i0snanb04ab1n02x5 U37 ( .a(OP_SELECT_CMD[1]), .b(n47), .c(OP_SELECT_CMD[3]), 
        .d(OP_SELECT_CMD[0]), .out0(n30) );
  i0snano22ab1n02x4 U38 ( .b(n56), .c(n55), .a(n54), .out0(OPSET_INVERT_EDATA)
         );
  i0sinv000ab1n02x5 U39 ( .a(JCNT_1_), .o1(n14) );
  i0sinv000ab1n02x5 U40 ( .a(JCNT_2_), .o1(n15) );
  i0sinv000ab1n02x5 U41 ( .a(LAST_STATE_DONE), .o1(n26) );
  i0smkn022ab1n02x5 U42 ( .b(n57), .a(DEFAULT_STROBEDATAOUT_PIPE_0_), .sa(
        BIST_HOLD_R_INT), .o(n116) );
  i0saoai13ab1n02x5 U43 ( .c(n21), .d(n23), .b(n46), .a(n20), .o1(n25) );
  i0sinv020ab1n02x5 U44 ( .a(LAST_TICK_REG_1_), .o1(n60) );
  i0smd2no2ab1n02x5 U45 ( .c(n18), .b(BIST_COLLAR_OPSET_SELECT), .a(JCNT_2_), 
        .sa(BIST_SHIFT_SHORT), .out0(n136) );
  i0snano22ab1n02x4 U46 ( .b(BIST_ALGO_SEL_CNT), .c(RESET_REG_DEFAULT_MODE), 
        .a(MEM_ARRAY_DUMP_MODE), .out0(n18) );
  i0soabi12ab1n03x5 U47 ( .b(n53), .c(n52), .a(n51), .out0(BIST_WRITEENABLE)
         );
  i0saoi013ab1n02x4 U48 ( .b(n50), .c(n49), .d(n48), .a(n54), .o1(n51) );
  i0saoai13ab1n02x5 U49 ( .c(n46), .d(OP_SELECT_CMD[0]), .b(OP_SELECT_CMD[1]), 
        .a(OP_SELECT_CMD[3]), .o1(n50) );
  i0stihi00ab1n02x5 U50 ( .o(n134) );
  i0stilo00ab1n02x5 U51 ( .o(n135) );
  i0snanb02ab1n03x5 U52 ( .a(BIST_SHIFT_SHORT), .b(BIST_HOLD_R_INT), .out0(n16) );
  i0snanb02ab1n03x5 U53 ( .a(LAST_STATE_DONE), .b(BIST_RUN), .out0(n9) );
  i0sinv030ab1n04x5 U54 ( .a(n9), .o1(n38) );
  i0smd2na2ab1n03x5 U55 ( .c(n11), .b(n10), .a(SI), .sa(BIST_SHIFT_SHORT), 
        .out0(n122) );
  i0snanb02ab1n03x5 U56 ( .a(BIST_SHIFT_SHORT), .b(n12), .out0(n13) );
  i0sobai22ab1n03x5 U57 ( .a(JCNT_0_), .b(n17), .c(n14), .d(n16), .out0(n119)
         );
  i0sobai22ab1n03x5 U58 ( .a(JCNT_1_), .b(n17), .c(n16), .d(n15), .out0(n125)
         );
  i0sorn002ab1n03x5 U59 ( .a(JCNT_0_), .b(JCNT_2_), .o(n31) );
  i0sinv030ab1n04x5 U60 ( .a(n31), .o1(n46) );
  i0snanb02ab1n03x5 U61 ( .a(OP_SELECT_CMD[0]), .b(n3), .out0(n23) );
  i0snanb02ab1n03x5 U62 ( .a(JCNT_2_), .b(JCNT_1_), .out0(n22) );
  i0sinv030ab1n04x5 U63 ( .a(n22), .o1(n55) );
  i0smdn022ab1n03x4 U64 ( .b(n29), .a(n59), .sa(BIST_HOLD_R_INT), .o1(n133) );
  i0smdn022ab1n03x4 U65 ( .b(n59), .a(n60), .sa(BIST_HOLD_R_INT), .o1(n129) );
  i0sinv030ab1n04x5 U66 ( .a(n45), .o1(n47) );
  i0snano32ab1n03x7 U67 ( .b(n47), .c(n38), .d(BIST_COLLAR_OPSET_SELECT), .a(
        n2), .out0(n34) );
  i0snor042ab1n03x5 U68 ( .a(n31), .b(n44), .o1(n32) );
  i0snanp02ab1n06x5 U69 ( .a(n38), .b(OPSET_SELECT_DECODED[0]), .o1(n54) );
  i0sinv030ab1n04x5 U70 ( .a(n54), .o1(n35) );
  i0soai013ab1n03x5 U71 ( .b(n1), .c(n36), .d(n32), .a(n35), .o1(n33) );
  i0snanb02ab1n03x5 U72 ( .a(n34), .b(n33), .out0(n57) );
  i0snanb02ab1n03x5 U73 ( .a(n52), .b(n39), .out0(n40) );
  i0soa0012ab1n03x5 U74 ( .b(n45), .c(n44), .a(n43), .o(n53) );
  i0smdn022ab1n03x4 U75 ( .b(DEFAULT_STROBEDATAOUT_PIPE_0_), .a(n57), .sa(
        BIST_COLLAR_OPSET_SELECT), .o1(n58) );
  i0saoi012ab1n06x5 U76 ( .b(n8), .c(LV_TM), .a(n58), .o1(BIST_CMP) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_fsm ( BIST_CLK, BIST_ON, 
        BIST_HOLD_R, BYPASS_RUN_STATE, BIST_ASYNC_RESETN, 
        LAST_STATE_DONE_PIPELINED, PAUSETOEND_ALGO_MODE, SETUP_PULSE1, 
        SETUP_PULSE2, BIST_INIT, BIST_RUN, BIST_RUN_PIPE, BIST_DONE, 
        BIST_IDLE_PULSE, BIST_IDLE );
  input BIST_CLK, BIST_ON, BIST_HOLD_R, BYPASS_RUN_STATE, BIST_ASYNC_RESETN,
         LAST_STATE_DONE_PIPELINED, PAUSETOEND_ALGO_MODE;
  output SETUP_PULSE1, SETUP_PULSE2, BIST_INIT, BIST_RUN, BIST_RUN_PIPE,
         BIST_DONE, BIST_IDLE_PULSE, BIST_IDLE;
  wire   PAUSETOEND_ALGO_MODE_REG, RESET, STATE_2_, STATE_1_, STATE_0_,
         RUNTEST_EN_REG_2_, RUNTEST_EN_REG_1_, RUNTEST_EN_REG_0_, N39, n29,
         n30, n3, n4, n7, n8, n11, n12, n15, n16, n19, n20, n23, n24, n27, n28,
         n1, n2, n5, n6, n9, n10, n13, n14, n17, n18, n21, n22, n25, n26, n31,
         n32, n33, n34, n35, n36, n37, n38, n390, n40, n41,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8;

  i0sfvz003ab1d03x6 STATE_reg_2 ( .si(n30), .d(n23), .ssb(n29), .clk(BIST_CLK), 
        .rb(n5), .o(STATE_2_), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 RUNTEST_EN_REG_reg_3 ( .si(n30), .d(n3), .ssb(n29), .clk(
        BIST_CLK), .rb(n5), .o(BIST_RUN_PIPE), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvp003ab1d18x5 STATE_reg_1 ( .si(n30), .d(n27), .ssb(n29), .clk(BIST_CLK), 
        .rb(n5), .o(STATE_1_), .so(SYNOPSYS_UNCONNECTED_3) );
  i0snorb02ab1n03x4 U18 ( .a(n12), .b(RESET), .out0(n11) );
  i0snorb02ab1n03x4 U15 ( .a(n8), .b(RESET), .out0(n7) );
  i0snorb02ab1n03x4 U12 ( .a(n4), .b(RESET), .out0(n3) );
  i0snorb02ab1n03x4 U30 ( .a(n28), .b(RESET), .out0(n27) );
  i0snorb02ab1n03x4 U21 ( .a(n16), .b(RESET), .out0(n15) );
  i0snorb02ab1n03x4 U24 ( .a(n20), .b(RESET), .out0(n19) );
  i0snorb02ab1n03x4 U27 ( .a(n24), .b(RESET), .out0(n23) );
  i0sfvz003ab1d02x6 RUNTEST_EN_REG_reg_0 ( .si(n30), .d(n15), .ssb(n29), .clk(
        BIST_CLK), .rb(n5), .o(RUNTEST_EN_REG_0_), .so(SYNOPSYS_UNCONNECTED_4)
         );
  i0sfvz003ab1d02x6 RUNTEST_EN_REG_reg_2 ( .si(n30), .d(n7), .ssb(n29), .clk(
        BIST_CLK), .rb(n5), .o(RUNTEST_EN_REG_2_), .so(SYNOPSYS_UNCONNECTED_5)
         );
  i0sfvz003ab1d02x6 PAUSETOEND_ALGO_MODE_REG_reg ( .si(n30), .d(N39), .ssb(n29), .clk(BIST_CLK), .rb(n5), .o(PAUSETOEND_ALGO_MODE_REG), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d02x6 RUNTEST_EN_REG_reg_1 ( .si(n30), .d(n11), .ssb(n29), .clk(
        BIST_CLK), .rb(n5), .o(RUNTEST_EN_REG_1_), .so(SYNOPSYS_UNCONNECTED_7)
         );
  i0sfvz003ab1d09x5 STATE_reg_0 ( .si(n30), .d(n19), .ssb(n29), .clk(BIST_CLK), 
        .rb(n5), .o(STATE_0_), .so(SYNOPSYS_UNCONNECTED_8) );
  i0sxnr002ab1n03x5 U3 ( .a(STATE_1_), .b(STATE_0_), .out0(n34) );
  i0sinv020ab1n02x5 U4 ( .a(STATE_0_), .o1(n36) );
  i0sinv030ab1n02x5 U5 ( .a(n36), .o1(n2) );
  i0snanb02ab1n03x5 U6 ( .a(STATE_0_), .b(STATE_1_), .out0(n17) );
  i0smbn022ab1n03x5 U7 ( .b(n25), .a(STATE_0_), .sa(n6), .o(n20) );
  i0snanb02ab1n03x5 U8 ( .a(STATE_1_), .b(STATE_0_), .out0(n38) );
  i0snor002ab1n02x5 U9 ( .a(n1), .b(n390), .o1(SETUP_PULSE2) );
  i0sinv000ab1n02x5 U10 ( .a(n38), .o1(n26) );
  i0snorp02ab1n02x5 U11 ( .a(STATE_2_), .b(n38), .o1(BIST_INIT) );
  i0sinv000ab1n03x5 U13 ( .a(n41), .o1(BIST_DONE) );
  i0saboi22ab1n03x5 U14 ( .c(STATE_1_), .d(n2), .a(n34), .b(STATE_2_), .out0(
        n1) );
  i0sxor002ab1n02x7 U16 ( .a(n34), .b(STATE_2_), .out0(n390) );
  i0sbff000ab1n02x5 U17 ( .a(BIST_ASYNC_RESETN), .o(n5) );
  i0sinv000ab1n03x5 U19 ( .a(n9), .o1(n6) );
  i0sinv020ab1n02x5 U20 ( .a(n17), .o1(n18) );
  i0soai012ab1n02x5 U22 ( .b(n6), .c(n17), .a(n31), .o1(n24) );
  i0sinv000ab1n03x5 U23 ( .a(BIST_HOLD_R), .o1(n9) );
  i0sinv000ab1n02x5 U25 ( .a(STATE_2_), .o1(n31) );
  i0snano22ab1n02x4 U26 ( .b(n1), .c(n390), .a(RESET), .out0(BIST_IDLE_PULSE)
         );
  i0snorb02ab1n02x5 U28 ( .a(STATE_2_), .b(BYPASS_RUN_STATE), .out0(n21) );
  i0sinv000ab1n03x5 U29 ( .a(RUNTEST_EN_REG_0_), .o1(n32) );
  i0sinv000ab1n02x5 U31 ( .a(BIST_RUN_PIPE), .o1(n35) );
  i0snorb02ab1n02x5 U32 ( .a(STATE_0_), .b(STATE_2_), .out0(n14) );
  i0saobi12ab1n03x5 U33 ( .b(n41), .c(n13), .a(PAUSETOEND_ALGO_MODE), .out0(
        N39) );
  i0sinv000ab1n03x5 U34 ( .a(n10), .o1(n13) );
  i0saoi012ab1n03x5 U35 ( .b(n9), .c(n10), .a(PAUSETOEND_ALGO_MODE_REG), .o1(
        RESET) );
  i0sinv000ab1n03x5 U36 ( .a(RUNTEST_EN_REG_2_), .o1(n33) );
  i0smbn022ab1n03x5 U37 ( .b(RUNTEST_EN_REG_2_), .a(RUNTEST_EN_REG_1_), .sa(n9), .o(n8) );
  i0smbn022ab1n03x5 U38 ( .b(RUNTEST_EN_REG_1_), .a(RUNTEST_EN_REG_0_), .sa(n9), .o(n12) );
  i0sbff000ab1n02x5 U39 ( .a(BIST_ON), .o(n10) );
  i0stihi00ab1n02x5 U40 ( .o(n29) );
  i0stilo00ab1n02x5 U41 ( .o(n30) );
  i0smdn022ab1n02x5 U42 ( .b(n31), .a(n21), .sa(STATE_1_), .o1(n22) );
  i0snanb04ab1n02x5 U43 ( .a(STATE_1_), .b(n36), .c(STATE_2_), .d(n35), .out0(
        n41) );
  i0smd2na2ab1n03x5 U44 ( .c(n17), .b(n14), .a(STATE_1_), .sa(n6), .out0(n28)
         );
  i0snanb02ab1n03x5 U45 ( .a(n31), .b(n18), .out0(n40) );
  i0soabi13ab1n03x5 U46 ( .c(n26), .d(LAST_STATE_DONE_PIPELINED), .a(n40), .b(
        n22), .o1(n25) );
  i0snanb02ab1n03x5 U47 ( .a(n31), .b(n26), .out0(n37) );
  i0smdn022ab1n03x4 U48 ( .b(n37), .a(n32), .sa(n6), .o1(n16) );
  i0smdn022ab1n03x4 U49 ( .b(n33), .a(n35), .sa(n6), .o1(n4) );
  i0sinv030ab1n04x5 U50 ( .a(n37), .o1(BIST_RUN) );
  i0sinv030ab1n04x5 U51 ( .a(n40), .o1(SETUP_PULSE1) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_add_gen ( BIST_CLK, 
        BIST_RUN, RESET_REG_DEFAULT_MODE, BIST_SWITCH_ADDRESS_EN, 
        BIST_ASYNC_RESETN, SI, BIST_SHIFT_SHORT, BIST_HOLD, LAST_TICK, 
        MBISTPG_REDUCED_ADDR_CNT_EN, ESOE_RESET, ADD_Y0_CMD, ADD_Y1_CMD, 
        ADD_X0_CMD, ADD_X1_CMD, BIST_Y0_COUNT_EN, BIST_X0_COUNT_EN, 
        ADD_REG_SELECT, INH_LAST_ADDR_CNT, MBISTPG_ALGO_SEL, 
        MEM_ARRAY_DUMP_MODE, SO, Y0_MINMAX_TRIGGER, Y1_MINMAX_TRIGGER, 
        X0_MINMAX_TRIGGER, X1_MINMAX_TRIGGER, X_ADDRESS, Y_ADDRESS, 
        A_EQUALS_B_TRIGGER );
  input [1:0] ADD_Y0_CMD;
  input [2:0] ADD_Y1_CMD;
  input [1:0] ADD_X0_CMD;
  input [2:0] ADD_X1_CMD;
  input [2:0] ADD_REG_SELECT;
  output [7:0] X_ADDRESS;
  output [2:0] Y_ADDRESS;
  input BIST_CLK, BIST_RUN, RESET_REG_DEFAULT_MODE, BIST_SWITCH_ADDRESS_EN,
         BIST_ASYNC_RESETN, SI, BIST_SHIFT_SHORT, BIST_HOLD, LAST_TICK,
         MBISTPG_REDUCED_ADDR_CNT_EN, ESOE_RESET, BIST_Y0_COUNT_EN,
         BIST_X0_COUNT_EN, INH_LAST_ADDR_CNT, MBISTPG_ALGO_SEL,
         MEM_ARRAY_DUMP_MODE;
  output SO, Y0_MINMAX_TRIGGER, Y1_MINMAX_TRIGGER, X0_MINMAX_TRIGGER,
         X1_MINMAX_TRIGGER, A_EQUALS_B_TRIGGER;
  wire   AX_ADD_REG_7_, AX_ADD_REG_6_, AX_ADD_REG_5_, AX_ADD_REG_4_,
         AX_ADD_REG_3_, AX_ADD_REG_2_, AX_ADD_REG_1_, AX_ADD_REG_0_,
         BX_ADD_REG_6_, BX_ADD_REG_5_, BX_ADD_REG_4_, BX_ADD_REG_3_,
         BX_ADD_REG_2_, BX_ADD_REG_1_, BX_ADD_REG_0_, AY_ADD_REG_2_,
         AY_ADD_REG_1_, AY_ADD_REG_0_, BY_ADD_REG_2_, BY_ADD_REG_1_,
         BY_ADD_REG_0_, Y_R_2_, Y_R_1_, Y_R_0_, X_R_7_, X_R_6_, X_R_5_, X_R_4_,
         X_R_3_, X_R_2_, X_R_1_, X_R_0_, n276, n277, n215, n218, n221, n224,
         n227, n230, n233, n236, n239, n242, n245, n248, n251, n254, n257,
         n260, n263, n266, n269, n272, n278, n1, n2, n3, n5, n6, n7, n8, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73,
         n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87,
         n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144,
         n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155,
         n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166,
         n167, n168, n169, n170, n171, n172, n173, n174, n175, n176, n177,
         n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, n188,
         n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n201,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23;

  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_0 ( .a(X_ADDRESS[0]), 
        .o(X_R_0_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_1 ( .a(X_ADDRESS[1]), 
        .o(X_R_1_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_2 ( .a(X_ADDRESS[2]), 
        .o(X_R_2_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_3 ( .a(X_ADDRESS[3]), 
        .o(X_R_3_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_4 ( .a(X_ADDRESS[4]), 
        .o(X_R_4_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_5 ( .a(X_ADDRESS[5]), 
        .o(X_R_5_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_6 ( .a(X_ADDRESS[6]), 
        .o(X_R_6_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X_ADD_CNT_7 ( .a(X_ADDRESS[7]), 
        .o(X_R_7_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_Y_ADD_CNT_0 ( .a(Y_ADDRESS[0]), 
        .o(Y_R_0_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_Y_ADD_CNT_1 ( .a(Y_ADDRESS[1]), 
        .o(Y_R_1_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_Y_ADD_CNT_2 ( .a(Y_ADDRESS[2]), 
        .o(Y_R_2_) );
  i0sfvz003ab1d03x6 BY_ADD_REG_reg_0 ( .si(n277), .d(n278), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(BY_ADD_REG_0_), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 AX_ADD_REG_reg_7 ( .si(n277), .d(n272), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_7_), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 AX_ADD_REG_reg_6 ( .si(n277), .d(n269), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_6_), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 AX_ADD_REG_reg_3 ( .si(n277), .d(n260), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_3_), .so(SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 AX_ADD_REG_reg_1 ( .si(n277), .d(n254), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_1_), .so(SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 BX_ADD_REG_reg_3 ( .si(n277), .d(n239), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_3_), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 BX_ADD_REG_reg_6 ( .si(n277), .d(n230), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_6_), .so(SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 BX_ADD_REG_reg_7 ( .si(n277), .d(n227), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(SO), .so(SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 BY_ADD_REG_reg_1 ( .si(n277), .d(n224), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(BY_ADD_REG_1_), .so(SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 AY_ADD_REG_reg_1 ( .si(n277), .d(n221), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AY_ADD_REG_1_), .so(SYNOPSYS_UNCONNECTED_10)
         );
  i0sfvz003ab1d03x6 AY_ADD_REG_reg_2 ( .si(n277), .d(n218), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AY_ADD_REG_2_), .so(SYNOPSYS_UNCONNECTED_11)
         );
  i0sfvz003ab1d03x6 BY_ADD_REG_reg_2 ( .si(n277), .d(n215), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(BY_ADD_REG_2_), .so(SYNOPSYS_UNCONNECTED_12)
         );
  i0sfvz003ab1d09x5 BX_ADD_REG_reg_2 ( .si(n277), .d(n242), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_2_), .so(SYNOPSYS_UNCONNECTED_13)
         );
  i0sfvz003ab1d09x5 AX_ADD_REG_reg_5 ( .si(n277), .d(n266), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_5_), .so(SYNOPSYS_UNCONNECTED_14)
         );
  i0sfvz003ab1d09x5 BX_ADD_REG_reg_0 ( .si(n277), .d(n248), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_0_), .so(SYNOPSYS_UNCONNECTED_15)
         );
  i0sfvz003ab1d09x5 AY_ADD_REG_reg_0 ( .si(n277), .d(n201), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AY_ADD_REG_0_), .so(SYNOPSYS_UNCONNECTED_16)
         );
  i0sfvz003ab1d12x5 AX_ADD_REG_reg_4 ( .si(n277), .d(n263), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_4_), .so(SYNOPSYS_UNCONNECTED_17)
         );
  i0sfvz003ab1d12x5 AX_ADD_REG_reg_2 ( .si(n277), .d(n257), .ssb(n276), .clk(
        BIST_CLK), .rb(n17), .o(AX_ADD_REG_2_), .so(SYNOPSYS_UNCONNECTED_18)
         );
  i0sfvz003ab1d09x5 AX_ADD_REG_reg_0 ( .si(n277), .d(n251), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(AX_ADD_REG_0_), .so(SYNOPSYS_UNCONNECTED_19)
         );
  i0sfvz003ab1d09x5 BX_ADD_REG_reg_4 ( .si(n277), .d(n236), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_4_), .so(SYNOPSYS_UNCONNECTED_20)
         );
  i0sfvz003ab1d09x5 BX_ADD_REG_reg_5 ( .si(n277), .d(n233), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_5_), .so(SYNOPSYS_UNCONNECTED_21)
         );
  i0sfvz003ab1d09x5 BX_ADD_REG_reg_1 ( .si(n277), .d(n245), .ssb(n276), .clk(
        BIST_CLK), .rb(n18), .o(BX_ADD_REG_1_), .so(SYNOPSYS_UNCONNECTED_22)
         );
  i0snona22ab1n06x5 U3 ( .b(n23), .c(n37), .a(ADD_X1_CMD[0]), .out0(n194) );
  i0snano22ab1n02x4 U4 ( .b(ADD_Y1_CMD[0]), .c(ADD_Y1_CMD[2]), .a(
        ADD_Y1_CMD[1]), .out0(n43) );
  i0snona32ab1n03x5 U5 ( .b(n66), .c(n42), .d(ADD_Y1_CMD[2]), .a(ADD_Y1_CMD[0]), .out0(n197) );
  i0sinv040ab1n06x5 U6 ( .a(n102), .o1(n106) );
  i0snanb02ab1n02x5 U7 ( .a(n132), .b(AX_ADD_REG_5_), .out0(n111) );
  i0sinv040ab1n03x5 U8 ( .a(n107), .o1(n112) );
  i0sxo2na2ab1n06x5 U9 ( .c(n106), .a(n24), .b(X_R_4_), .out0(n107) );
  i0sxo2na2ab1n06x5 U10 ( .c(n112), .a(n24), .b(X_R_5_), .out0(n113) );
  i0soai122ab1n02x7 U11 ( .b(n142), .c(n179), .d(n6), .e(n143), .a(n141), .o1(
        n224) );
  i0snorp02ab1n03x5 U12 ( .a(n175), .b(n158), .o1(n159) );
  i0soai012ab1n03x5 U13 ( .b(n179), .c(n167), .a(n166), .o1(n236) );
  i0snanp02ab1n06x5 U14 ( .a(n2), .b(n3), .o1(n81) );
  i0sand002ab1n02x5 U15 ( .a(n40), .b(n69), .o(n1) );
  i0snand03ab1n03x5 U16 ( .a(n82), .b(LAST_TICK), .c(n138), .o1(n2) );
  i0sinv000ab1n02x5 U17 ( .a(n168), .o1(n3) );
  i0sinv020ab1n03x5 U18 ( .a(n29), .o1(n82) );
  i0sinv000ab1n06x5 U19 ( .a(INH_LAST_ADDR_CNT), .o1(n138) );
  i0sinv020ab1n08x5 U20 ( .a(n184), .o1(n168) );
  i0snanp03ab1n06x5 U21 ( .a(n152), .b(n138), .c(LAST_TICK), .o1(n139) );
  i0sao0013ab1n02x5 U22 ( .b(n197), .c(n198), .d(n74), .a(n193), .o(n80) );
  i0sinv000ab1n06x5 U23 ( .a(n179), .o1(n189) );
  i0sinv030ab1n02x5 U24 ( .a(n54), .o1(n122) );
  i0snand02ab1n02x5 U25 ( .a(MBISTPG_ALGO_SEL), .b(MBISTPG_REDUCED_ADDR_CNT_EN), .o1(n54) );
  i0sinv030ab1n02x5 U26 ( .a(n81), .o1(n50) );
  i0sinv000ab1n03x5 U27 ( .a(n20), .o1(n21) );
  i0snor022ab1n02x5 U28 ( .a(MBISTPG_ALGO_SEL), .b(Y_R_2_), .o1(n8) );
  i0sorn003ab1n03x7 U29 ( .a(Y_R_1_), .b(Y_R_2_), .c(Y_R_0_), .o(n42) );
  i0snona32ab1n02x5 U30 ( .b(BIST_HOLD), .c(n20), .d(n137), .a(n136), .out0(
        n147) );
  i0sinv030ab1n02x5 U31 ( .a(n62), .o1(n144) );
  i0sinv030ab1n02x5 U32 ( .a(n98), .o1(n163) );
  i0snanb02ab1n12x5 U33 ( .a(n21), .b(n136), .out0(n184) );
  i0sinv020ab1n02x5 U34 ( .a(n191), .o1(X_ADDRESS[6]) );
  i0soaib13ab1n03x5 U35 ( .d(n189), .c(n153), .a(n151), .b(n150), .o1(n248) );
  i0sinv000ab1n06x5 U36 ( .a(ADD_Y1_CMD[0]), .o1(n69) );
  i0smbn022ab1n06x5 U37 ( .b(AX_ADD_REG_7_), .a(SO), .sa(ADD_REG_SELECT[1]), 
        .o(X_ADDRESS[7]) );
  i0sinv000ab1n02x5 U38 ( .a(n37), .o1(n76) );
  i0sinv040ab1n03x5 U39 ( .a(n119), .o1(n114) );
  i0sinv040ab1n06x5 U40 ( .a(n97), .o1(n101) );
  i0snor022ab1n02x5 U41 ( .a(n117), .b(n116), .o1(n118) );
  i0sinv000ab1n03x5 U42 ( .a(n109), .o1(n117) );
  i0soai302ab1n02x7 U43 ( .d(n126), .e(n108), .a(n111), .b(n110), .c(n109), 
        .o1(n266) );
  i0snor002ab1n02x5 U44 ( .a(n117), .b(n104), .o1(n105) );
  i0snor002ab1n02x5 U45 ( .a(n117), .b(n94), .o1(n95) );
  i0soai222ab1n02x7 U46 ( .a(n6), .b(n148), .c(n144), .d(n179), .e(n184), .f(
        n143), .o1(n215) );
  i0sxo2na2ab1n06x5 U47 ( .c(n96), .a(n24), .b(X_R_2_), .out0(n97) );
  i0sxo2na2ab1n06x5 U48 ( .c(n101), .a(n24), .b(X_R_3_), .out0(n102) );
  i0sinv040ab1n03x5 U49 ( .a(n108), .o1(n172) );
  i0snana24ab1n03x5 U50 ( .d(n85), .e(n5), .a(n84), .b(n83), .c(n109), .out0(
        n251) );
  i0sinv030ab1n04x5 U51 ( .a(n126), .o1(n134) );
  i0sxor002ab1n03x5 U52 ( .a(X_R_1_), .b(n90), .out0(n87) );
  i0sxo2na2ab1n06x5 U53 ( .c(n86), .a(n24), .b(X_R_0_), .out0(n90) );
  i0sinv040ab1n03x5 U54 ( .a(n92), .o1(n96) );
  i0sxo2na2ab1n06x5 U55 ( .c(n91), .a(n24), .b(X_R_1_), .out0(n92) );
  i0snor002ab1n02x5 U56 ( .a(n126), .b(n119), .o1(n85) );
  i0snanb02ab1n12x5 U57 ( .a(n50), .b(n82), .out0(n126) );
  i0soai222ab1n02x7 U58 ( .a(n180), .b(n126), .c(n184), .d(n125), .e(n183), 
        .f(n132), .o1(n272) );
  i0sorn002ab1n12x5 U59 ( .a(n140), .b(n81), .o(n132) );
  i0snanb03ab1n02x5 U60 ( .a(n140), .b(n184), .c(n139), .out0(n7) );
  i0snand03ab1n03x5 U61 ( .a(MBISTPG_REDUCED_ADDR_CNT_EN), .b(Y_R_2_), .c(
        MBISTPG_ALGO_SEL), .o1(n67) );
  i0snanb03ab1n03x5 U62 ( .a(n140), .b(n184), .c(n139), .out0(n182) );
  i0smdn022ab1n02x4 U63 ( .b(n149), .a(BX_ADD_REG_0_), .sa(n185), .o1(n150) );
  i0snor022ab1n02x5 U64 ( .a(n175), .b(n165), .o1(n166) );
  i0snor022ab1n02x5 U65 ( .a(n175), .b(n174), .o1(n176) );
  i0soai013ab1n02x5 U66 ( .b(ADD_X1_CMD[0]), .c(n196), .d(n195), .a(n194), 
        .o1(X1_MINMAX_TRIGGER) );
  i0snanp02ab1n03x5 U67 ( .a(n198), .b(n197), .o1(Y1_MINMAX_TRIGGER) );
  i0soai012ab1n02x7 U68 ( .b(n177), .c(n126), .a(n118), .o1(n269) );
  i0soai012ab1n02x7 U69 ( .b(n167), .c(n126), .a(n105), .o1(n263) );
  i0sbfn000ab1n06x5 U70 ( .a(ADD_X1_CMD[0]), .o(n24) );
  i0soai222ab1n02x7 U71 ( .a(n144), .b(n126), .c(n184), .d(n64), .e(n132), .f(
        n63), .o1(n218) );
  i0soai012ab1n02x7 U72 ( .b(n160), .c(n126), .a(n95), .o1(n257) );
  i0sinv020ab1n03x5 U73 ( .a(n147), .o1(n152) );
  i0sinv040ab1n03x5 U74 ( .a(n169), .o1(n175) );
  i0snanb03ab1n06x5 U75 ( .a(n140), .b(n184), .c(n139), .out0(n6) );
  i0sinv000ab1n03x5 U76 ( .a(n38), .o1(n23) );
  i0smkn022ab1n04x5 U77 ( .b(AX_ADD_REG_1_), .a(BX_ADD_REG_1_), .sa(
        ADD_REG_SELECT[1]), .o(X_ADDRESS[1]) );
  i0sinv040ab1n03x5 U78 ( .a(n90), .o1(n91) );
  i0snand43ab1n02x5 U79 ( .a(n129), .b(n48), .c(n47), .o1(n130) );
  i0snanp02ab1n02x5 U80 ( .a(AX_ADD_REG_0_), .b(n168), .o1(n88) );
  i0snanp02ab1n02x5 U81 ( .a(AX_ADD_REG_2_), .b(n168), .o1(n99) );
  i0snanp02ab1n02x5 U82 ( .a(AX_ADD_REG_4_), .b(n168), .o1(n110) );
  i0snorp02ab1n02x5 U83 ( .a(n184), .b(n183), .o1(n186) );
  i0snanp02ab1n02x5 U84 ( .a(BX_ADD_REG_4_), .b(n168), .o1(n171) );
  i0snanp02ab1n02x5 U85 ( .a(BX_ADD_REG_5_), .b(n185), .o1(n170) );
  i0snanp02ab1n02x5 U86 ( .a(BX_ADD_REG_2_), .b(n168), .o1(n162) );
  i0snanp02ab1n02x5 U87 ( .a(BX_ADD_REG_3_), .b(n185), .o1(n161) );
  i0snanp02ab1n02x5 U88 ( .a(BX_ADD_REG_0_), .b(n168), .o1(n155) );
  i0snanp02ab1n02x5 U89 ( .a(n185), .b(BX_ADD_REG_1_), .o1(n154) );
  i0snanp02ab1n02x5 U90 ( .a(BY_ADD_REG_0_), .b(n168), .o1(n141) );
  i0sxor032ab1n02x5 U91 ( .a(n55), .b(Y_R_1_), .out0(n49) );
  i0smkn022ab1n04x5 U92 ( .b(AY_ADD_REG_1_), .a(BY_ADD_REG_1_), .sa(
        ADD_REG_SELECT[1]), .o(Y_ADDRESS[1]) );
  i0smkn022ab1n04x5 U93 ( .b(AX_ADD_REG_4_), .a(BX_ADD_REG_4_), .sa(
        ADD_REG_SELECT[1]), .o(X_ADDRESS[4]) );
  i0smkn022ab1n04x5 U94 ( .b(AY_ADD_REG_2_), .a(BY_ADD_REG_2_), .sa(
        ADD_REG_SELECT[1]), .o(Y_ADDRESS[2]) );
  i0smkn022ab1n04x5 U95 ( .b(AY_ADD_REG_0_), .a(BY_ADD_REG_0_), .sa(
        ADD_REG_SELECT[1]), .o(Y_ADDRESS[0]) );
  i0smkn022ab1n04x5 U96 ( .b(AX_ADD_REG_5_), .a(BX_ADD_REG_5_), .sa(
        ADD_REG_SELECT[1]), .o(X_ADDRESS[5]) );
  i0smkn022ab1n04x5 U97 ( .b(AX_ADD_REG_2_), .a(BX_ADD_REG_2_), .sa(
        ADD_REG_SELECT[1]), .o(X_ADDRESS[2]) );
  i0smkn022ab1n04x5 U98 ( .b(AX_ADD_REG_3_), .a(BX_ADD_REG_3_), .sa(
        ADD_REG_SELECT[1]), .o(X_ADDRESS[3]) );
  i0sinv000ab1n02x5 U99 ( .a(Y_R_0_), .o1(n128) );
  i0snanb02ab1n12x5 U100 ( .a(n147), .b(n6), .out0(n179) );
  i0sinv040ab1n03x5 U101 ( .a(n55), .o1(n58) );
  i0sinv000ab1n02x5 U102 ( .a(n68), .o1(n40) );
  i0snand22ab1n03x5 U103 ( .a(n33), .b(n192), .o1(n77) );
  i0sinv000ab1n02x5 U104 ( .a(n196), .o1(n33) );
  i0snorp02ab1n02x5 U105 ( .a(n184), .b(n148), .o1(n149) );
  i0sinv000ab1n02x5 U106 ( .a(AX_ADD_REG_1_), .o1(n93) );
  i0sinv000ab1n02x5 U107 ( .a(AX_ADD_REG_3_), .o1(n103) );
  i0sinv000ab1n02x5 U108 ( .a(AX_ADD_REG_5_), .o1(n115) );
  i0sinv020ab1n02x5 U109 ( .a(n67), .o1(n72) );
  i0sorn002ab1n02x5 U110 ( .a(MBISTPG_REDUCED_ADDR_CNT_EN), .b(Y_R_2_), .o(n70) );
  i0sinv000ab1n02x5 U111 ( .a(AY_ADD_REG_1_), .o1(n64) );
  i0sinv000ab1n02x5 U112 ( .a(AY_ADD_REG_2_), .o1(n63) );
  i0smdn022ab1n02x4 U113 ( .b(n186), .a(BY_ADD_REG_0_), .sa(n185), .o1(n187)
         );
  i0snanb02ab1n02x5 U114 ( .a(n132), .b(AX_ADD_REG_0_), .out0(n84) );
  i0snanb02ab1n02x5 U115 ( .a(n132), .b(AX_ADD_REG_1_), .out0(n89) );
  i0snanb02ab1n02x5 U116 ( .a(n132), .b(AX_ADD_REG_3_), .out0(n100) );
  i0sinv000ab1n02x5 U117 ( .a(n132), .o1(n133) );
  i0sinv000ab1n02x5 U118 ( .a(BX_ADD_REG_5_), .o1(n173) );
  i0sinv000ab1n02x5 U119 ( .a(BX_ADD_REG_3_), .o1(n164) );
  i0sinv000ab1n02x5 U120 ( .a(BX_ADD_REG_1_), .o1(n157) );
  i0sinv020ab1n02x5 U121 ( .a(n135), .o1(n142) );
  i0snorp02ab1n02x5 U122 ( .a(n122), .b(n153), .o1(n123) );
  i0sinv040ab1n03x5 U123 ( .a(n113), .o1(n121) );
  i0snanb02ab1n02x5 U124 ( .a(n8), .b(n67), .out0(n46) );
  i0sinv000ab1n02x5 U125 ( .a(ADD_REG_SELECT[1]), .o1(n27) );
  i0sinv000ab1n02x5 U126 ( .a(BIST_RUN), .o1(n28) );
  i0sinv040ab1n03x5 U127 ( .a(n39), .o1(n56) );
  i0sxord22ab1n02x5 U128 ( .a(n24), .b(X_R_6_), .oxnr(SYNOPSYS_UNCONNECTED_23), 
        .oxor(n120) );
  i0sxord22ab1n02x5 U129 ( .a(n80), .b(X_R_0_), .oxnr(n5), .oxor(n145) );
  i0sbff000ab1n02x5 U130 ( .a(n19), .o(n17) );
  i0sbff000ab1n02x5 U131 ( .a(n19), .o(n18) );
  i0sbff000ab1n02x5 U132 ( .a(BIST_ASYNC_RESETN), .o(n19) );
  i0sbff000ab1n02x5 U133 ( .a(BIST_SHIFT_SHORT), .o(n20) );
  i0sinv020ab1n02x5 U134 ( .a(n73), .o1(n74) );
  i0sinv000ab1n03x5 U135 ( .a(n182), .o1(n185) );
  i0soai012ab1n02x5 U136 ( .b(n131), .c(n130), .a(n129), .o1(n188) );
  i0sxor002ab1n02x5 U137 ( .a(n128), .b(n127), .out0(n131) );
  i0sinv000ab1n02x5 U138 ( .a(n42), .o1(n65) );
  i0sinv000ab1n02x5 U139 ( .a(ADD_Y1_CMD[1]), .o1(n66) );
  i0sinv000ab1n02x5 U140 ( .a(SO), .o1(n181) );
  i0sinv000ab1n02x5 U141 ( .a(BX_ADD_REG_6_), .o1(n178) );
  i0snanb03ab1n03x5 U142 ( .a(n53), .b(n52), .c(n51), .out0(n221) );
  i0snor002ab1n02x5 U143 ( .a(n184), .b(n26), .o1(n53) );
  i0sinv000ab1n02x5 U144 ( .a(AX_ADD_REG_6_), .o1(n125) );
  i0soai012ab1n02x7 U145 ( .b(n179), .c(n177), .a(n176), .o1(n230) );
  i0soai012ab1n02x7 U146 ( .b(n179), .c(n160), .a(n159), .o1(n242) );
  i0snona23ab1n02x4 U147 ( .c(n147), .d(n145), .a(n146), .b(n7), .out0(n151)
         );
  i0sxor002ab1n02x7 U148 ( .a(n54), .b(X_R_7_), .out0(n196) );
  i0snanp02ab1n02x5 U149 ( .a(MBISTPG_REDUCED_ADDR_CNT_EN), .b(n65), .o1(n44)
         );
  i0sinv000ab1n02x5 U150 ( .a(Y_R_2_), .o1(n59) );
  i0soai012ab1n02x5 U151 ( .b(n130), .c(n49), .a(n129), .o1(n135) );
  i0saoi033ab1n02x5 U152 ( .a(MBISTPG_REDUCED_ADDR_CNT_EN), .b(n76), .c(n86), 
        .d(n24), .e(n75), .f(ADD_X1_CMD[2]), .o1(n153) );
  i0sinv000ab1n02x5 U153 ( .a(ADD_X1_CMD[1]), .o1(n75) );
  i0snanp03ab1n02x5 U154 ( .a(n86), .b(MBISTPG_REDUCED_ADDR_CNT_EN), .c(n78), 
        .o1(n79) );
  i0sinv000ab1n02x5 U155 ( .a(n77), .o1(n78) );
  i0snanp02ab1n02x5 U156 ( .a(X_R_3_), .b(X_R_2_), .o1(n31) );
  i0snanp02ab1n02x5 U157 ( .a(X_R_1_), .b(X_R_0_), .o1(n30) );
  i0snanp03ab1n02x5 U158 ( .a(X_R_4_), .b(X_R_6_), .c(X_R_5_), .o1(n32) );
  i0snanp02ab1n02x5 U159 ( .a(ADD_REG_SELECT[1]), .b(BIST_RUN), .o1(n137) );
  i0snorp02ab1n02x5 U160 ( .a(n87), .b(n119), .o1(n156) );
  i0sinv000ab1n02x5 U161 ( .a(BY_ADD_REG_2_), .o1(n148) );
  i0sinv000ab1n02x5 U162 ( .a(AX_ADD_REG_7_), .o1(n183) );
  i0sinv000ab1n02x5 U163 ( .a(BY_ADD_REG_1_), .o1(n143) );
  i0sinv000ab1n02x5 U164 ( .a(AY_ADD_REG_0_), .o1(n26) );
  i0stihi00ab1n02x5 U165 ( .o(n276) );
  i0stilo00ab1n02x5 U166 ( .o(n277) );
  i0snanb02ab1n02x5 U167 ( .a(ADD_REG_SELECT[1]), .b(MBISTPG_ALGO_SEL), .out0(
        n73) );
  i0snona24ab1n06x5 U168 ( .d(n72), .e(n8), .a(n69), .b(n70), .c(n71), .out0(
        n198) );
  i0snanb03ab1n02x5 U169 ( .a(ADD_Y1_CMD[2]), .b(ADD_Y1_CMD[1]), .c(
        ADD_Y1_CMD[0]), .out0(n39) );
  i0snona22ab1n02x5 U170 ( .b(n23), .c(n37), .a(n24), .out0(n22) );
  i0snanb03ab1n03x5 U171 ( .a(n153), .b(n82), .c(n81), .out0(n109) );
  i0soai013ab1n02x5 U172 ( .b(n24), .c(n193), .d(n77), .a(n22), .o1(n41) );
  i0soai222ab1n03x5 U173 ( .a(n7), .b(n181), .c(n180), .d(n179), .e(n184), .f(
        n178), .o1(n227) );
  i0snanb03ab1n03x5 U174 ( .a(n153), .b(n152), .c(n182), .out0(n169) );
  i0sinv030ab1n04x5 U175 ( .a(ESOE_RESET), .o1(n25) );
  i0soaib12ab1n06x5 U176 ( .c(RESET_REG_DEFAULT_MODE), .b(MEM_ARRAY_DUMP_MODE), 
        .a(n25), .out0(n140) );
  i0sinv030ab1n04x5 U177 ( .a(n140), .o1(n136) );
  i0snona24ab1n03x5 U178 ( .d(n28), .e(BIST_HOLD), .a(n136), .b(n21), .c(n27), 
        .out0(n29) );
  i0snanb02ab1n03x5 U179 ( .a(ADD_X1_CMD[2]), .b(ADD_X1_CMD[1]), .out0(n193)
         );
  i0snor043ab1n03x5 U180 ( .a(n32), .b(n31), .c(n30), .o1(n192) );
  i0sinv030ab1n04x5 U181 ( .a(n193), .o1(n38) );
  i0snor042ab1n03x5 U182 ( .a(X_R_3_), .b(X_R_2_), .o1(n36) );
  i0snor042ab1n03x5 U183 ( .a(X_R_5_), .b(X_R_4_), .o1(n35) );
  i0snor042ab1n03x5 U184 ( .a(X_R_7_), .b(X_R_6_), .o1(n34) );
  i0snona24ab1n03x5 U185 ( .d(X_R_1_), .e(X_R_0_), .a(n36), .b(n35), .c(n34), 
        .out0(n37) );
  i0snanb02ab1n03x5 U186 ( .a(ADD_Y1_CMD[2]), .b(ADD_Y1_CMD[1]), .out0(n68) );
  i0sobai22ab1n03x5 U187 ( .a(n73), .b(n41), .c(n56), .d(n1), .out0(n45) );
  i0soabi12ab1n06x5 U188 ( .b(n45), .c(n44), .a(n43), .out0(n61) );
  i0sinv030ab1n04x5 U189 ( .a(n61), .o1(n129) );
  i0sinv030ab1n04x5 U190 ( .a(n45), .o1(n127) );
  i0snona24ab1n03x5 U191 ( .d(n128), .e(n46), .a(MBISTPG_REDUCED_ADDR_CNT_EN), 
        .b(Y_R_1_), .c(n127), .out0(n48) );
  i0snanb02ab1n03x5 U192 ( .a(ADD_Y1_CMD[1]), .b(ADD_Y1_CMD[2]), .out0(n47) );
  i0smd2na2ab1n03x5 U193 ( .c(n127), .b(n1), .a(n56), .sa(Y_R_0_), .out0(n55)
         );
  i0snanb02ab1n03x5 U194 ( .a(n126), .b(n135), .out0(n52) );
  i0snanb02ab1n03x5 U195 ( .a(n132), .b(AY_ADD_REG_1_), .out0(n51) );
  i0smdn022ab1n03x4 U196 ( .b(n1), .a(n56), .sa(Y_R_1_), .o1(n57) );
  i0sxorna2ab1n03x5 U197 ( .a(n59), .c(n58), .b(n57), .out0(n60) );
  i0sobai22ab1n03x5 U198 ( .a(n61), .b(n122), .c(n130), .d(n60), .out0(n62) );
  i0snano22ab1n03x7 U199 ( .b(Y_R_1_), .c(Y_R_0_), .a(n68), .out0(n71) );
  i0sinv030ab1n04x5 U200 ( .a(n80), .o1(n86) );
  i0snanb02ab1n03x5 U201 ( .a(ADD_X1_CMD[1]), .b(ADD_X1_CMD[2]), .out0(n146)
         );
  i0snand03ab1n04x5 U202 ( .a(n153), .b(n79), .c(n146), .o1(n119) );
  i0snanb02ab1n03x5 U203 ( .a(n184), .b(AY_ADD_REG_2_), .out0(n83) );
  i0snana24ab1n03x5 U204 ( .d(n134), .e(n156), .a(n89), .b(n88), .c(n109), 
        .out0(n254) );
  i0sxo2na2ab1n03x5 U205 ( .c(n114), .a(X_R_2_), .b(n96), .out0(n160) );
  i0sobai22ab1n03x5 U206 ( .a(AX_ADD_REG_2_), .b(n132), .c(n184), .d(n93), 
        .out0(n94) );
  i0sxo2na2ab1n03x5 U207 ( .c(n114), .a(X_R_3_), .b(n101), .out0(n98) );
  i0snana24ab1n03x5 U208 ( .d(n134), .e(n163), .a(n100), .b(n99), .c(n109), 
        .out0(n260) );
  i0sxo2na2ab1n03x5 U209 ( .c(n114), .a(X_R_4_), .b(n106), .out0(n167) );
  i0sobai22ab1n03x5 U210 ( .a(AX_ADD_REG_4_), .b(n132), .c(n184), .d(n103), 
        .out0(n104) );
  i0sxo2na2ab1n03x5 U211 ( .c(n114), .a(X_R_5_), .b(n112), .out0(n108) );
  i0sxo2na2ab1n03x5 U212 ( .c(n114), .a(X_R_6_), .b(n121), .out0(n177) );
  i0sobai22ab1n03x5 U213 ( .a(AX_ADD_REG_6_), .b(n132), .c(n184), .d(n115), 
        .out0(n116) );
  i0sxorna2ab1n03x5 U214 ( .a(X_R_7_), .c(n121), .b(n120), .out0(n124) );
  i0saoi012ab1n06x5 U215 ( .b(n114), .c(n124), .a(n123), .o1(n180) );
  i0smbc003ab1n03x7 U216 ( .a(n134), .sa(n188), .b(SI), .sb(n168), .c(
        AY_ADD_REG_0_), .sc(n133), .o(n201) );
  i0snana24ab1n03x5 U217 ( .d(n156), .e(n189), .a(n155), .b(n154), .c(n169), 
        .out0(n245) );
  i0sobai22ab1n03x5 U218 ( .a(BX_ADD_REG_2_), .b(n7), .c(n184), .d(n157), 
        .out0(n158) );
  i0snana24ab1n03x5 U219 ( .d(n163), .e(n189), .a(n162), .b(n161), .c(n169), 
        .out0(n239) );
  i0sobai22ab1n03x5 U220 ( .a(BX_ADD_REG_4_), .b(n6), .c(n184), .d(n164), 
        .out0(n165) );
  i0snana24ab1n03x5 U221 ( .d(n172), .e(n189), .a(n171), .b(n170), .c(n169), 
        .out0(n233) );
  i0sobai22ab1n03x5 U222 ( .a(BX_ADD_REG_6_), .b(n7), .c(n184), .d(n173), 
        .out0(n174) );
  i0saob012ab1n03x5 U223 ( .b(n189), .c(n188), .a(n187), .out0(n278) );
  i0smdn022ab1n03x4 U224 ( .b(AX_ADD_REG_0_), .a(BX_ADD_REG_0_), .sa(
        ADD_REG_SELECT[1]), .o1(n190) );
  i0sinv030ab1n04x5 U225 ( .a(n190), .o1(X_ADDRESS[0]) );
  i0smdn022ab1n03x4 U226 ( .b(AX_ADD_REG_6_), .a(BX_ADD_REG_6_), .sa(
        ADD_REG_SELECT[1]), .o1(n191) );
  i0snanb02ab1n03x5 U227 ( .a(n193), .b(n192), .out0(n195) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_add_format ( Y_ADDRESS, 
        X_ADDRESS, COLUMN_ADDRESS, ROW_ADDRESS );
  input [2:0] Y_ADDRESS;
  input [7:0] X_ADDRESS;
  output [2:0] COLUMN_ADDRESS;
  output [7:0] ROW_ADDRESS;

  assign COLUMN_ADDRESS[2] = Y_ADDRESS[2];
  assign COLUMN_ADDRESS[1] = Y_ADDRESS[1];
  assign COLUMN_ADDRESS[0] = Y_ADDRESS[0];
  assign ROW_ADDRESS[7] = X_ADDRESS[7];
  assign ROW_ADDRESS[6] = X_ADDRESS[6];
  assign ROW_ADDRESS[5] = X_ADDRESS[5];
  assign ROW_ADDRESS[4] = X_ADDRESS[4];
  assign ROW_ADDRESS[3] = X_ADDRESS[3];
  assign ROW_ADDRESS[2] = X_ADDRESS[2];
  assign ROW_ADDRESS[1] = X_ADDRESS[1];
  assign ROW_ADDRESS[0] = X_ADDRESS[0];

endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_pointer_cntrl ( BIST_CLK, 
        RESET_REG_SETUP1, RESET_REG_DEFAULT_MODE, RESET_REG_SETUP2, BIST_RUN, 
        BIST_ON, LAST_TICK, CHKBCI_PHASE, ALGO_MODE, MEM_RST, MBISTPG_ALGO_SEL, 
        OPSET_SELECT_DECODED, Y0_MINMAX_TRIGGER, Y1_MINMAX_TRIGGER, 
        X0_MINMAX_TRIGGER, X1_MINMAX_TRIGGER, DELAYCOUNTER_ENDCOUNT_TRIGGER, 
        COUNTERA_ENDCOUNT_TRIGGER, LOOPCOUNTMAX_TRIGGER, LOOP_POINTER, 
        BIST_HOLD, BIST_SHIFT_SHORT, SI, DEFAULT_MODE, BIST_MICROCODE_EN, 
        BIST_ASYNC_RESETN, ESOE_RESET, SO, SHORT_SETUP, OP_SELECT_CMD, 
        A_EQUALS_B_INVERT_DATA, ADD_Y0_CMD, ADD_Y1_CMD, ADD_X0_CMD, ADD_X1_CMD, 
        ADD_REG_SELECT, WDATA_CMD, EDATA_CMD, LOOP_CMD, COUNTERA_CMD, 
        INH_LAST_ADDR_CNT, INH_DATA_CMP, DELAYCOUNTER_CMD, 
        LAST_STATE_DONE_PIPELINED, LOOP_STATE_TRUE, LAST_STATE_DONE, 
        LAST_STATE );
  input [1:0] ALGO_MODE;
  input [1:0] OPSET_SELECT_DECODED;
  input [4:0] LOOP_POINTER;
  output [5:0] OP_SELECT_CMD;
  output [1:0] A_EQUALS_B_INVERT_DATA;
  output [1:0] ADD_Y0_CMD;
  output [2:0] ADD_Y1_CMD;
  output [1:0] ADD_X0_CMD;
  output [2:0] ADD_X1_CMD;
  output [2:0] ADD_REG_SELECT;
  output [3:0] WDATA_CMD;
  output [3:0] EDATA_CMD;
  output [1:0] LOOP_CMD;
  input BIST_CLK, RESET_REG_SETUP1, RESET_REG_DEFAULT_MODE, RESET_REG_SETUP2,
         BIST_RUN, BIST_ON, LAST_TICK, MEM_RST, MBISTPG_ALGO_SEL,
         Y0_MINMAX_TRIGGER, Y1_MINMAX_TRIGGER, X0_MINMAX_TRIGGER,
         X1_MINMAX_TRIGGER, DELAYCOUNTER_ENDCOUNT_TRIGGER,
         COUNTERA_ENDCOUNT_TRIGGER, LOOPCOUNTMAX_TRIGGER, BIST_HOLD,
         BIST_SHIFT_SHORT, SI, DEFAULT_MODE, BIST_MICROCODE_EN,
         BIST_ASYNC_RESETN, ESOE_RESET, SHORT_SETUP;
  output CHKBCI_PHASE, SO, COUNTERA_CMD, INH_LAST_ADDR_CNT, INH_DATA_CMP,
         DELAYCOUNTER_CMD, LAST_STATE_DONE_PIPELINED, LOOP_STATE_TRUE,
         LAST_STATE_DONE, LAST_STATE;
  wire   NEXT_POINTER_4_, NEXT_POINTER_3_, NEXT_POINTER_2_, NEXT_POINTER_1_,
         NEXT_POINTER_0_, BRANCH_POINTER_4_, BRANCH_POINTER_3_,
         BRANCH_POINTER_2_, BRANCH_POINTER_1_, BRANCH_POINTER_0_,
         NEXT_CONDITIONS_6_, NEXT_CONDITIONS_3, NEXT_CONDITIONS_1,
         EXECUTE_INH_LAST_ADDR_CNT_REG0, NEXT_POINTER_TO_BUF_3_,
         NEXT_POINTER_TO_BUF_2_, NEXT_POINTER_TO_BUF_1_, INST_POINTER_3_,
         INST_POINTER_2_, INST_POINTER_1_, INST_POINTER_0_,
         RESET_REG_SETUP1_BISTON, LAST_STATE_DONE_PIPE,
         INST_POINTER_SYNC_RESET, n261, n262, n155, n156, n159, n160, n163,
         n166, n169, n172, n175, n178, n181, n184, n187, n190, n193, n196,
         n199, n202, n205, n208, n211, n214, n217, n220, n223, n226, n227,
         n230, n231, n234, n237, n238, n241, n244, n247, n250, n253, n256,
         n259, n260, n263, n264, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81,
         n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n157, n158, n161, n162, n164, n165, n167, n168,
         n170, n171, n173, n174, n176, n177, n179, n180, n182, n183, n185,
         n186, n188, n189, n191, n192, n194, n195, n197, n198, n200, n201,
         n203, n204, n206, n207, n209, n210, n212, n213, n215, n216, n218,
         n219, n221, n222, n224, n225, n228, n229, n232, n233, n235, n236,
         n239, n240, n242, n243, n245, n246, n248, n249, n251, n252, n254,
         n255, n257, n258, n265, n266, n267, n268, n269, n270, n271, n272,
         n273, n274, n275, n276, n277, n278, n279, n280, n283, n284,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23, SYNOPSYS_UNCONNECTED_24,
         SYNOPSYS_UNCONNECTED_25, SYNOPSYS_UNCONNECTED_26,
         SYNOPSYS_UNCONNECTED_27, SYNOPSYS_UNCONNECTED_28,
         SYNOPSYS_UNCONNECTED_29, SYNOPSYS_UNCONNECTED_30,
         SYNOPSYS_UNCONNECTED_31, SYNOPSYS_UNCONNECTED_32,
         SYNOPSYS_UNCONNECTED_33, SYNOPSYS_UNCONNECTED_34,
         SYNOPSYS_UNCONNECTED_35;

  i0sbfn000ab1n02x5 tessent_persistent_cell_NEXT_POINTER0 ( .a(n283), .o(
        NEXT_POINTER_0_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_NEXT_POINTER1 ( .a(
        NEXT_POINTER_TO_BUF_1_), .o(NEXT_POINTER_1_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_NEXT_POINTER2 ( .a(
        NEXT_POINTER_TO_BUF_2_), .o(NEXT_POINTER_2_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_NEXT_POINTER3 ( .a(
        NEXT_POINTER_TO_BUF_3_), .o(NEXT_POINTER_3_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_NEXT_POINTER4 ( .a(n284), .o(
        NEXT_POINTER_4_) );
  i0sfvz003ab1d03x6 INST_POINTER_reg_0 ( .si(n262), .d(n263), .ssb(n261), 
        .clk(BIST_CLK), .rb(n15), .o(INST_POINTER_0_), .so(
        SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 INST_POINTER_reg_4 ( .si(n262), .d(n226), .ssb(n261), 
        .clk(BIST_CLK), .rb(n16), .o(SO), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 EXECUTE_LOOP_CMD_REG1_reg ( .si(n262), .d(n220), .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(LOOP_CMD[1]), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 EXECUTE_ADD_X1_CMD_REG2_reg ( .si(n262), .d(n205), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(ADD_X1_CMD[2]), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 EXECUTE_ADD_Y1_CMD_REG2_reg ( .si(n262), .d(n202), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(ADD_Y1_CMD[2]), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 EXECUTE_EDATA_CMD_REG0_reg ( .si(n262), .d(n178), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(EDATA_CMD[0]), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 LAST_STATE_DONE_REG_reg ( .si(n262), .d(n159), .ssb(n261), 
        .clk(BIST_CLK), .rb(n15), .o(LAST_STATE_DONE), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvp003ab1d02x5 EXECUTE_INH_DATA_CMP_REG0_reg ( .si(n262), .d(n187), .ssb(
        n261), .clk(BIST_CLK), .rb(n15), .o(INH_DATA_CMP), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvp003ab1d02x5 EXECUTE_NEXT_CONDITIONS_REG3_reg ( .si(n262), .d(n250), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(NEXT_CONDITIONS_3), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 EXECUTE_WDATA_CMD_REG0_reg ( .si(n262), .d(n196), .ssb(
        n261), .clk(BIST_CLK), .rb(n15), .o(WDATA_CMD[0]), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0snorb02ab1n03x4 U195 ( .a(n160), .b(RESET_REG_SETUP1_BISTON), .out0(n159)
         );
  i0snorb02ab1n02x5 U243 ( .a(n231), .b(INST_POINTER_SYNC_RESET), .out0(n230)
         );
  i0sfvz003ab1d02x6 EXECUTE_BRANCH_POINTER_REG4_reg ( .si(n262), .d(n256), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(BRANCH_POINTER_4_), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d02x6 EXECUTE_WDATA_CMD_REG3_reg ( .si(n262), .d(n199), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(WDATA_CMD[3]), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d09x5 INST_POINTER_reg_3 ( .si(n262), .d(n230), .ssb(n261), 
        .clk(BIST_CLK), .rb(n15), .o(INST_POINTER_3_), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d02x6 EXECUTE_BRANCH_POINTER_REG2_reg ( .si(n262), .d(n223), 
        .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(BRANCH_POINTER_2_), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d02x6 LAST_STATE_DONE_PIPE_reg ( .si(n262), .d(n155), .ssb(n261), 
        .clk(BIST_CLK), .rb(n16), .o(LAST_STATE_DONE_PIPE), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfvz003ab1d02x6 EXECUTE_BRANCH_POINTER_REG3_reg ( .si(n262), .d(n234), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(BRANCH_POINTER_3_), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0sfvz003ab1d03x6 EXECUTE_EDATA_CMD_REG3_reg ( .si(n262), .d(n175), .ssb(
        n261), .clk(BIST_CLK), .rb(n15), .o(EDATA_CMD[3]), .so(
        SYNOPSYS_UNCONNECTED_17) );
  i0sfvz003ab1d12x5 EXECUTE_LOOP_CMD_REG0_reg ( .si(n262), .d(n244), .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(LOOP_CMD[0]), .so(SYNOPSYS_UNCONNECTED_18) );
  i0sfvz003ab1d12x5 EXECUTE_ADD_X1_CMD_REG1_reg ( .si(n262), .d(n184), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(ADD_X1_CMD[1]), .so(
        SYNOPSYS_UNCONNECTED_19) );
  i0sfvz003ab1d09x5 EXECUTE_EDATA_CMD_REG1_reg ( .si(n262), .d(n190), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(EDATA_CMD[1]), .so(
        SYNOPSYS_UNCONNECTED_20) );
  i0sfvz003ab1d18x5 EXECUTE_BRANCH_POINTER_REG1_reg ( .si(n262), .d(n193), 
        .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(BRANCH_POINTER_1_), .so(
        SYNOPSYS_UNCONNECTED_21) );
  i0sfvz003ab1d18x5 EXECUTE_INH_LAST_ADDR_CNT_REG0_reg ( .si(n262), .d(n214), 
        .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(
        EXECUTE_INH_LAST_ADDR_CNT_REG0), .so(SYNOPSYS_UNCONNECTED_22) );
  i0sfvz003ab1d09x5 EXECUTE_ADD_X1_CMD_REG0_reg ( .si(n262), .d(n172), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(ADD_X1_CMD[0]), .so(
        SYNOPSYS_UNCONNECTED_23) );
  i0sfvz003ab1d12x5 EXECUTE_ADD_REG_SELECT_REG1_reg ( .si(n262), .d(n217), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(ADD_REG_SELECT[1]), .so(
        SYNOPSYS_UNCONNECTED_24) );
  i0sfvz003ab1d12x5 EXECUTE_ADD_Y1_CMD_REG0_reg ( .si(n262), .d(n169), .ssb(
        n261), .clk(BIST_CLK), .rb(n16), .o(ADD_Y1_CMD[0]), .so(
        SYNOPSYS_UNCONNECTED_25) );
  i0snorb02ab1n02x7 U240 ( .a(n227), .b(INST_POINTER_SYNC_RESET), .out0(n226)
         );
  i0sfvz003ab1d09x5 INST_POINTER_reg_1 ( .si(n262), .d(n259), .ssb(n261), 
        .clk(BIST_CLK), .rb(n15), .o(INST_POINTER_1_), .so(
        SYNOPSYS_UNCONNECTED_26) );
  i0snorb02ab1n02x7 U263 ( .a(n260), .b(INST_POINTER_SYNC_RESET), .out0(n259)
         );
  i0sfvz003ab1d09x5 INST_POINTER_reg_2 ( .si(n262), .d(n237), .ssb(n261), 
        .clk(BIST_CLK), .rb(n15), .o(INST_POINTER_2_), .so(
        SYNOPSYS_UNCONNECTED_27) );
  i0snorb02ab1n02x7 U248 ( .a(n238), .b(INST_POINTER_SYNC_RESET), .out0(n237)
         );
  i0sfvz003ab1d02x6 EXECUTE_WDATA_CMD_REG1_reg ( .si(n262), .d(n208), .ssb(
        n261), .clk(BIST_CLK), .rb(n15), .o(WDATA_CMD[1]), .so(
        SYNOPSYS_UNCONNECTED_28) );
  i0sfvz003ab1d02x6 EXECUTE_NEXT_CONDITIONS_REG1_reg ( .si(n262), .d(n253), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(NEXT_CONDITIONS_1), .so(
        SYNOPSYS_UNCONNECTED_29) );
  i0sfvz003ab1d02x6 EXECUTE_ADD_Y1_CMD_REG1_reg ( .si(n262), .d(n181), .ssb(
        n261), .clk(BIST_CLK), .rb(n15), .o(ADD_Y1_CMD[1]), .so(
        SYNOPSYS_UNCONNECTED_30) );
  i0snorb02ab1n03x4 U192 ( .a(n156), .b(RESET_REG_SETUP1_BISTON), .out0(n155)
         );
  i0sfvz003ab1d12x5 EXECUTE_NEXT_CONDITIONS_REG6_reg ( .si(n262), .d(n241), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(NEXT_CONDITIONS_6_), .so(
        SYNOPSYS_UNCONNECTED_31) );
  i0sfvz003ab1d18x5 EXECUTE_OP_SELECT_CMD_REG3_reg ( .si(n262), .d(n247), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(OP_SELECT_CMD[3]), .so(
        SYNOPSYS_UNCONNECTED_32) );
  i0sfvz003ab1d18x5 EXECUTE_BRANCH_POINTER_REG0_reg ( .si(n262), .d(n211), 
        .ssb(n261), .clk(BIST_CLK), .rb(n15), .o(BRANCH_POINTER_0_), .so(
        SYNOPSYS_UNCONNECTED_33) );
  i0snorb02ab1n02x7 U266 ( .a(n264), .b(INST_POINTER_SYNC_RESET), .out0(n263)
         );
  i0sfvz003ab1d09x5 EXECUTE_OP_SELECT_CMD_REG0_reg ( .si(n262), .d(n166), 
        .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(OP_SELECT_CMD[0]), .so(
        SYNOPSYS_UNCONNECTED_34) );
  i0sfvz003ab1d09x5 EXECUTE_OP_SELECT_CMD_REG1_reg ( .si(n262), .d(n163), 
        .ssb(n261), .clk(BIST_CLK), .rb(n16), .o(OP_SELECT_CMD[1]), .so(
        SYNOPSYS_UNCONNECTED_35) );
  i0snorp02ab1n02x5 U3 ( .a(n248), .b(n277), .o1(n195) );
  i0sorn002ab1n06x5 U4 ( .a(n120), .b(n93), .o(n235) );
  i0sorn002ab1n03x5 U5 ( .a(n28), .b(n30), .o(n120) );
  i0soaib13ab1n03x5 U6 ( .d(INST_POINTER_0_), .c(n39), .a(n38), .b(n37), .o1(
        n264) );
  i0sinv020ab1n08x5 U7 ( .a(n30), .o1(n152) );
  i0snanb04ab1n02x5 U8 ( .a(n279), .b(BRANCH_POINTER_1_), .c(n257), .d(n255), 
        .out0(n258) );
  i0snana24ab1n03x5 U9 ( .d(n200), .e(LOOP_STATE_TRUE), .a(n198), .b(n212), 
        .c(n197), .out0(NEXT_POINTER_TO_BUF_3_) );
  i0sbfn000ab1n18x5 U10 ( .a(NEXT_POINTER_3_), .o(n27) );
  i0sinv040ab1n06x5 U11 ( .a(n27), .o1(n191) );
  i0sinv030ab1n08x5 U12 ( .a(n255), .o1(LOOP_STATE_TRUE) );
  i0sinv000ab1n06x5 U13 ( .a(n133), .o1(n203) );
  i0sobai22ab1n03x5 U14 ( .a(n27), .b(n114), .c(n113), .d(n206), .out0(n115)
         );
  i0soaib13ab1n02x5 U15 ( .d(BRANCH_POINTER_0_), .c(n273), .a(n272), .b(n271), 
        .o1(n211) );
  i0snanb02ab1n06x5 U16 ( .a(n127), .b(n157), .out0(n114) );
  i0sinv030ab1n06x5 U17 ( .a(n28), .o1(n127) );
  i0saob012ab1n02x5 U18 ( .b(OP_SELECT_CMD[3]), .c(n167), .a(n165), .out0(n247) );
  i0snor042ab1n03x5 U19 ( .a(n201), .b(n122), .o1(n67) );
  i0sinv020ab1n02x5 U20 ( .a(n77), .o1(n141) );
  i0sinv020ab1n04x5 U21 ( .a(n82), .o1(n107) );
  i0sorn002ab1n02x5 U22 ( .a(n28), .b(n29), .o(n45) );
  i0snanp02ab1n03x5 U23 ( .a(n29), .b(n30), .o1(n132) );
  i0snanb02ab1n03x5 U24 ( .a(n30), .b(n29), .out0(n77) );
  i0snor002ab1n02x5 U25 ( .a(n28), .b(n29), .o1(n8) );
  i0sinv030ab1n04x5 U26 ( .a(n209), .o1(n248) );
  i0smdn022ab1n02x5 U27 ( .b(n141), .a(n203), .sa(n26), .o1(n142) );
  i0snanb02ab1n03x5 U28 ( .a(n133), .b(n104), .out0(n240) );
  i0sinv000ab1n03x5 U29 ( .a(n22), .o1(n23) );
  i0sinv000ab1n06x5 U30 ( .a(n274), .o1(n22) );
  i0smbn022ab1n06x5 U31 ( .b(n20), .a(n271), .sa(n29), .o(n137) );
  i0snanb02ab1n06x5 U32 ( .a(n248), .b(n246), .out0(n257) );
  i0sorn002ab1n06x5 U33 ( .a(n145), .b(n44), .o(n25) );
  i0snanp02ab1n06x5 U34 ( .a(n73), .b(n177), .o1(n74) );
  i0sinv000ab1n03x5 U35 ( .a(n228), .o1(n224) );
  i0sbfn000ab1n21x5 U36 ( .a(NEXT_POINTER_4_), .o(n26) );
  i0snor002ab1n02x5 U37 ( .a(n26), .b(n27), .o1(n6) );
  i0soai013ab1n02x4 U38 ( .b(n133), .c(n127), .d(n126), .a(n153), .o1(n129) );
  i0snano32ab1n02x4 U39 ( .b(n29), .c(n152), .d(n28), .a(n21), .out0(n154) );
  i0saoi012ab1n02x5 U40 ( .b(n3), .c(n107), .a(n85), .o1(n90) );
  i0snorp02ab1n02x5 U41 ( .a(n278), .b(n279), .o1(n1) );
  i0snorp02ab1n03x5 U42 ( .a(n280), .b(n2), .o1(n283) );
  i0sinv000ab1n03x5 U43 ( .a(n1), .o1(n2) );
  i0sinv040ab1n06x5 U44 ( .a(n212), .o1(n279) );
  i0snano22ab1n03x7 U45 ( .b(n251), .c(LAST_TICK), .a(n228), .out0(n61) );
  i0snona23ab1n02x5 U46 ( .c(n255), .d(n279), .a(LOOP_POINTER[4]), .b(n228), 
        .out0(n186) );
  i0sorn002ab1n06x5 U47 ( .a(n277), .b(n248), .o(n228) );
  i0snanb02ab1n12x5 U48 ( .a(X1_MINMAX_TRIGGER), .b(NEXT_CONDITIONS_3), .out0(
        n209) );
  i0sbfn000ab1n18x5 U49 ( .a(NEXT_POINTER_2_), .o(n28) );
  i0sorn003ab1n12x5 U50 ( .a(n28), .b(n27), .c(n26), .o(n41) );
  i0snanp02ab1n03x5 U51 ( .a(n125), .b(n3), .o1(n153) );
  i0snano22ab1n02x5 U52 ( .b(n30), .c(n28), .a(n29), .out0(n125) );
  i0snand02ab1d04x5 U53 ( .a(n11), .b(n35), .o1(n236) );
  i0sinv040ab1n09x5 U54 ( .a(n206), .o1(n157) );
  i0sinv030ab1n02x5 U55 ( .a(n72), .o1(n97) );
  i0sinv000ab1n03x5 U56 ( .a(n18), .o1(n19) );
  i0sinv030ab1n06x5 U57 ( .a(n33), .o1(n32) );
  i0soai013ab1n02x5 U58 ( .b(n164), .c(n162), .d(n161), .a(n158), .o1(n163) );
  i0snanp03ab1n03x5 U59 ( .a(n180), .b(n212), .c(BRANCH_POINTER_4_), .o1(n189)
         );
  i0snanp02ab1n04x5 U60 ( .a(n246), .b(n209), .o1(n274) );
  i0sinv000ab1n06x5 U61 ( .a(n74), .o1(n246) );
  i0sbfn000ab1n18x5 U62 ( .a(NEXT_POINTER_0_), .o(n30) );
  i0sorn002ab1n03x5 U63 ( .a(n26), .b(n27), .o(n86) );
  i0snor002ab1n02x5 U64 ( .a(n26), .b(n27), .o1(n3) );
  i0sinv000ab1n02x5 U65 ( .a(BIST_HOLD), .o1(n31) );
  i0sinv020ab1n03x5 U66 ( .a(SO), .o1(n14) );
  i0soaib13ab1n03x5 U67 ( .d(LOOP_CMD[0]), .c(n273), .a(n165), .b(n240), .o1(
        n244) );
  i0sinv000ab1n03x5 U68 ( .a(n26), .o1(n113) );
  i0snanp02ab1n03x5 U69 ( .a(n27), .b(n26), .o1(n174) );
  i0sinv020ab1n02x5 U70 ( .a(n110), .o1(n151) );
  i0soaib13ab1n02x5 U71 ( .d(ADD_Y1_CMD[0]), .c(n273), .a(n138), .b(n137), 
        .o1(n169) );
  i0saob012ab1n02x5 U72 ( .b(ADD_REG_SELECT[1]), .c(n167), .a(n117), .out0(
        n217) );
  i0saoi023ab1n02x5 U73 ( .c(n144), .d(n26), .e(n152), .a(n151), .b(n133), 
        .o1(n89) );
  i0sinv020ab1n04x5 U74 ( .a(n114), .o1(n144) );
  i0snor042ab1n06x5 U75 ( .a(BIST_HOLD), .b(n12), .o1(n11) );
  i0snorp02ab1n03x5 U76 ( .a(n26), .b(n27), .o1(n21) );
  i0sinv040ab1n03x5 U77 ( .a(n174), .o1(n270) );
  i0snanb02ab1n03x5 U78 ( .a(n174), .b(n157), .out0(n110) );
  i0smdn022ab1n02x5 U79 ( .b(n65), .a(n64), .sa(OPSET_SELECT_DECODED[1]), .o1(
        LAST_STATE_DONE_PIPELINED) );
  i0sobai22ab1n03x5 U80 ( .a(n203), .b(n67), .c(n77), .d(n86), .out0(n71) );
  i0soai013ab1n03x4 U81 ( .b(n131), .c(n130), .d(n129), .a(n128), .o1(n184) );
  i0soabi13ab1n02x5 U82 ( .c(n270), .d(n8), .a(n30), .b(n269), .o1(n272) );
  i0smbc004ab1n02x5 U83 ( .a(n121), .sa(n120), .b(n119), .sb(n8), .c(n118), 
        .sc(n32), .d(n7), .sd(n126), .o(n131) );
  i0snano32ab1n02x4 U84 ( .b(n118), .c(n145), .d(n30), .a(n206), .out0(n70) );
  i0soai013ab1n02x5 U85 ( .b(n30), .c(n191), .d(n145), .a(n233), .o1(n47) );
  i0snanb02ab1n02x5 U86 ( .a(n29), .b(n30), .out0(n42) );
  i0snorb03ab1n02x7 U87 ( .a(n28), .b(n30), .c(n29), .out0(n98) );
  i0snanb02ab1n02x5 U88 ( .a(n30), .b(n28), .out0(n43) );
  i0saoi012ab1n03x5 U89 ( .b(n257), .c(n255), .a(n75), .o1(INH_LAST_ADDR_CNT)
         );
  i0snanb04ab1n03x5 U90 ( .a(n279), .b(LOOP_POINTER[1]), .c(n257), .d(
        LOOP_STATE_TRUE), .out0(n265) );
  i0saob012ab1n06x5 U91 ( .b(n219), .c(n179), .a(n252), .out0(n212) );
  i0snanp02ab1n03x5 U92 ( .a(n73), .b(n177), .o1(n277) );
  i0snanb02ab1n06x5 U93 ( .a(LOOPCOUNTMAX_TRIGGER), .b(NEXT_CONDITIONS_6_), 
        .out0(n73) );
  i0snand42ab1n04x5 U94 ( .a(n210), .b(n209), .o1(n276) );
  i0snand03ab1n03x5 U95 ( .a(n24), .b(n25), .c(n235), .o1(n48) );
  i0snorp02ab1n03x5 U96 ( .a(n5), .b(n78), .o1(n79) );
  i0snor003ab1n02x5 U97 ( .a(n28), .b(n191), .c(n132), .o1(n5) );
  i0sinv020ab1n04x5 U98 ( .a(n66), .o1(n122) );
  i0snano23ab1n03x5 U99 ( .c(n145), .d(n6), .a(n236), .b(n43), .out0(n49) );
  i0sinv000ab1n03x5 U100 ( .a(n63), .o1(n210) );
  i0snor003ab1n02x5 U101 ( .a(n28), .b(n30), .c(n29), .o1(n7) );
  i0sobai22ab1n03x5 U102 ( .a(n27), .b(n26), .c(n26), .d(n28), .out0(n44) );
  i0snand43ab1n02x5 U103 ( .a(n27), .b(n26), .c(n28), .o1(n233) );
  i0snano22ab1n02x4 U104 ( .b(INST_POINTER_1_), .c(n251), .a(n274), .out0(n267) );
  i0snanb02ab1n06x5 U105 ( .a(n27), .b(n26), .out0(n93) );
  i0sobai22ab1n02x7 U106 ( .a(n118), .b(n152), .c(n133), .d(n86), .out0(n87)
         );
  i0snand02ab1n02x5 U107 ( .a(n97), .b(n4), .o1(n165) );
  i0snanp03ab1n03x5 U108 ( .a(n35), .b(n133), .c(n132), .o1(n135) );
  i0sorn002ab1n12x5 U109 ( .a(n29), .b(n30), .o(n133) );
  i0sinv000ab1n06x5 U110 ( .a(n41), .o1(n118) );
  i0sorn002ab1n02x7 U111 ( .a(n41), .b(n72), .o(n20) );
  i0saoi112ab1n02x7 U112 ( .c(n42), .d(n77), .a(n236), .b(n41), .o1(n50) );
  i0snand42ab1n02x5 U113 ( .a(n41), .b(n35), .o1(n134) );
  i0smdn022ab1n02x4 U114 ( .b(n174), .a(n41), .sa(n203), .o1(n161) );
  i0sinv030ab1n04x5 U115 ( .a(n29), .o1(n145) );
  i0snand02ab1n02x5 U116 ( .a(n203), .b(n201), .o1(n204) );
  i0snanb02ab1n06x5 U117 ( .a(n34), .b(n236), .out0(n273) );
  i0sinv020ab1n02x5 U118 ( .a(n116), .o1(n100) );
  i0sand002ab1n03x5 U119 ( .a(n14), .b(MBISTPG_ALGO_SEL), .o(n13) );
  i0sbff000ab1n04x5 U120 ( .a(RESET_REG_SETUP2), .o(n34) );
  i0snorp02ab1n02x5 U121 ( .a(n221), .b(n219), .o1(n9) );
  i0sand002ab1n03x5 U122 ( .a(n118), .b(n141), .o(n4) );
  i0snanp02ab1n02x5 U123 ( .a(n273), .b(n33), .o1(n136) );
  i0sinv000ab1n02x5 U124 ( .a(n132), .o1(n146) );
  i0sinv000ab1n02x5 U125 ( .a(n40), .o1(n36) );
  i0saoi112ab1n02x7 U126 ( .c(n4), .d(n269), .a(n100), .b(n99), .o1(n101) );
  i0saoi012ab1n02x7 U127 ( .b(n224), .c(n222), .a(n9), .o1(n225) );
  i0soai022ab1n02x5 U128 ( .a(n137), .b(n152), .c(n273), .d(n75), .o1(n214) );
  i0snanb02ab1n02x5 U129 ( .a(n236), .b(n28), .out0(n207) );
  i0sinv040ab1n03x5 U130 ( .a(n221), .o1(n252) );
  i0smtn022ab1n02x5 U131 ( .b(n168), .a(INST_POINTER_2_), .sa(INST_POINTER_3_), 
        .o1(n170) );
  i0snanb02ab1n02x5 U132 ( .a(n145), .b(n144), .out0(n148) );
  i0snano22ab1n03x5 U133 ( .b(INST_POINTER_0_), .c(n249), .a(n257), .out0(n268) );
  i0saoi013ab1n02x4 U134 ( .b(ALGO_MODE[0]), .c(n254), .d(n252), .a(n9), .o1(
        n266) );
  i0saoai13ab1n02x5 U135 ( .c(n29), .d(n108), .b(n3), .a(n107), .o1(n109) );
  i0sinv020ab1n03x5 U136 ( .a(LAST_TICK), .o1(n12) );
  i0snorp02ab1n02x5 U137 ( .a(n93), .b(n152), .o1(n95) );
  i0soai012ab1n02x5 U138 ( .b(n273), .c(n84), .a(n35), .o1(n85) );
  i0sinv000ab1n02x5 U139 ( .a(INST_POINTER_2_), .o1(n183) );
  i0smtn022ab1n02x5 U140 ( .b(INST_POINTER_2_), .a(n216), .sa(INST_POINTER_1_), 
        .o1(n218) );
  i0sinv000ab1n03x5 U141 ( .a(n17), .o1(n15) );
  i0sinv000ab1n03x5 U142 ( .a(n17), .o1(n16) );
  i0sinv000ab1n03x5 U143 ( .a(BIST_ASYNC_RESETN), .o1(n17) );
  i0sbff000ab1n02x5 U144 ( .a(BIST_SHIFT_SHORT), .o(n18) );
  i0sinv000ab1n03x5 U145 ( .a(n34), .o1(n35) );
  i0sinv000ab1n03x5 U146 ( .a(n273), .o1(n167) );
  i0sinv000ab1n03x5 U147 ( .a(n93), .o1(n201) );
  i0sinv000ab1n03x5 U148 ( .a(n232), .o1(n121) );
  i0snanp03ab1n02x5 U149 ( .a(n8), .b(n157), .c(n113), .o1(n103) );
  i0saoai13ab1n02x5 U150 ( .c(n144), .d(n152), .b(n96), .a(n122), .o1(n102) );
  i0sinv020ab1n02x5 U151 ( .a(LOOP_POINTER[2]), .o1(n215) );
  i0snanp03ab1n02x5 U152 ( .a(n29), .b(n30), .c(n122), .o1(n123) );
  i0snano22ab1n02x4 U153 ( .b(n29), .c(n108), .a(n82), .out0(n92) );
  i0sinv000ab1n02x5 U154 ( .a(n105), .o1(n91) );
  i0snorp02ab1n02x5 U155 ( .a(n273), .b(n68), .o1(n69) );
  i0sinv000ab1n03x5 U156 ( .a(n115), .o1(n117) );
  i0snanp03ab1n02x5 U157 ( .a(n98), .b(n97), .c(n6), .o1(n116) );
  i0sinv020ab1n02x5 U158 ( .a(n81), .o1(n108) );
  i0sinv000ab1n02x5 U159 ( .a(MBISTPG_ALGO_SEL), .o1(n33) );
  i0soai222ab1n02x7 U160 ( .a(n191), .b(n40), .c(n171), .d(n39), .e(n183), .f(
        n19), .o1(n231) );
  i0snor022ab1n02x5 U161 ( .a(n29), .b(n206), .o1(n96) );
  i0soai222ab1n02x7 U162 ( .a(n127), .b(n40), .c(n183), .d(n39), .e(n249), .f(
        n19), .o1(n238) );
  i0sinv000ab1n02x5 U163 ( .a(n179), .o1(n254) );
  i0snorp02ab1n03x5 U164 ( .a(n183), .b(n182), .o1(n10) );
  i0snanp03ab1n02x5 U165 ( .a(n146), .b(n157), .c(n191), .o1(n147) );
  i0saoi012ab1n02x5 U166 ( .b(n3), .c(n269), .a(n157), .o1(n162) );
  i0sbfn000ab1n18x5 U167 ( .a(NEXT_POINTER_1_), .o(n29) );
  i0snorp02ab1n02x5 U168 ( .a(n236), .b(n233), .o1(n243) );
  i0snor022ab1n02x5 U169 ( .a(n236), .b(n232), .o1(n245) );
  i0snanp02ab1n02x5 U170 ( .a(n167), .b(NEXT_CONDITIONS_6_), .o1(n51) );
  i0soaoi13ab1n02x5 U171 ( .c(n30), .d(n113), .b(n127), .a(n122), .o1(n78) );
  i0sinv000ab1n03x5 U172 ( .a(BRANCH_POINTER_4_), .o1(n176) );
  i0sinv000ab1n02x5 U173 ( .a(LOOP_CMD[1]), .o1(n76) );
  i0snorb02ab1n02x5 U174 ( .a(WDATA_CMD[1]), .b(n273), .out0(n112) );
  i0saoi022ab1n02x5 U175 ( .a(n122), .b(n144), .c(EDATA_CMD[3]), .d(n167), 
        .o1(n94) );
  i0soai222ab1n02x7 U176 ( .a(n113), .b(n40), .c(n39), .d(n14), .e(n171), .f(
        n19), .o1(n227) );
  i0sobai22ab1n02x5 U177 ( .a(BRANCH_POINTER_3_), .b(n273), .c(n236), .d(n191), 
        .out0(n194) );
  i0snona32ab1n02x4 U178 ( .b(INST_POINTER_1_), .c(INST_POINTER_0_), .d(
        INST_POINTER_3_), .a(n13), .out0(n221) );
  i0snanp02ab1n02x5 U179 ( .a(SI), .b(n18), .o1(n37) );
  i0sinv000ab1n03x5 U180 ( .a(EDATA_CMD[1]), .o1(n84) );
  i0snanp02ab1n02x5 U181 ( .a(MEM_RST), .b(INST_POINTER_2_), .o1(n219) );
  i0snand03ab1n02x5 U182 ( .a(INST_POINTER_3_), .b(n254), .c(n53), .o1(n57) );
  i0saoi033ab1n02x5 U183 ( .a(INST_POINTER_2_), .b(n55), .c(n54), .d(
        INST_POINTER_3_), .e(ALGO_MODE[0]), .f(n254), .o1(n56) );
  i0sinv000ab1n02x5 U184 ( .a(ALGO_MODE[1]), .o1(n54) );
  i0snorp03ab1n02x5 U185 ( .a(MEM_RST), .b(ALGO_MODE[0]), .c(ALGO_MODE[1]), 
        .o1(n58) );
  i0snanb03ab1n02x5 U186 ( .a(ALGO_MODE[0]), .b(MEM_RST), .c(BIST_RUN), .out0(
        n52) );
  i0sinv000ab1n02x5 U187 ( .a(INST_POINTER_0_), .o1(n251) );
  i0snanp02ab1n02x5 U188 ( .a(INST_POINTER_1_), .b(INST_POINTER_0_), .o1(n182)
         );
  i0sinv000ab1n02x5 U189 ( .a(LAST_STATE_DONE), .o1(n64) );
  i0sinv000ab1n02x5 U190 ( .a(INST_POINTER_1_), .o1(n249) );
  i0sinv000ab1n03x5 U191 ( .a(LAST_STATE_DONE_PIPE), .o1(n65) );
  i0snorb02ab1n02x5 U193 ( .a(INST_POINTER_0_), .b(INST_POINTER_2_), .out0(
        n216) );
  i0sinv000ab1n02x5 U194 ( .a(INST_POINTER_3_), .o1(n171) );
  i0sinv000ab1n02x5 U196 ( .a(ALGO_MODE[0]), .o1(n53) );
  i0sinv000ab1n02x5 U197 ( .a(INH_DATA_CMP), .o1(n68) );
  i0sinv000ab1n03x5 U198 ( .a(BRANCH_POINTER_2_), .o1(n213) );
  i0snanp02ab1n02x5 U199 ( .a(INST_POINTER_1_), .b(INST_POINTER_2_), .o1(n168)
         );
  i0stihi00ab1n02x5 U200 ( .o(n261) );
  i0stilo00ab1n02x5 U201 ( .o(n262) );
  i0soai022ab1n03x5 U202 ( .a(n206), .b(n143), .c(n206), .d(n142), .o1(n150)
         );
  i0soai122ab1n02x7 U203 ( .b(n273), .c(n176), .d(n236), .e(n174), .a(n173), 
        .o1(n256) );
  i0soaib12ab1n02x5 U204 ( .c(NEXT_CONDITIONS_1), .b(Y1_MINMAX_TRIGGER), .a(
        NEXT_CONDITIONS_6_), .out0(n63) );
  i0soai033ab1n03x5 U205 ( .a(n276), .b(n279), .c(n215), .d(n275), .e(n279), 
        .f(n213), .o1(n229) );
  i0sinv020ab1n04x5 U206 ( .a(n276), .o1(n275) );
  i0snand42ab1n02x5 U207 ( .a(n269), .b(n33), .o1(n72) );
  i0soai302ab1n02x5 U208 ( .d(n58), .e(n33), .a(INST_POINTER_3_), .b(
        INST_POINTER_1_), .c(n183), .o1(n59) );
  i0soabi13ab1n02x5 U209 ( .c(n7), .d(n33), .a(n26), .b(n269), .o1(n173) );
  i0snand03ab1n02x5 U210 ( .a(n7), .b(n26), .c(n157), .o1(n192) );
  i0snana24ab1n02x5 U211 ( .d(n26), .e(n33), .a(n123), .b(n124), .c(n269), 
        .out0(n130) );
  i0saob012ab1n02x5 U212 ( .b(n167), .c(NEXT_CONDITIONS_3), .a(n139), .out0(
        n250) );
  i0saob012ab1n03x5 U213 ( .b(ADD_Y1_CMD[1]), .c(n167), .a(n139), .out0(n181)
         );
  i0snanb02ab1n06x5 U214 ( .a(Y1_MINMAX_TRIGGER), .b(NEXT_CONDITIONS_1), 
        .out0(n177) );
  i0snanb02ab1n06x5 U215 ( .a(n93), .b(n107), .out0(n271) );
  i0sinv030ab1n04x5 U216 ( .a(n271), .o1(n104) );
  i0saoai13ab1n03x5 U217 ( .c(n23), .d(n189), .b(n188), .a(n186), .o1(n284) );
  i0snanb03ab1n02x5 U218 ( .a(n236), .b(n29), .c(n235), .out0(n239) );
  i0soai222ab1n02x7 U219 ( .a(n270), .b(n207), .c(n206), .d(n204), .e(n273), 
        .f(n213), .o1(n223) );
  i0saoi023ab1n02x5 U220 ( .c(n27), .d(n152), .e(n157), .a(OP_SELECT_CMD[0]), 
        .b(n167), .o1(n149) );
  i0snanb02ab1n02x5 U221 ( .a(n32), .b(n27), .out0(n124) );
  i0snano22ab1n02x5 U222 ( .b(n32), .c(n30), .a(n27), .out0(n119) );
  i0snanp02ab1n02x5 U223 ( .a(n27), .b(n30), .o1(n81) );
  i0saob012ab1n02x5 U224 ( .b(n27), .c(n26), .a(n32), .out0(n126) );
  i0saobi12ab1n03x7 U225 ( .b(n106), .c(n118), .a(n105), .out0(n111) );
  i0soai222ab1n02x7 U226 ( .a(n145), .b(n40), .c(n249), .d(n39), .e(n251), .f(
        n19), .o1(n260) );
  i0saoi012ab1n03x5 U227 ( .b(n132), .c(n133), .a(n236), .o1(n106) );
  i0snorb02ab1n02x5 U228 ( .a(LOOP_POINTER[3]), .b(n246), .out0(n200) );
  i0snanb02ab1n02x5 U229 ( .a(n26), .b(n27), .out0(n66) );
  i0sorn002ab1n03x5 U230 ( .a(n46), .b(n45), .o(n24) );
  i0snanb02ab1n02x5 U231 ( .a(n26), .b(n27), .out0(n46) );
  i0soaib12ab1n02x5 U232 ( .c(NEXT_CONDITIONS_3), .b(X1_MINMAX_TRIGGER), .a(
        n177), .out0(n180) );
  i0soai033ab1n03x5 U233 ( .a(n22), .b(n32), .c(n276), .d(n22), .e(
        BRANCH_POINTER_0_), .f(n275), .o1(n280) );
  i0sobai22ab1n02x7 U234 ( .a(n104), .b(n77), .c(n273), .d(n76), .out0(n220)
         );
  i0soaib13ab1n02x5 U235 ( .d(n209), .c(n277), .a(n255), .b(BRANCH_POINTER_3_), 
        .o1(n197) );
  i0snano22ab1n02x4 U236 ( .b(INST_POINTER_0_), .c(n209), .a(n277), .out0(n278) );
  i0snanp02ab1n06x5 U237 ( .a(n11), .b(n19), .o1(n40) );
  i0snanb02ab1n03x5 U238 ( .a(n18), .b(n40), .out0(n39) );
  i0snanb02ab1n03x5 U239 ( .a(n152), .b(n36), .out0(n38) );
  i0sinv030ab1n04x5 U241 ( .a(n236), .o1(n269) );
  i0snanp02ab1n06x5 U242 ( .a(n269), .b(n32), .o1(n206) );
  i0soai033ab1n06x5 U244 ( .a(n50), .b(n157), .c(n49), .d(n48), .e(n33), .f(
        n47), .o1(n139) );
  i0saob012ab1n03x5 U245 ( .b(n167), .c(NEXT_CONDITIONS_1), .a(n139), .out0(
        n253) );
  i0snanp02ab1n06x5 U246 ( .a(n157), .b(n127), .o1(n82) );
  i0soabi13ab1n03x5 U247 ( .c(n104), .d(n30), .a(n165), .b(n51), .o1(n241) );
  i0snanb02ab1n03x5 U249 ( .a(INST_POINTER_2_), .b(ALGO_MODE[1]), .out0(n179)
         );
  i0smdn022ab1n03x4 U250 ( .b(n53), .a(n52), .sa(INST_POINTER_3_), .o1(n55) );
  i0smd2na2ab1n03x5 U251 ( .c(n32), .b(n57), .a(n56), .sa(INST_POINTER_1_), 
        .out0(n60) );
  i0smdn022ab1n03x4 U252 ( .b(n60), .a(n59), .sa(SO), .o1(n62) );
  i0sao0013ab1n03x5 U253 ( .b(n62), .c(n31), .d(n61), .a(LAST_STATE_DONE), .o(
        n160) );
  i0smdn022ab1n03x4 U254 ( .b(n64), .a(n65), .sa(BIST_HOLD), .o1(n156) );
  i0snanp02ab1n06x5 U255 ( .a(n210), .b(n209), .o1(n255) );
  i0sao0112ab1n03x5 U256 ( .c(n71), .d(n144), .a(n70), .b(n69), .o(n187) );
  i0sinv030ab1n04x5 U257 ( .a(EXECUTE_INH_LAST_ADDR_CNT_REG0), .o1(n75) );
  i0snanb02ab1n03x5 U258 ( .a(n29), .b(n21), .out0(n83) );
  i0snona24ab1n03x5 U259 ( .d(n270), .e(n7), .a(n157), .b(n83), .c(n79), 
        .out0(n80) );
  i0saob012ab1n03x5 U260 ( .b(EDATA_CMD[0]), .c(n167), .a(n80), .out0(n178) );
  i0snanb02ab1n03x5 U261 ( .a(n83), .b(n157), .out0(n105) );
  i0snanb02ab1n03x5 U262 ( .a(n236), .b(n87), .out0(n88) );
  i0snona24ab1n03x5 U264 ( .d(n92), .e(n91), .a(n90), .b(n89), .c(n88), .out0(
        n190) );
  i0snana24ab1n03x5 U265 ( .d(n95), .e(n157), .a(n271), .b(n94), .c(n192), 
        .out0(n175) );
  i0sobai22ab1n03x5 U267 ( .a(WDATA_CMD[0]), .b(n273), .c(n33), .d(n35), 
        .out0(n99) );
  i0snana24ab1n03x5 U268 ( .d(n146), .e(n104), .a(n103), .b(n102), .c(n101), 
        .out0(n196) );
  i0snona24ab1n03x5 U269 ( .d(n34), .e(n112), .a(n111), .b(n110), .c(n109), 
        .out0(n208) );
  i0soabi13ab1n03x5 U270 ( .c(WDATA_CMD[3]), .d(n273), .a(n117), .b(n116), 
        .o1(n199) );
  i0snanb02ab1n03x5 U271 ( .a(n32), .b(n34), .out0(n138) );
  i0soabi13ab1n03x5 U272 ( .c(ADD_X1_CMD[0]), .d(n273), .a(n138), .b(n137), 
        .o1(n172) );
  i0snanb02ab1n03x5 U273 ( .a(n32), .b(n29), .out0(n232) );
  i0snanb02ab1n03x5 U274 ( .a(n273), .b(ADD_X1_CMD[1]), .out0(n128) );
  i0snanb03ab1n06x5 U275 ( .a(n136), .b(n135), .c(n134), .out0(n140) );
  i0saob012ab1n03x5 U276 ( .b(ADD_X1_CMD[2]), .c(n167), .a(n140), .out0(n205)
         );
  i0saob012ab1n03x5 U277 ( .b(ADD_Y1_CMD[2]), .c(n167), .a(n140), .out0(n202)
         );
  i0snanb02ab1n03x5 U278 ( .a(n152), .b(n8), .out0(n143) );
  i0snona24ab1n03x5 U279 ( .d(n150), .e(n151), .a(n149), .b(n148), .c(n147), 
        .out0(n166) );
  i0snona24ab1n03x5 U280 ( .d(n154), .e(n5), .a(n232), .b(n233), .c(n153), 
        .out0(n164) );
  i0snanb02ab1n03x5 U281 ( .a(n273), .b(OP_SELECT_CMD[1]), .out0(n158) );
  i0soa0112ab1n03x5 U282 ( .c(n182), .d(n171), .a(n170), .b(n13), .o(
        CHKBCI_PHASE) );
  i0sxorna2ab1n03x5 U283 ( .a(SO), .c(INST_POINTER_3_), .b(n10), .out0(n185)
         );
  i0snor042ab1n03x5 U284 ( .a(n23), .b(n185), .o1(n188) );
  i0snanb02ab1n03x5 U285 ( .a(n194), .b(n192), .out0(n234) );
  i0sxo2na2ab1n03x5 U286 ( .c(n195), .a(INST_POINTER_3_), .b(n10), .out0(n198)
         );
  i0saob012ab1n03x5 U287 ( .b(INST_POINTER_2_), .c(n251), .a(n218), .out0(n222) );
  i0saob012ab1n03x5 U288 ( .b(n229), .c(n228), .a(n225), .out0(
        NEXT_POINTER_TO_BUF_2_) );
  i0snanb02ab1n03x5 U289 ( .a(n273), .b(BRANCH_POINTER_1_), .out0(n242) );
  i0snona24ab1n03x5 U290 ( .d(n245), .e(n243), .a(n242), .b(n240), .c(n239), 
        .out0(n193) );
  i0snona24ab1n03x5 U291 ( .d(n268), .e(n267), .a(n266), .b(n265), .c(n258), 
        .out0(NEXT_POINTER_TO_BUF_1_) );
  i0snanb02ab1n02x5 U292 ( .a(RESET_REG_SETUP1), .b(BIST_ON), .out0(
        RESET_REG_SETUP1_BISTON) );
  i0sorn002ab1n02x5 U293 ( .a(ESOE_RESET), .b(RESET_REG_SETUP1), .o(
        INST_POINTER_SYNC_RESET) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller_ctl_comp ( BIST_CLK, 
        BIST_CLK_NG, BIST_EN, BIST_ON, BIST_ASYNC_RESETN, BIST_IDLE_PULSE, 
        CLEAR_DEFAULT, CLEAR, BIST_HOLD_R, BIST_SHIFT_SHORT, SI, GO, GO_EN, 
        CMP_EN, CMP_EN_R, BIST_COLLAR_GO, BIST_DONE, FL1, RESET_REG_SETUP1, 
        FL_CNT_MODE0_SYNC, TM, FREEZE_STOP_ERROR, SO, FREEZE_GO_ID, HOLD_EN, 
        BIST_STOP_ON_ERROR_EN, ERROR_CNT_ZERO, ESOE_RESET );
  input [39:0] BIST_COLLAR_GO;
  input BIST_CLK, BIST_CLK_NG, BIST_EN, BIST_ON, BIST_ASYNC_RESETN,
         BIST_IDLE_PULSE, CLEAR_DEFAULT, CLEAR, BIST_HOLD_R, BIST_SHIFT_SHORT,
         SI, GO, GO_EN, CMP_EN, CMP_EN_R, BIST_DONE, FL1, RESET_REG_SETUP1,
         FL_CNT_MODE0_SYNC, TM;
  output FREEZE_STOP_ERROR, SO, FREEZE_GO_ID, HOLD_EN, BIST_STOP_ON_ERROR_EN,
         ERROR_CNT_ZERO, ESOE_RESET;
  wire   n286, STOP_ON_ERROR_RST, ERROR_CNT_REG_14_, ERROR_CNT_REG_13_,
         ERROR_CNT_REG_12_, ERROR_CNT_REG_11_, ERROR_CNT_REG_10_,
         ERROR_CNT_REG_9_, ERROR_CNT_REG_8_, ERROR_CNT_REG_7_,
         ERROR_CNT_REG_6_, ERROR_CNT_REG_5_, ERROR_CNT_REG_4_,
         ERROR_CNT_REG_3_, ERROR_CNT_REG_2_, ERROR_CNT_REG_1_,
         ERROR_CNT_REG_0_, ERROR_CNT_LT2_REG, ERROR_CNT_REG_RST, BIST_DONE_R,
         N12, FL_CNT_REG_15_, FL_CNT_REG_14_, FL_CNT_REG_13_, FL_CNT_REG_12_,
         FL_CNT_REG_11_, FL_CNT_REG_10_, FL_CNT_REG_9_, FL_CNT_REG_8_,
         FL_CNT_REG_7_, FL_CNT_REG_6_, FL_CNT_REG_5_, FL_CNT_REG_4_,
         FL_CNT_REG_3_, FL_CNT_REG_2_, FL_CNT_REG_1_, FL_CNT_REG_0_,
         FL1_RETIME1, FL1_STICKY_R, N99, FL1_SYNC, n266, n267, n141, n142,
         n145, n146, n149, n150, n153, n154, n157, n158, n161, n162, n165,
         n166, n169, n170, n173, n174, n177, n178, n181, n182, n185, n186,
         n189, n190, n193, n194, n197, n202, n203, n206, n209, n212, n213,
         n216, n219, n222, n225, n228, n231, n234, n237, n240, n243, n246,
         n249, n252, n255, n258, n261, n270, n271, n1, n2, n3, n4, n5, n6, n7,
         n8, n9, n10, n11, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36,
         n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,
         n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92,
         n93, n94, n95, n96, n97, n98, n990, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126,
         n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137,
         n138, n139, n140, n143, n144, n147, n148, n151, n152, n155, n156,
         n159, n160, n163, n164, n167, n168, n171, n172, n175, n176, n179,
         n180, n183, n184, n187, n188, n191, n192, n195, n196, n198, n199,
         n200, n201, n204, n205, n207, n208, n210, n211, n214, n215, n217,
         n218, n220, n221, n223, n224, n226, n227, n229, n230, n232, n233,
         n235, n236, n238, n239, n241, n242, n244, n245, n247, n248, n250,
         n251, n253, n254, n256, n257, n259, n260, n262, n263, n264, n265,
         n268, n269, n272, n273, n274, n275, n276, n277, n278, n279, n280,
         n281, n282, n283, n284, SYNOPSYS_UNCONNECTED_1,
         SYNOPSYS_UNCONNECTED_2, SYNOPSYS_UNCONNECTED_3,
         SYNOPSYS_UNCONNECTED_4, SYNOPSYS_UNCONNECTED_5,
         SYNOPSYS_UNCONNECTED_6, SYNOPSYS_UNCONNECTED_7,
         SYNOPSYS_UNCONNECTED_8, SYNOPSYS_UNCONNECTED_9,
         SYNOPSYS_UNCONNECTED_10, SYNOPSYS_UNCONNECTED_11,
         SYNOPSYS_UNCONNECTED_12, SYNOPSYS_UNCONNECTED_13,
         SYNOPSYS_UNCONNECTED_14, SYNOPSYS_UNCONNECTED_15,
         SYNOPSYS_UNCONNECTED_16, SYNOPSYS_UNCONNECTED_17,
         SYNOPSYS_UNCONNECTED_18, SYNOPSYS_UNCONNECTED_19,
         SYNOPSYS_UNCONNECTED_20, SYNOPSYS_UNCONNECTED_21,
         SYNOPSYS_UNCONNECTED_22, SYNOPSYS_UNCONNECTED_23,
         SYNOPSYS_UNCONNECTED_24, SYNOPSYS_UNCONNECTED_25,
         SYNOPSYS_UNCONNECTED_26, SYNOPSYS_UNCONNECTED_27,
         SYNOPSYS_UNCONNECTED_28, SYNOPSYS_UNCONNECTED_29,
         SYNOPSYS_UNCONNECTED_30, SYNOPSYS_UNCONNECTED_31,
         SYNOPSYS_UNCONNECTED_32, SYNOPSYS_UNCONNECTED_33,
         SYNOPSYS_UNCONNECTED_34, SYNOPSYS_UNCONNECTED_35,
         SYNOPSYS_UNCONNECTED_36, SYNOPSYS_UNCONNECTED_37,
         SYNOPSYS_UNCONNECTED_38, SYNOPSYS_UNCONNECTED_39;

  i0sfmn203ab1d03x5 tessent_persistent_cell_MBIST_NTC_RETIMING_CELL_FL1 ( 
        .clk(BIST_CLK_NG), .d(FL1), .rb(n8), .o(FL1_RETIME1) );
  i0sfvz003ab1d03x6 BIST_DONE_R_reg ( .si(n267), .d(BIST_DONE), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(BIST_DONE_R), .so(SYNOPSYS_UNCONNECTED_1)
         );
  i0sfvz003ab1d03x6 FL1_STICKY_R_reg ( .si(n267), .d(N99), .ssb(n266), .clk(
        BIST_CLK_NG), .rb(n8), .o(FL1_STICKY_R), .so(SYNOPSYS_UNCONNECTED_2)
         );
  i0sfvz003ab1d03x6 FL1_SYNC_reg ( .si(n267), .d(FL1_STICKY_R), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(FL1_SYNC), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_0 ( .si(n267), .d(n261), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_0_), .so(SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_1 ( .si(n267), .d(n258), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_1_), .so(SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_2 ( .si(n267), .d(n255), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_2_), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_3 ( .si(n267), .d(n252), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_3_), .so(SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_4 ( .si(n267), .d(n249), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_4_), .so(SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_5 ( .si(n267), .d(n246), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_5_), .so(SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_6 ( .si(n267), .d(n243), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_6_), .so(SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_7 ( .si(n267), .d(n240), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_7_), .so(SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_8 ( .si(n267), .d(n237), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_8_), .so(SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_9 ( .si(n267), .d(n234), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_9_), .so(SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_10 ( .si(n267), .d(n231), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_10_), .so(SYNOPSYS_UNCONNECTED_14)
         );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_11 ( .si(n267), .d(n228), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_11_), .so(SYNOPSYS_UNCONNECTED_15)
         );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_12 ( .si(n267), .d(n225), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_12_), .so(SYNOPSYS_UNCONNECTED_16)
         );
  i0sfvz003ab1d03x6 FL_CNT_REG_reg_13 ( .si(n267), .d(n222), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_13_), .so(SYNOPSYS_UNCONNECTED_17)
         );
  i0sfvz003ab1d03x6 ERROR_CNT_LT2_REG_reg ( .si(n267), .d(n209), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_LT2_REG), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfvz003ab1d03x6 STOP_ON_ERROR_reg ( .si(n267), .d(n202), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(n286), .so(SYNOPSYS_UNCONNECTED_19) );
  i0sfvz003ab1d03x6 ESOE_RESET_reg ( .si(n267), .d(N12), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(ESOE_RESET), .so(SYNOPSYS_UNCONNECTED_20) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_0 ( .si(n267), .d(n197), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_0_), .so(
        SYNOPSYS_UNCONNECTED_21) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_1 ( .si(n267), .d(n193), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_1_), .so(
        SYNOPSYS_UNCONNECTED_22) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_2 ( .si(n267), .d(n189), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_2_), .so(
        SYNOPSYS_UNCONNECTED_23) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_4 ( .si(n267), .d(n181), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_4_), .so(
        SYNOPSYS_UNCONNECTED_24) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_6 ( .si(n267), .d(n173), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_6_), .so(
        SYNOPSYS_UNCONNECTED_25) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_8 ( .si(n267), .d(n165), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_8_), .so(
        SYNOPSYS_UNCONNECTED_26) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_10 ( .si(n267), .d(n157), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_10_), .so(
        SYNOPSYS_UNCONNECTED_27) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_11 ( .si(n267), .d(n153), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_11_), .so(
        SYNOPSYS_UNCONNECTED_28) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_12 ( .si(n267), .d(n149), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_12_), .so(
        SYNOPSYS_UNCONNECTED_29) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_13 ( .si(n267), .d(n145), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_13_), .so(
        SYNOPSYS_UNCONNECTED_30) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_14 ( .si(n267), .d(n141), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_14_), .so(
        SYNOPSYS_UNCONNECTED_31) );
  i0snorb02ab1n03x4 U232 ( .a(n203), .b(STOP_ON_ERROR_RST), .out0(n202) );
  i0snorb02ab1n02x5 U238 ( .a(n271), .b(ERROR_CNT_REG_RST), .out0(n209) );
  i0sfvz003ab1d02x6 FL_CNT_REG_reg_14 ( .si(n267), .d(n219), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_14_), .so(SYNOPSYS_UNCONNECTED_32)
         );
  i0snorb02ab1n03x4 U224 ( .a(n194), .b(ERROR_CNT_REG_RST), .out0(n193) );
  i0sfvz003ab1d18x5 FL_CNT_REG_reg_15 ( .si(n267), .d(n216), .ssb(n266), .clk(
        BIST_CLK), .rb(n8), .o(FL_CNT_REG_15_), .so(SYNOPSYS_UNCONNECTED_33)
         );
  i0snorb02ab1n03x4 U221 ( .a(n190), .b(ERROR_CNT_REG_RST), .out0(n189) );
  i0snorb02ab1n03x4 U215 ( .a(n182), .b(ERROR_CNT_REG_RST), .out0(n181) );
  i0snorb02ab1n03x4 U209 ( .a(n174), .b(ERROR_CNT_REG_RST), .out0(n173) );
  i0snorb02ab1n03x4 U203 ( .a(n166), .b(ERROR_CNT_REG_RST), .out0(n165) );
  i0snorb02ab1n03x4 U197 ( .a(n158), .b(ERROR_CNT_REG_RST), .out0(n157) );
  i0snorb02ab1n03x4 U191 ( .a(n150), .b(ERROR_CNT_REG_RST), .out0(n149) );
  i0sfvz003ab1d03x6 ERROR_CNT_REG_reg_15 ( .si(n267), .d(n212), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(SO), .so(SYNOPSYS_UNCONNECTED_34) );
  i0sfvz003ab1d09x5 ERROR_CNT_REG_reg_9 ( .si(n267), .d(n161), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_9_), .so(
        SYNOPSYS_UNCONNECTED_35) );
  i0sfvz003ab1d09x5 ERROR_CNT_REG_reg_5 ( .si(n267), .d(n177), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_5_), .so(
        SYNOPSYS_UNCONNECTED_36) );
  i0snorb02ab1n03x4 U212 ( .a(n178), .b(ERROR_CNT_REG_RST), .out0(n177) );
  i0sfvz003ab1d09x5 ERROR_CNT_REG_reg_7 ( .si(n267), .d(n169), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_7_), .so(
        SYNOPSYS_UNCONNECTED_37) );
  i0snorb02ab1n03x4 U206 ( .a(n170), .b(ERROR_CNT_REG_RST), .out0(n169) );
  i0snorb02ab1n03x4 U241 ( .a(n213), .b(ERROR_CNT_REG_RST), .out0(n212) );
  i0sfvz003ab1d03x6 FREEZE_STOP_ERROR_reg ( .si(n267), .d(n206), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(FREEZE_STOP_ERROR), .so(
        SYNOPSYS_UNCONNECTED_38) );
  i0snorb02ab1n03x4 U185 ( .a(n142), .b(ERROR_CNT_REG_RST), .out0(n141) );
  i0snorb02ab1n03x4 U235 ( .a(n270), .b(BIST_IDLE_PULSE), .out0(n206) );
  i0snorb02ab1n02x7 U227 ( .a(n284), .b(ERROR_CNT_REG_RST), .out0(n197) );
  i0snorb02ab1n03x4 U194 ( .a(n154), .b(ERROR_CNT_REG_RST), .out0(n153) );
  i0snorb02ab1n03x4 U188 ( .a(n146), .b(ERROR_CNT_REG_RST), .out0(n145) );
  i0snorb02ab1n02x7 U218 ( .a(n186), .b(ERROR_CNT_REG_RST), .out0(n185) );
  i0sfvz003ab1d09x5 ERROR_CNT_REG_reg_3 ( .si(n267), .d(n185), .ssb(n266), 
        .clk(BIST_CLK), .rb(n8), .o(ERROR_CNT_REG_3_), .so(
        SYNOPSYS_UNCONNECTED_39) );
  i0snorb02ab1n02x7 U200 ( .a(n162), .b(ERROR_CNT_REG_RST), .out0(n161) );
  i0sinv020ab1n04x5 U3 ( .a(n167), .o1(n1) );
  i0sinv020ab1n04x5 U4 ( .a(n167), .o1(n259) );
  i0soaib13ab1n03x5 U5 ( .d(ERROR_CNT_REG_8_), .c(n11), .a(n238), .b(n236), 
        .o1(n162) );
  i0smdn022ab1n02x5 U6 ( .b(n235), .a(n242), .sa(ERROR_CNT_REG_9_), .o1(n236)
         );
  i0snanp02ab1n03x5 U7 ( .a(RESET_REG_SETUP1), .b(n286), .o1(n93) );
  i0smdn022ab1n03x4 U8 ( .b(n272), .a(n275), .sa(ERROR_CNT_REG_13_), .o1(n273)
         );
  i0sinv000ab1n03x5 U9 ( .a(n265), .o1(n272) );
  i0sbff000ab1n03x5 U10 ( .a(n160), .o(n2) );
  i0sinv040ab1n08x5 U11 ( .a(n160), .o1(n268) );
  i0sobai22ab1n02x7 U12 ( .a(FL_CNT_REG_0_), .b(n159), .c(n2), .d(n13), .out0(
        n163) );
  i0smbn022ab1n02x5 U13 ( .b(n1), .a(n2), .sa(ERROR_CNT_REG_0_), .o(n6) );
  i0snanp02ab1n06x5 U14 ( .a(n115), .b(n114), .o1(n160) );
  i0snona24ab1n03x5 U15 ( .d(n286), .e(n110), .a(GO_EN), .b(CMP_EN), .c(n3), 
        .out0(n112) );
  i0soabi13ab1n02x5 U16 ( .c(ERROR_CNT_REG_12_), .d(n11), .a(n274), .b(n273), 
        .o1(n146) );
  i0smdn022ab1n02x5 U17 ( .b(n26), .a(n29), .sa(FL_CNT_REG_2_), .o1(n27) );
  i0sinv040ab1n03x5 U18 ( .a(n29), .o1(n30) );
  i0saob012ab1n06x5 U19 ( .b(n88), .c(n164), .a(n25), .out0(n29) );
  i0sinv020ab1n08x5 U20 ( .a(n59), .o1(n88) );
  i0sinv000ab1n12x5 U21 ( .a(n17), .o1(n92) );
  i0snanb02ab1n06x5 U22 ( .a(n93), .b(n16), .out0(n17) );
  i0snanp03ab1n06x5 U23 ( .a(n116), .b(n11), .c(n268), .o1(n159) );
  i0snand03ab1n02x5 U24 ( .a(BIST_COLLAR_GO[15]), .b(BIST_COLLAR_GO[16]), .c(
        n990), .o1(n104) );
  i0snand03ab1n02x5 U25 ( .a(BIST_COLLAR_GO[30]), .b(BIST_COLLAR_GO[31]), .c(
        n94), .o1(n109) );
  i0snand03ab1n02x5 U26 ( .a(BIST_COLLAR_GO[5]), .b(BIST_COLLAR_GO[6]), .c(
        n101), .o1(n102) );
  i0snand42ab1n04x5 U27 ( .a(n138), .b(n156), .o1(ERROR_CNT_REG_RST) );
  i0snand03ab1n02x5 U28 ( .a(BIST_COLLAR_GO[20]), .b(BIST_COLLAR_GO[21]), .c(
        n96), .o1(n107) );
  i0sinv020ab1n02x5 U29 ( .a(n15), .o1(n14) );
  i0sinv020ab1n02x5 U30 ( .a(FL_CNT_REG_2_), .o1(n175) );
  i0snand02ab1n02x5 U31 ( .a(n4), .b(FL_CNT_REG_9_), .o1(n68) );
  i0sinv000ab1n02x5 U32 ( .a(n54), .o1(n28) );
  i0sinv020ab1n02x5 U33 ( .a(ERROR_CNT_REG_12_), .o1(n132) );
  i0sinv020ab1n02x5 U34 ( .a(ERROR_CNT_REG_11_), .o1(n131) );
  i0snanb02ab1n03x5 U35 ( .a(n269), .b(n259), .out0(n265) );
  i0snanb02ab1n03x5 U36 ( .a(n204), .b(n259), .out0(n201) );
  i0snona23ab1n03x5 U37 ( .c(n113), .d(n10), .a(n112), .b(n111), .out0(n115)
         );
  i0sinv030ab1n02x5 U38 ( .a(n42), .o1(n43) );
  i0snand02ab1n02x5 U39 ( .a(FL_CNT_REG_3_), .b(FL_CNT_REG_4_), .o1(n41) );
  i0smdn022ab1n02x5 U40 ( .b(n66), .a(n69), .sa(FL_CNT_REG_11_), .o1(n67) );
  i0smdn022ab1n02x5 U41 ( .b(n63), .a(n65), .sa(FL_CNT_REG_10_), .o1(n64) );
  i0smdn022ab1n03x4 U42 ( .b(n56), .a(n60), .sa(FL_CNT_REG_8_), .o1(n57) );
  i0smdn022ab1n02x4 U43 ( .b(n88), .a(n19), .sa(FL_CNT_REG_0_), .o1(n20) );
  i0sinv000ab1n02x5 U44 ( .a(FREEZE_STOP_ERROR), .o1(n13) );
  i0snor022ab1n02x5 U45 ( .a(FREEZE_STOP_ERROR), .b(n14), .o1(n3) );
  i0soaib13ab1n03x5 U46 ( .d(ERROR_CNT_REG_14_), .c(n11), .a(n137), .b(n136), 
        .o1(n213) );
  i0sinv030ab1n02x5 U47 ( .a(n232), .o1(n235) );
  i0soabi13ab1n02x5 U48 ( .c(ERROR_CNT_REG_6_), .d(n11), .a(n223), .b(n221), 
        .o1(n170) );
  i0sinv030ab1n02x5 U49 ( .a(n201), .o1(n205) );
  i0sinv020ab1n04x5 U50 ( .a(n3), .o1(HOLD_EN) );
  i0snana24ab1n02x5 U51 ( .d(ERROR_CNT_REG_11_), .e(n10), .a(n263), .b(n265), 
        .c(n262), .out0(n150) );
  i0snanb02ab1n12x5 U52 ( .a(n250), .b(n268), .out0(n167) );
  i0smdn022ab1n02x5 U53 ( .b(n31), .a(n33), .sa(FL_CNT_REG_3_), .o1(n32) );
  i0snand03ab1n02x5 U54 ( .a(BIST_COLLAR_GO[10]), .b(BIST_COLLAR_GO[11]), .c(
        n98), .o1(n105) );
  i0saob012ab1n06x5 U55 ( .b(n88), .c(n183), .a(n34), .out0(n37) );
  i0sinv040ab1n03x5 U56 ( .a(n37), .o1(n38) );
  i0sinv040ab1n03x5 U57 ( .a(n33), .o1(n34) );
  i0smdn022ab1n02x5 U58 ( .b(n35), .a(n37), .sa(FL_CNT_REG_4_), .o1(n36) );
  i0snand03ab1n02x5 U59 ( .a(BIST_COLLAR_GO[35]), .b(BIST_COLLAR_GO[36]), .c(
        n95), .o1(n108) );
  i0sinv030ab1n02x5 U60 ( .a(n24), .o1(n25) );
  i0smdn022ab1n02x4 U61 ( .b(n22), .a(n24), .sa(FL_CNT_REG_1_), .o1(n23) );
  i0sinv040ab1n08x5 U62 ( .a(n159), .o1(n278) );
  i0snand42ab1n02x5 U63 ( .a(FL_CNT_REG_7_), .b(n278), .o1(n221) );
  i0snanb02ab1n03x5 U64 ( .a(n279), .b(n278), .out0(n282) );
  i0snanb02ab1n03x5 U65 ( .a(n247), .b(n278), .out0(n256) );
  i0snanb02ab1n03x5 U66 ( .a(n117), .b(n278), .out0(n137) );
  i0snanb02ab1n03x5 U67 ( .a(n200), .b(n278), .out0(n208) );
  i0snanb02ab1n03x5 U68 ( .a(n230), .b(n278), .out0(n238) );
  i0snanb02ab1n03x5 U69 ( .a(n164), .b(n278), .out0(n172) );
  i0snanb02ab1n02x5 U70 ( .a(n264), .b(n278), .out0(n274) );
  i0snanb02ab1n02x5 U71 ( .a(n183), .b(n278), .out0(n192) );
  i0soabi12ab1n02x5 U72 ( .b(FL_CNT_REG_6_), .c(n59), .a(n47), .out0(n48) );
  i0saob012ab1n06x5 U73 ( .b(n88), .c(n195), .a(n38), .out0(n42) );
  i0saob012ab1n06x5 U74 ( .b(n88), .c(n175), .a(n30), .out0(n33) );
  i0soaib13ab1n02x5 U75 ( .d(ERROR_CNT_REG_10_), .c(n11), .a(n256), .b(n254), 
        .o1(n154) );
  i0smdn022ab1n02x4 U76 ( .b(n253), .a(n260), .sa(ERROR_CNT_REG_11_), .o1(n254) );
  i0sorn008ab1d04x5 U77 ( .a(n109), .b(n108), .c(n107), .d(n106), .e(n105), 
        .f(n104), .g(n103), .h(n102), .o(n148) );
  i0sinv040ab1n03x5 U78 ( .a(n275), .o1(n276) );
  i0snand43ab1n02x5 U79 ( .a(BIST_COLLAR_GO[0]), .b(BIST_COLLAR_GO[1]), .c(
        n100), .o1(n103) );
  i0snand43ab1n02x5 U80 ( .a(BIST_COLLAR_GO[25]), .b(BIST_COLLAR_GO[26]), .c(
        n97), .o1(n106) );
  i0smdn022ab1n03x4 U81 ( .b(n220), .a(n226), .sa(ERROR_CNT_REG_7_), .o1(n223)
         );
  i0sinv020ab1n02x5 U82 ( .a(n184), .o1(n188) );
  i0sinv020ab1n03x5 U83 ( .a(BIST_SHIFT_SHORT), .o1(n11) );
  i0sinv000ab1n03x5 U84 ( .a(n248), .o1(n253) );
  i0smkn022ab1n02x5 U85 ( .b(n286), .a(SI), .sa(n10), .o(n203) );
  i0sinv000ab1n02x5 U86 ( .a(FL_CNT_REG_4_), .o1(n195) );
  i0sinv000ab1n04x5 U87 ( .a(n250), .o1(n277) );
  i0sinv020ab1n04x5 U88 ( .a(ERROR_CNT_REG_10_), .o1(n129) );
  i0sao0012ab1n03x5 U89 ( .b(n88), .c(n224), .a(n60), .o(n62) );
  i0sao0012ab1n03x5 U90 ( .b(n88), .c(n230), .a(n62), .o(n65) );
  i0saoai13ab1n03x5 U91 ( .c(ERROR_CNT_REG_1_), .d(n277), .b(n176), .a(
        ERROR_CNT_REG_2_), .o1(n179) );
  i0sinv020ab1n04x5 U92 ( .a(ERROR_CNT_REG_9_), .o1(n128) );
  i0sinv000ab1n02x5 U93 ( .a(n217), .o1(n220) );
  i0sinv020ab1n02x5 U94 ( .a(n281), .o1(n135) );
  i0sinv040ab1n03x5 U95 ( .a(n86), .o1(n87) );
  i0snand22ab1n03x5 U96 ( .a(n79), .b(n81), .o1(n69) );
  i0snand22ab1n03x5 U97 ( .a(n80), .b(n70), .o1(n72) );
  i0saoai13ab1n02x5 U98 ( .c(ERROR_CNT_REG_11_), .d(n277), .b(n260), .a(
        ERROR_CNT_REG_12_), .o1(n262) );
  i0saoai13ab1n02x5 U99 ( .c(ERROR_CNT_REG_9_), .d(n277), .b(n242), .a(
        ERROR_CNT_REG_10_), .o1(n244) );
  i0saoai13ab1n02x5 U100 ( .c(ERROR_CNT_REG_7_), .d(n277), .b(n226), .a(
        ERROR_CNT_REG_8_), .o1(n227) );
  i0saoai13ab1n02x5 U101 ( .c(ERROR_CNT_REG_5_), .d(n277), .b(n211), .a(
        ERROR_CNT_REG_6_), .o1(n214) );
  i0saoai13ab1n02x5 U102 ( .c(ERROR_CNT_REG_3_), .d(n277), .b(n196), .a(
        ERROR_CNT_REG_4_), .o1(n198) );
  i0snanb03ab1n02x5 U103 ( .a(FL_CNT_MODE0_SYNC), .b(n286), .c(
        RESET_REG_SETUP1), .out0(n18) );
  i0sinv000ab1n02x5 U104 ( .a(n46), .o1(n31) );
  i0snorb03ab1n03x5 U105 ( .a(n133), .b(ERROR_CNT_REG_14_), .c(
        ERROR_CNT_REG_13_), .out0(n7) );
  i0sorn008ab1d02x5 U106 ( .a(ERROR_CNT_REG_5_), .b(ERROR_CNT_REG_6_), .c(
        ERROR_CNT_REG_7_), .d(ERROR_CNT_REG_8_), .e(ERROR_CNT_REG_9_), .f(
        ERROR_CNT_REG_10_), .g(ERROR_CNT_REG_3_), .h(ERROR_CNT_REG_4_), .o(
        n139) );
  i0sinv000ab1n02x5 U107 ( .a(n78), .o1(n74) );
  i0sinv000ab1n02x5 U108 ( .a(n147), .o1(ERROR_CNT_ZERO) );
  i0snanp02ab1n02x5 U109 ( .a(ERROR_CNT_REG_13_), .b(n10), .o1(n280) );
  i0smtn022ab1n02x5 U110 ( .b(n44), .a(n47), .sa(FL_CNT_REG_6_), .o1(n45) );
  i0sinv000ab1n02x5 U111 ( .a(FL_CNT_MODE0_SYNC), .o1(n16) );
  i0smtn022ab1n02x5 U112 ( .b(n39), .a(n42), .sa(FL_CNT_REG_5_), .o1(n40) );
  i0snorp02ab1n02x5 U113 ( .a(n239), .b(n68), .o1(n66) );
  i0snorp02ab1n02x5 U114 ( .a(n183), .b(n46), .o1(n35) );
  i0sinv000ab1n02x5 U115 ( .a(n68), .o1(n63) );
  i0snanp03ab1n02x5 U116 ( .a(n88), .b(FL_CNT_REG_2_), .c(n28), .o1(n46) );
  i0smd2na2ab1n02x5 U117 ( .c(n155), .b(FREEZE_STOP_ERROR), .a(n286), .sa(n10), 
        .out0(n270) );
  i0snorp02ab1n02x5 U118 ( .a(n59), .b(n54), .o1(n26) );
  i0snorp02ab1n02x5 U119 ( .a(n59), .b(n58), .o1(n56) );
  i0snorp02ab1n02x5 U120 ( .a(n21), .b(n59), .o1(n22) );
  i0sinv000ab1n02x5 U121 ( .a(FL_CNT_REG_0_), .o1(n21) );
  i0sinv000ab1n02x5 U122 ( .a(FL_CNT_REG_1_), .o1(n164) );
  i0sinv020ab1n03x5 U123 ( .a(FL_CNT_REG_8_), .o1(n224) );
  i0sinv020ab1n03x5 U124 ( .a(FL_CNT_REG_9_), .o1(n230) );
  i0sinv020ab1n03x5 U125 ( .a(FL_CNT_REG_13_), .o1(n264) );
  i0sinv000ab1n06x5 U126 ( .a(n9), .o1(n8) );
  i0sinv000ab1n03x5 U127 ( .a(BIST_ASYNC_RESETN), .o1(n9) );
  i0sinv000ab1n03x5 U128 ( .a(n11), .o1(n10) );
  i0sinv000ab1n03x5 U129 ( .a(n65), .o1(n81) );
  i0sinv000ab1n03x5 U130 ( .a(n72), .o1(n73) );
  i0soai012ab1n02x5 U131 ( .b(n251), .c(n250), .a(n268), .o1(n260) );
  i0snorp02ab1n02x5 U132 ( .a(HOLD_EN), .b(n118), .o1(n113) );
  i0sinv000ab1n02x5 U133 ( .a(n118), .o1(n116) );
  i0soai012ab1n02x5 U134 ( .b(n7), .c(n250), .a(n268), .o1(n134) );
  i0snorp03ab1n02x5 U135 ( .a(n224), .b(n59), .c(n58), .o1(n4) );
  i0snor043ab1n03x5 U136 ( .a(n247), .b(n239), .c(n68), .o1(n5) );
  i0sinv000ab1n03x5 U137 ( .a(BIST_HOLD_R), .o1(n15) );
  i0sinv000ab1n02x5 U138 ( .a(n269), .o1(n133) );
  i0snanp03ab1n02x5 U139 ( .a(CLEAR_DEFAULT), .b(n3), .c(n11), .o1(n156) );
  i0snand42ab1n02x5 U140 ( .a(n92), .b(ERROR_CNT_REG_7_), .o1(n50) );
  i0snorb03ab1n02x5 U141 ( .a(FL_CNT_REG_6_), .b(n51), .c(n46), .out0(n49) );
  i0snorp02ab1n02x5 U142 ( .a(n51), .b(n46), .o1(n44) );
  i0sinv030ab1n02x5 U143 ( .a(n85), .o1(n76) );
  i0sorn002ab1n03x5 U144 ( .a(n163), .b(n6), .o(n284) );
  i0snorp02ab1n02x5 U145 ( .a(ERROR_CNT_REG_0_), .b(n167), .o1(n168) );
  i0snorp02ab1n02x5 U146 ( .a(n41), .b(n46), .o1(n39) );
  i0soai012ab1n03x5 U147 ( .b(CMP_EN_R), .c(n147), .a(BIST_ON), .o1(n110) );
  i0snanb03ab1n02x5 U148 ( .a(ERROR_CNT_REG_0_), .b(n286), .c(
        ERROR_CNT_LT2_REG), .out0(n147) );
  i0snona32ab1n06x5 U149 ( .b(n175), .c(n54), .d(n53), .a(n52), .out0(n58) );
  i0snand02ab1n02x5 U150 ( .a(FL_CNT_REG_6_), .b(FL_CNT_REG_7_), .o1(n53) );
  i0sinv000ab1n03x5 U151 ( .a(BIST_ON), .o1(n151) );
  i0sinv000ab1n02x5 U152 ( .a(GO_EN), .o1(n152) );
  i0sinv000ab1n02x5 U153 ( .a(n55), .o1(n19) );
  i0snanb03ab1n02x5 U154 ( .a(n10), .b(GO_EN), .c(CMP_EN), .out0(FREEZE_GO_ID)
         );
  i0sinv000ab1n02x5 U155 ( .a(ESOE_RESET), .o1(n138) );
  i0snano32ab1n02x5 U156 ( .b(n144), .c(n143), .d(n140), .a(n139), .out0(n271)
         );
  i0snorp02ab1n02x5 U157 ( .a(ERROR_CNT_REG_11_), .b(ERROR_CNT_REG_12_), .o1(
        n144) );
  i0snorp02ab1n02x5 U158 ( .a(ERROR_CNT_REG_2_), .b(ERROR_CNT_REG_1_), .o1(
        n140) );
  i0sinv000ab1n02x5 U159 ( .a(n156), .o1(STOP_ON_ERROR_RST) );
  i0sinv000ab1n02x5 U160 ( .a(FL_CNT_REG_3_), .o1(n183) );
  i0sinv000ab1n02x5 U161 ( .a(FL_CNT_REG_10_), .o1(n239) );
  i0snano32ab1n02x4 U162 ( .b(BIST_DONE), .c(n286), .d(FL_CNT_MODE0_SYNC), .a(
        BIST_DONE_R), .out0(N12) );
  i0sinv000ab1n02x5 U163 ( .a(FL_CNT_REG_11_), .o1(n247) );
  i0sinv000ab1n02x5 U164 ( .a(FL_CNT_REG_5_), .o1(n200) );
  i0snorp03ab1n02x5 U165 ( .a(ERROR_CNT_REG_14_), .b(SO), .c(ERROR_CNT_REG_13_), .o1(n143) );
  i0sinv000ab1n02x5 U166 ( .a(FL_CNT_REG_6_), .o1(n210) );
  i0sinv000ab1n02x5 U167 ( .a(FL_CNT_REG_12_), .o1(n257) );
  i0sinv000ab1n03x5 U168 ( .a(FL_CNT_REG_14_), .o1(n279) );
  i0sinv000ab1n03x5 U169 ( .a(FL_CNT_REG_15_), .o1(n117) );
  i0soab012ab1n02x4 U170 ( .b(FL1_RETIME1), .c(FL1_STICKY_R), .a(
        RESET_REG_SETUP1), .out0(N99) );
  i0stihi00ab1n02x5 U171 ( .o(n266) );
  i0stilo00ab1n02x5 U172 ( .o(n267) );
  i0snanb03ab1n06x5 U173 ( .a(FL1_SYNC), .b(FL1_STICKY_R), .c(n18), .out0(n59)
         );
  i0snanb02ab1n03x5 U174 ( .a(n92), .b(n59), .out0(n55) );
  i0saob012ab1n03x5 U175 ( .b(n92), .c(ERROR_CNT_REG_0_), .a(n20), .out0(n261)
         );
  i0saob012ab1n03x5 U176 ( .b(n88), .c(n21), .a(n55), .out0(n24) );
  i0saob012ab1n03x5 U177 ( .b(n92), .c(ERROR_CNT_REG_1_), .a(n23), .out0(n258)
         );
  i0snanp02ab1n06x5 U178 ( .a(FL_CNT_REG_0_), .b(FL_CNT_REG_1_), .o1(n54) );
  i0saob012ab1n03x5 U179 ( .b(n92), .c(ERROR_CNT_REG_2_), .a(n27), .out0(n255)
         );
  i0saob012ab1n03x5 U180 ( .b(n92), .c(ERROR_CNT_REG_3_), .a(n32), .out0(n252)
         );
  i0saob012ab1n03x5 U181 ( .b(n92), .c(ERROR_CNT_REG_4_), .a(n36), .out0(n249)
         );
  i0saob012ab1n03x5 U182 ( .b(n92), .c(ERROR_CNT_REG_5_), .a(n40), .out0(n246)
         );
  i0snanb02ab1n03x5 U183 ( .a(n41), .b(FL_CNT_REG_5_), .out0(n51) );
  i0saob012ab1n03x5 U184 ( .b(n88), .c(n200), .a(n43), .out0(n47) );
  i0saob012ab1n03x5 U186 ( .b(n92), .c(ERROR_CNT_REG_6_), .a(n45), .out0(n243)
         );
  i0smd2na2ab1n03x5 U187 ( .c(n50), .b(n49), .a(n48), .sa(FL_CNT_REG_7_), 
        .out0(n240) );
  i0sinv030ab1n04x5 U189 ( .a(n51), .o1(n52) );
  i0saob012ab1n03x5 U190 ( .b(n88), .c(n58), .a(n55), .out0(n60) );
  i0saob012ab1n03x5 U192 ( .b(n92), .c(ERROR_CNT_REG_8_), .a(n57), .out0(n237)
         );
  i0smdn022ab1n03x4 U193 ( .b(n4), .a(n62), .sa(FL_CNT_REG_9_), .o1(n61) );
  i0saob012ab1n03x5 U195 ( .b(n92), .c(ERROR_CNT_REG_9_), .a(n61), .out0(n234)
         );
  i0saob012ab1n03x5 U196 ( .b(n92), .c(ERROR_CNT_REG_10_), .a(n64), .out0(n231) );
  i0snanb02ab1n03x5 U198 ( .a(FL_CNT_REG_10_), .b(n88), .out0(n79) );
  i0saob012ab1n03x5 U199 ( .b(n92), .c(ERROR_CNT_REG_11_), .a(n67), .out0(n228) );
  i0snanb02ab1n03x5 U201 ( .a(FL_CNT_REG_11_), .b(n88), .out0(n80) );
  i0sinv030ab1n04x5 U202 ( .a(n69), .o1(n70) );
  i0smdn022ab1n03x4 U204 ( .b(n5), .a(n72), .sa(FL_CNT_REG_12_), .o1(n71) );
  i0saob012ab1n03x5 U205 ( .b(n92), .c(ERROR_CNT_REG_12_), .a(n71), .out0(n225) );
  i0snanp02ab1n06x5 U207 ( .a(n5), .b(FL_CNT_REG_12_), .o1(n85) );
  i0snanb02ab1n03x5 U208 ( .a(FL_CNT_REG_12_), .b(n88), .out0(n78) );
  i0snanb02ab1n03x5 U210 ( .a(n74), .b(n73), .out0(n75) );
  i0smdn022ab1n03x4 U211 ( .b(n76), .a(n75), .sa(FL_CNT_REG_13_), .o1(n77) );
  i0saob012ab1n03x5 U213 ( .b(n92), .c(ERROR_CNT_REG_13_), .a(n77), .out0(n222) );
  i0snor042ab1n03x5 U214 ( .a(n264), .b(n85), .o1(n83) );
  i0snana24ab1n03x5 U216 ( .d(n88), .e(n264), .a(n80), .b(n79), .c(n78), 
        .out0(n82) );
  i0snanb02ab1n03x5 U217 ( .a(n82), .b(n81), .out0(n86) );
  i0smdn022ab1n03x4 U219 ( .b(n83), .a(n86), .sa(FL_CNT_REG_14_), .o1(n84) );
  i0saob012ab1n03x5 U220 ( .b(n92), .c(ERROR_CNT_REG_14_), .a(n84), .out0(n219) );
  i0snano22ab1n03x7 U222 ( .b(FL_CNT_REG_13_), .c(FL_CNT_REG_14_), .a(n85), 
        .out0(n90) );
  i0saob012ab1n03x5 U223 ( .b(n88), .c(n279), .a(n87), .out0(n89) );
  i0smdn022ab1n03x4 U225 ( .b(n90), .a(n89), .sa(FL_CNT_REG_15_), .o1(n91) );
  i0saob012ab1n03x5 U226 ( .b(SO), .c(n92), .a(n91), .out0(n216) );
  i0snanb02ab1n03x5 U228 ( .a(n93), .b(FL_CNT_MODE0_SYNC), .out0(n118) );
  i0sand003ab1n03x7 U229 ( .a(BIST_COLLAR_GO[33]), .b(BIST_COLLAR_GO[34]), .c(
        BIST_COLLAR_GO[32]), .o(n94) );
  i0sand003ab1n03x7 U230 ( .a(BIST_COLLAR_GO[38]), .b(BIST_COLLAR_GO[39]), .c(
        BIST_COLLAR_GO[37]), .o(n95) );
  i0sand003ab1n03x7 U231 ( .a(BIST_COLLAR_GO[23]), .b(BIST_COLLAR_GO[24]), .c(
        BIST_COLLAR_GO[22]), .o(n96) );
  i0sand003ab1n03x7 U233 ( .a(BIST_COLLAR_GO[28]), .b(BIST_COLLAR_GO[29]), .c(
        BIST_COLLAR_GO[27]), .o(n97) );
  i0sand003ab1n03x7 U234 ( .a(BIST_COLLAR_GO[13]), .b(BIST_COLLAR_GO[14]), .c(
        BIST_COLLAR_GO[12]), .o(n98) );
  i0sand003ab1n03x7 U236 ( .a(BIST_COLLAR_GO[18]), .b(BIST_COLLAR_GO[19]), .c(
        BIST_COLLAR_GO[17]), .o(n990) );
  i0sand003ab1n03x7 U237 ( .a(BIST_COLLAR_GO[3]), .b(BIST_COLLAR_GO[4]), .c(
        BIST_COLLAR_GO[2]), .o(n100) );
  i0sand003ab1n03x7 U239 ( .a(BIST_COLLAR_GO[8]), .b(BIST_COLLAR_GO[9]), .c(
        BIST_COLLAR_GO[7]), .o(n101) );
  i0snona24ab1n03x5 U240 ( .d(n110), .e(HOLD_EN), .a(n286), .b(GO_EN), .c(n148), .out0(n111) );
  i0snanb02ab1n03x5 U242 ( .a(n10), .b(CLEAR_DEFAULT), .out0(n114) );
  i0snanb02ab1n03x5 U243 ( .a(n10), .b(n118), .out0(n250) );
  i0sorn003ab1n03x7 U244 ( .a(ERROR_CNT_REG_2_), .b(ERROR_CNT_REG_0_), .c(
        ERROR_CNT_REG_1_), .o(n187) );
  i0sinv030ab1n04x5 U245 ( .a(n187), .o1(n121) );
  i0sinv030ab1n04x5 U246 ( .a(ERROR_CNT_REG_4_), .o1(n120) );
  i0sinv030ab1n04x5 U247 ( .a(ERROR_CNT_REG_3_), .o1(n119) );
  i0snand03ab1n04x5 U248 ( .a(n121), .b(n120), .c(n119), .o1(n204) );
  i0sinv030ab1n04x5 U249 ( .a(n204), .o1(n124) );
  i0sinv030ab1n04x5 U250 ( .a(ERROR_CNT_REG_6_), .o1(n123) );
  i0sinv030ab1n04x5 U251 ( .a(ERROR_CNT_REG_5_), .o1(n122) );
  i0snand03ab1n04x5 U252 ( .a(n124), .b(n123), .c(n122), .o1(n218) );
  i0sinv030ab1n04x5 U253 ( .a(n218), .o1(n127) );
  i0sinv030ab1n04x5 U254 ( .a(ERROR_CNT_REG_8_), .o1(n126) );
  i0sinv030ab1n04x5 U255 ( .a(ERROR_CNT_REG_7_), .o1(n125) );
  i0snand03ab1n04x5 U256 ( .a(n127), .b(n126), .c(n125), .o1(n233) );
  i0sinv030ab1n04x5 U257 ( .a(n233), .o1(n130) );
  i0snand03ab1n04x5 U258 ( .a(n130), .b(n129), .c(n128), .o1(n241) );
  i0sinv030ab1n04x5 U259 ( .a(n241), .o1(n251) );
  i0snand03ab1n04x5 U260 ( .a(n251), .b(n132), .c(n131), .o1(n269) );
  i0snanb02ab1n03x5 U261 ( .a(n167), .b(n7), .out0(n281) );
  i0smdn022ab1n03x4 U262 ( .b(n135), .a(n134), .sa(SO), .o1(n136) );
  i0snona24ab1n03x5 U263 ( .d(n152), .e(n151), .a(n148), .b(ERROR_CNT_ZERO), 
        .c(n15), .out0(n155) );
  i0saob012ab1n03x5 U264 ( .b(ERROR_CNT_REG_0_), .c(n277), .a(n268), .out0(
        n176) );
  i0smdn022ab1n03x4 U265 ( .b(n168), .a(n176), .sa(ERROR_CNT_REG_1_), .o1(n171) );
  i0soabi13ab1n03x5 U266 ( .c(ERROR_CNT_REG_0_), .d(n11), .a(n172), .b(n171), 
        .o1(n194) );
  i0snanb02ab1n03x5 U267 ( .a(n175), .b(n278), .out0(n180) );
  i0snanb02ab1n03x5 U268 ( .a(n187), .b(n1), .out0(n184) );
  i0snana24ab1n03x5 U269 ( .d(ERROR_CNT_REG_1_), .e(n10), .a(n180), .b(n184), 
        .c(n179), .out0(n190) );
  i0saob012ab1n03x5 U270 ( .b(n277), .c(n187), .a(n268), .out0(n196) );
  i0smdn022ab1n03x4 U271 ( .b(n188), .a(n196), .sa(ERROR_CNT_REG_3_), .o1(n191) );
  i0soabi13ab1n03x5 U272 ( .c(ERROR_CNT_REG_2_), .d(n11), .a(n192), .b(n191), 
        .o1(n186) );
  i0snanb02ab1n03x5 U273 ( .a(n195), .b(n278), .out0(n199) );
  i0snana24ab1n03x5 U274 ( .d(ERROR_CNT_REG_3_), .e(n10), .a(n199), .b(n201), 
        .c(n198), .out0(n182) );
  i0saob012ab1n03x5 U275 ( .b(n277), .c(n204), .a(n268), .out0(n211) );
  i0smdn022ab1n03x4 U276 ( .b(n205), .a(n211), .sa(ERROR_CNT_REG_5_), .o1(n207) );
  i0soabi13ab1n03x5 U277 ( .c(ERROR_CNT_REG_4_), .d(n11), .a(n208), .b(n207), 
        .o1(n178) );
  i0snanb02ab1n03x5 U278 ( .a(n210), .b(n278), .out0(n215) );
  i0snanb02ab1n03x5 U279 ( .a(n218), .b(n1), .out0(n217) );
  i0snana24ab1n03x5 U280 ( .d(ERROR_CNT_REG_5_), .e(n10), .a(n215), .b(n217), 
        .c(n214), .out0(n174) );
  i0saob012ab1n03x5 U281 ( .b(n277), .c(n218), .a(n268), .out0(n226) );
  i0snanb02ab1n03x5 U282 ( .a(n224), .b(n278), .out0(n229) );
  i0snanb02ab1n03x5 U283 ( .a(n233), .b(n1), .out0(n232) );
  i0snana24ab1n03x5 U284 ( .d(ERROR_CNT_REG_7_), .e(n10), .a(n229), .b(n232), 
        .c(n227), .out0(n166) );
  i0saob012ab1n03x5 U285 ( .b(n277), .c(n233), .a(n268), .out0(n242) );
  i0snanb02ab1n03x5 U286 ( .a(n239), .b(n278), .out0(n245) );
  i0snanb02ab1n03x5 U287 ( .a(n241), .b(n259), .out0(n248) );
  i0snana24ab1n03x5 U288 ( .d(ERROR_CNT_REG_9_), .e(n10), .a(n245), .b(n248), 
        .c(n244), .out0(n158) );
  i0snanb02ab1n03x5 U289 ( .a(n257), .b(n278), .out0(n263) );
  i0saob012ab1n03x5 U290 ( .b(n277), .c(n269), .a(n268), .out0(n275) );
  i0saob012ab1n03x5 U291 ( .b(ERROR_CNT_REG_13_), .c(n277), .a(n276), .out0(
        n283) );
  i0snana24ab1n03x5 U292 ( .d(ERROR_CNT_REG_14_), .e(n283), .a(n282), .b(n281), 
        .c(n280), .out0(n142) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_controller ( 
        MBIST_RA_PRSRV_FUSE_VAL, MBISTPG_ALGO_SEL, MBISTPG_ALGO_MODE, 
        MBISTPG_MEM_RST, MBISTPG_REDUCED_ADDR_CNT_EN, MEM_BYPASS_EN, 
        MCP_BOUNDING_EN, MEM0_BIST_COLLAR_SO, MEM1_BIST_COLLAR_SO, 
        MEM2_BIST_COLLAR_SO, MEM3_BIST_COLLAR_SO, MEM4_BIST_COLLAR_SO, 
        MEM5_BIST_COLLAR_SO, MEM6_BIST_COLLAR_SO, MEM7_BIST_COLLAR_SO, 
        MEM8_BIST_COLLAR_SO, MEM9_BIST_COLLAR_SO, MEM10_BIST_COLLAR_SO, 
        MEM11_BIST_COLLAR_SO, MEM12_BIST_COLLAR_SO, MEM13_BIST_COLLAR_SO, 
        MEM14_BIST_COLLAR_SO, MEM15_BIST_COLLAR_SO, MEM16_BIST_COLLAR_SO, 
        MEM17_BIST_COLLAR_SO, MEM18_BIST_COLLAR_SO, MEM19_BIST_COLLAR_SO, 
        MEM20_BIST_COLLAR_SO, MEM21_BIST_COLLAR_SO, MEM22_BIST_COLLAR_SO, 
        MEM23_BIST_COLLAR_SO, MEM24_BIST_COLLAR_SO, MEM25_BIST_COLLAR_SO, 
        MEM26_BIST_COLLAR_SO, MEM27_BIST_COLLAR_SO, MEM28_BIST_COLLAR_SO, 
        MEM29_BIST_COLLAR_SO, MEM30_BIST_COLLAR_SO, MEM31_BIST_COLLAR_SO, 
        MEM32_BIST_COLLAR_SO, MEM33_BIST_COLLAR_SO, MEM34_BIST_COLLAR_SO, 
        MEM35_BIST_COLLAR_SO, MEM36_BIST_COLLAR_SO, MEM37_BIST_COLLAR_SO, 
        MEM38_BIST_COLLAR_SO, MEM39_BIST_COLLAR_SO, FL_CNT_MODE, 
        MBISTPG_BIRA_EN, CHECK_REPAIR_NEEDED, BIST_COLLAR_GO, MBISTPG_DIAG_EN, 
        BIST_CLK, BIST_SI, BIST_HOLD, BIST_SETUP2, BIST_SETUP, 
        MBISTPG_TESTDATA_SELECT, TCK, MBISTPG_EN, MBISTPG_ASYNC_RESETN, LV_TM, 
        MBISTPG_MEM_ARRAY_DUMP_MODE, BIST_CLEAR_BIRA, MBISTPG_RESET_REG_SETUP2, 
        BIST_COL_ADD, BIST_ROW_ADD, BIST_WRITE_DATA, BIST_EXPECT_DATA, 
        BIST_SHIFT_COLLAR, BIST_TESTDATA_SELECT_TO_COLLAR, MEM0_BIST_COLLAR_SI, 
        MEM1_BIST_COLLAR_SI, MEM2_BIST_COLLAR_SI, MEM3_BIST_COLLAR_SI, 
        MEM4_BIST_COLLAR_SI, MEM5_BIST_COLLAR_SI, MEM6_BIST_COLLAR_SI, 
        MEM7_BIST_COLLAR_SI, MEM8_BIST_COLLAR_SI, MEM9_BIST_COLLAR_SI, 
        MEM10_BIST_COLLAR_SI, MEM11_BIST_COLLAR_SI, MEM12_BIST_COLLAR_SI, 
        MEM13_BIST_COLLAR_SI, MEM14_BIST_COLLAR_SI, MEM15_BIST_COLLAR_SI, 
        MEM16_BIST_COLLAR_SI, MEM17_BIST_COLLAR_SI, MEM18_BIST_COLLAR_SI, 
        MEM19_BIST_COLLAR_SI, MEM20_BIST_COLLAR_SI, MEM21_BIST_COLLAR_SI, 
        MEM22_BIST_COLLAR_SI, MEM23_BIST_COLLAR_SI, MEM24_BIST_COLLAR_SI, 
        MEM25_BIST_COLLAR_SI, MEM26_BIST_COLLAR_SI, MEM27_BIST_COLLAR_SI, 
        MEM28_BIST_COLLAR_SI, MEM29_BIST_COLLAR_SI, MEM30_BIST_COLLAR_SI, 
        MEM31_BIST_COLLAR_SI, MEM32_BIST_COLLAR_SI, MEM33_BIST_COLLAR_SI, 
        MEM34_BIST_COLLAR_SI, MEM35_BIST_COLLAR_SI, MEM36_BIST_COLLAR_SI, 
        MEM37_BIST_COLLAR_SI, MEM38_BIST_COLLAR_SI, MEM39_BIST_COLLAR_SI, 
        BIST_COLLAR_SETUP, BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD, 
        FREEZE_STOP_ERROR, ERROR_CNT_ZERO, BIST_COLLAR_DIAG_EN, 
        BIST_COLLAR_BIRA_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR, MBISTPG_SO, 
        PriorityColumn, BIST_WRITEENABLE, BIST_READENABLE, BIST_CMP, 
        BIST_COLLAR_EN0, BIST_RUN_TO_COLLAR0, BIST_COLLAR_EN1, 
        BIST_RUN_TO_COLLAR1, BIST_COLLAR_EN2, BIST_RUN_TO_COLLAR2, 
        BIST_COLLAR_EN3, BIST_RUN_TO_COLLAR3, BIST_COLLAR_EN4, 
        BIST_RUN_TO_COLLAR4, BIST_COLLAR_EN5, BIST_RUN_TO_COLLAR5, 
        BIST_COLLAR_EN6, BIST_RUN_TO_COLLAR6, BIST_COLLAR_EN7, 
        BIST_RUN_TO_COLLAR7, BIST_COLLAR_EN8, BIST_RUN_TO_COLLAR8, 
        BIST_COLLAR_EN9, BIST_RUN_TO_COLLAR9, BIST_COLLAR_EN10, 
        BIST_RUN_TO_COLLAR10, BIST_COLLAR_EN11, BIST_RUN_TO_COLLAR11, 
        BIST_COLLAR_EN12, BIST_RUN_TO_COLLAR12, BIST_COLLAR_EN13, 
        BIST_RUN_TO_COLLAR13, BIST_COLLAR_EN14, BIST_RUN_TO_COLLAR14, 
        BIST_COLLAR_EN15, BIST_RUN_TO_COLLAR15, BIST_COLLAR_EN16, 
        BIST_RUN_TO_COLLAR16, BIST_COLLAR_EN17, BIST_RUN_TO_COLLAR17, 
        BIST_COLLAR_EN18, BIST_RUN_TO_COLLAR18, BIST_COLLAR_EN19, 
        BIST_RUN_TO_COLLAR19, BIST_COLLAR_EN20, BIST_RUN_TO_COLLAR20, 
        BIST_COLLAR_EN21, BIST_RUN_TO_COLLAR21, BIST_COLLAR_EN22, 
        BIST_RUN_TO_COLLAR22, BIST_COLLAR_EN23, BIST_RUN_TO_COLLAR23, 
        BIST_COLLAR_EN24, BIST_RUN_TO_COLLAR24, BIST_COLLAR_EN25, 
        BIST_RUN_TO_COLLAR25, BIST_COLLAR_EN26, BIST_RUN_TO_COLLAR26, 
        BIST_COLLAR_EN27, BIST_RUN_TO_COLLAR27, BIST_COLLAR_EN28, 
        BIST_RUN_TO_COLLAR28, BIST_COLLAR_EN29, BIST_RUN_TO_COLLAR29, 
        BIST_COLLAR_EN30, BIST_RUN_TO_COLLAR30, BIST_COLLAR_EN31, 
        BIST_RUN_TO_COLLAR31, BIST_COLLAR_EN32, BIST_RUN_TO_COLLAR32, 
        BIST_COLLAR_EN33, BIST_RUN_TO_COLLAR33, BIST_COLLAR_EN34, 
        BIST_RUN_TO_COLLAR34, BIST_COLLAR_EN35, BIST_RUN_TO_COLLAR35, 
        BIST_COLLAR_EN36, BIST_RUN_TO_COLLAR36, BIST_COLLAR_EN37, 
        BIST_RUN_TO_COLLAR37, BIST_COLLAR_EN38, BIST_RUN_TO_COLLAR38, 
        BIST_COLLAR_EN39, BIST_RUN_TO_COLLAR39, CHKBCI_PHASE, MBISTPG_GO, 
        MBISTPG_DONE, BIST_ON_TO_COLLAR, BIST_SHIFT_BIRA_COLLAR );
  input [1:0] MBISTPG_ALGO_MODE;
  input [1:0] FL_CNT_MODE;
  input [39:0] BIST_COLLAR_GO;
  input [1:0] BIST_SETUP;
  output [2:0] BIST_COL_ADD;
  output [7:0] BIST_ROW_ADD;
  output [3:0] BIST_WRITE_DATA;
  output [3:0] BIST_EXPECT_DATA;
  input MBIST_RA_PRSRV_FUSE_VAL, MBISTPG_ALGO_SEL, MBISTPG_MEM_RST,
         MBISTPG_REDUCED_ADDR_CNT_EN, MEM_BYPASS_EN, MCP_BOUNDING_EN,
         MEM0_BIST_COLLAR_SO, MEM1_BIST_COLLAR_SO, MEM2_BIST_COLLAR_SO,
         MEM3_BIST_COLLAR_SO, MEM4_BIST_COLLAR_SO, MEM5_BIST_COLLAR_SO,
         MEM6_BIST_COLLAR_SO, MEM7_BIST_COLLAR_SO, MEM8_BIST_COLLAR_SO,
         MEM9_BIST_COLLAR_SO, MEM10_BIST_COLLAR_SO, MEM11_BIST_COLLAR_SO,
         MEM12_BIST_COLLAR_SO, MEM13_BIST_COLLAR_SO, MEM14_BIST_COLLAR_SO,
         MEM15_BIST_COLLAR_SO, MEM16_BIST_COLLAR_SO, MEM17_BIST_COLLAR_SO,
         MEM18_BIST_COLLAR_SO, MEM19_BIST_COLLAR_SO, MEM20_BIST_COLLAR_SO,
         MEM21_BIST_COLLAR_SO, MEM22_BIST_COLLAR_SO, MEM23_BIST_COLLAR_SO,
         MEM24_BIST_COLLAR_SO, MEM25_BIST_COLLAR_SO, MEM26_BIST_COLLAR_SO,
         MEM27_BIST_COLLAR_SO, MEM28_BIST_COLLAR_SO, MEM29_BIST_COLLAR_SO,
         MEM30_BIST_COLLAR_SO, MEM31_BIST_COLLAR_SO, MEM32_BIST_COLLAR_SO,
         MEM33_BIST_COLLAR_SO, MEM34_BIST_COLLAR_SO, MEM35_BIST_COLLAR_SO,
         MEM36_BIST_COLLAR_SO, MEM37_BIST_COLLAR_SO, MEM38_BIST_COLLAR_SO,
         MEM39_BIST_COLLAR_SO, MBISTPG_BIRA_EN, CHECK_REPAIR_NEEDED,
         MBISTPG_DIAG_EN, BIST_CLK, BIST_SI, BIST_HOLD, BIST_SETUP2,
         MBISTPG_TESTDATA_SELECT, TCK, MBISTPG_EN, MBISTPG_ASYNC_RESETN, LV_TM,
         MBISTPG_MEM_ARRAY_DUMP_MODE;
  output BIST_CLEAR_BIRA, MBISTPG_RESET_REG_SETUP2, BIST_SHIFT_COLLAR,
         BIST_TESTDATA_SELECT_TO_COLLAR, MEM0_BIST_COLLAR_SI,
         MEM1_BIST_COLLAR_SI, MEM2_BIST_COLLAR_SI, MEM3_BIST_COLLAR_SI,
         MEM4_BIST_COLLAR_SI, MEM5_BIST_COLLAR_SI, MEM6_BIST_COLLAR_SI,
         MEM7_BIST_COLLAR_SI, MEM8_BIST_COLLAR_SI, MEM9_BIST_COLLAR_SI,
         MEM10_BIST_COLLAR_SI, MEM11_BIST_COLLAR_SI, MEM12_BIST_COLLAR_SI,
         MEM13_BIST_COLLAR_SI, MEM14_BIST_COLLAR_SI, MEM15_BIST_COLLAR_SI,
         MEM16_BIST_COLLAR_SI, MEM17_BIST_COLLAR_SI, MEM18_BIST_COLLAR_SI,
         MEM19_BIST_COLLAR_SI, MEM20_BIST_COLLAR_SI, MEM21_BIST_COLLAR_SI,
         MEM22_BIST_COLLAR_SI, MEM23_BIST_COLLAR_SI, MEM24_BIST_COLLAR_SI,
         MEM25_BIST_COLLAR_SI, MEM26_BIST_COLLAR_SI, MEM27_BIST_COLLAR_SI,
         MEM28_BIST_COLLAR_SI, MEM29_BIST_COLLAR_SI, MEM30_BIST_COLLAR_SI,
         MEM31_BIST_COLLAR_SI, MEM32_BIST_COLLAR_SI, MEM33_BIST_COLLAR_SI,
         MEM34_BIST_COLLAR_SI, MEM35_BIST_COLLAR_SI, MEM36_BIST_COLLAR_SI,
         MEM37_BIST_COLLAR_SI, MEM38_BIST_COLLAR_SI, MEM39_BIST_COLLAR_SI,
         BIST_COLLAR_SETUP, BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD,
         FREEZE_STOP_ERROR, ERROR_CNT_ZERO, BIST_COLLAR_DIAG_EN,
         BIST_COLLAR_BIRA_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR, MBISTPG_SO,
         PriorityColumn, BIST_WRITEENABLE, BIST_READENABLE, BIST_CMP,
         BIST_COLLAR_EN0, BIST_RUN_TO_COLLAR0, BIST_COLLAR_EN1,
         BIST_RUN_TO_COLLAR1, BIST_COLLAR_EN2, BIST_RUN_TO_COLLAR2,
         BIST_COLLAR_EN3, BIST_RUN_TO_COLLAR3, BIST_COLLAR_EN4,
         BIST_RUN_TO_COLLAR4, BIST_COLLAR_EN5, BIST_RUN_TO_COLLAR5,
         BIST_COLLAR_EN6, BIST_RUN_TO_COLLAR6, BIST_COLLAR_EN7,
         BIST_RUN_TO_COLLAR7, BIST_COLLAR_EN8, BIST_RUN_TO_COLLAR8,
         BIST_COLLAR_EN9, BIST_RUN_TO_COLLAR9, BIST_COLLAR_EN10,
         BIST_RUN_TO_COLLAR10, BIST_COLLAR_EN11, BIST_RUN_TO_COLLAR11,
         BIST_COLLAR_EN12, BIST_RUN_TO_COLLAR12, BIST_COLLAR_EN13,
         BIST_RUN_TO_COLLAR13, BIST_COLLAR_EN14, BIST_RUN_TO_COLLAR14,
         BIST_COLLAR_EN15, BIST_RUN_TO_COLLAR15, BIST_COLLAR_EN16,
         BIST_RUN_TO_COLLAR16, BIST_COLLAR_EN17, BIST_RUN_TO_COLLAR17,
         BIST_COLLAR_EN18, BIST_RUN_TO_COLLAR18, BIST_COLLAR_EN19,
         BIST_RUN_TO_COLLAR19, BIST_COLLAR_EN20, BIST_RUN_TO_COLLAR20,
         BIST_COLLAR_EN21, BIST_RUN_TO_COLLAR21, BIST_COLLAR_EN22,
         BIST_RUN_TO_COLLAR22, BIST_COLLAR_EN23, BIST_RUN_TO_COLLAR23,
         BIST_COLLAR_EN24, BIST_RUN_TO_COLLAR24, BIST_COLLAR_EN25,
         BIST_RUN_TO_COLLAR25, BIST_COLLAR_EN26, BIST_RUN_TO_COLLAR26,
         BIST_COLLAR_EN27, BIST_RUN_TO_COLLAR27, BIST_COLLAR_EN28,
         BIST_RUN_TO_COLLAR28, BIST_COLLAR_EN29, BIST_RUN_TO_COLLAR29,
         BIST_COLLAR_EN30, BIST_RUN_TO_COLLAR30, BIST_COLLAR_EN31,
         BIST_RUN_TO_COLLAR31, BIST_COLLAR_EN32, BIST_RUN_TO_COLLAR32,
         BIST_COLLAR_EN33, BIST_RUN_TO_COLLAR33, BIST_COLLAR_EN34,
         BIST_RUN_TO_COLLAR34, BIST_COLLAR_EN35, BIST_RUN_TO_COLLAR35,
         BIST_COLLAR_EN36, BIST_RUN_TO_COLLAR36, BIST_COLLAR_EN37,
         BIST_RUN_TO_COLLAR37, BIST_COLLAR_EN38, BIST_RUN_TO_COLLAR38,
         BIST_COLLAR_EN39, BIST_RUN_TO_COLLAR39, CHKBCI_PHASE, MBISTPG_GO,
         MBISTPG_DONE, BIST_ON_TO_COLLAR, BIST_SHIFT_BIRA_COLLAR;
  wire   net262684, n237, n242, n243, INJECT_TCK, BIST_EN_RETIME1_IN,
         BIST_EN_RETIME1, n_372_net_0, BIST_CLK_GATED, BIST_CLK_INT, BIST_ON,
         MBIST_RA_PRSRV_FUSE_VAL_SYNC, MBISTPG_BIRA_EN_SYNC,
         MBISTPG_MEM_RST_SYNC, FL_CNT_MODE0_SYNC, DEFAULT_MODE,
         ALGO_SEL_CNT_REG, ALGO_SEL_REG, SELECT_COMMON_OPSET_REG,
         SELECT_COMMON_DATA_PAT_REG, RESET_REG_SETUP1, MICROCODE_EN_REG,
         BIST_INIT, GO_EN, BYPASS_RUN_STATE_INT, BIST_HOLD_R_INT, BIST_SI_SYNC,
         BIST_SETUP_SYNC_1_, BIST_SETUP_SYNC_0_, MBISTPG_BIRA_SETUP_SYNC,
         MBISTPG_GOID_SETUP_SYNC, n_373_net_0, SHORT_SETUP_SYNC,
         BIST_DONE_PIPE0, BIST_DONE_PIPE1, BIST_DONE_PIPE2, BIST_RUN_INT,
         BIST_RUN_PIPE, X_ADDRESS_7_, X_ADDRESS_6_, X_ADDRESS_5_, X_ADDRESS_4_,
         X_ADDRESS_3_, X_ADDRESS_2_, X_ADDRESS_1_, X_ADDRESS_0_, Y_ADDRESS_2_,
         Y_ADDRESS_1_, Y_ADDRESS_0_, LAST_STATE_DONE_PIPELINED,
         BIST_IDLE_PULSE, BIST_RUN, BIST_SI_PIPELINE, MBISTPG_DIAG_EN_GATED,
         CMP_EN_MASK_EN, CMP_EN_MASK, CMP_EN_R, FREEZE_GO_ID, N158,
         BIST_CMP_FROM_SIGNAL_GEN, INH_DATA_CMP_MODIFIED, MEM_SELECT_REG_39_,
         MEM_SELECT_REG_38_, MEM_SELECT_REG_37_, MEM_SELECT_REG_36_,
         MEM_SELECT_REG_35_, MEM_SELECT_REG_34_, MEM_SELECT_REG_33_,
         MEM_SELECT_REG_32_, MEM_SELECT_REG_31_, MEM_SELECT_REG_30_,
         MEM_SELECT_REG_29_, MEM_SELECT_REG_28_, MEM_SELECT_REG_27_,
         MEM_SELECT_REG_26_, MEM_SELECT_REG_25_, MEM_SELECT_REG_24_,
         MEM_SELECT_REG_23_, MEM_SELECT_REG_22_, MEM_SELECT_REG_21_,
         MEM_SELECT_REG_20_, MEM_SELECT_REG_19_, MEM_SELECT_REG_18_,
         MEM_SELECT_REG_17_, MEM_SELECT_REG_16_, MEM_SELECT_REG_15_,
         MEM_SELECT_REG_14_, MEM_SELECT_REG_13_, MEM_SELECT_REG_12_,
         MEM_SELECT_REG_11_, MEM_SELECT_REG_10_, MEM_SELECT_REG_9_,
         MEM_SELECT_REG_8_, MEM_SELECT_REG_7_, MEM_SELECT_REG_6_,
         MEM_SELECT_REG_5_, MEM_SELECT_REG_4_, MEM_SELECT_REG_3_,
         MEM_SELECT_REG_2_, MEM_SELECT_REG_1_, MEM_SELECT_REG_0_,
         MEM0_BIST_COLLAR_SO_RetimeIn, MBISTPG_REDUCED_ADDR_CNT_EN_SYNC,
         REDUCED_ADDR_CNT_EN_REG, MBISTPG_ALGO_MODE_SYNC_1_,
         MBISTPG_ALGO_MODE_SYNC_0_, MEM_ARRAY_DUMP_MODE_SO, LAST_TICK,
         CHKBCI_PHASE_INT, OPSET_SELECT_DECODED_1_, OPSET_SELECT_DECODED_0_,
         ESOE_RESET, OP_SELECT_CMD_3_, OP_SELECT_CMD_1_, OP_SELECT_CMD_0_,
         ADD_Y1_CMD_2_, ADD_Y1_CMD_1_, ADD_Y1_CMD_0_, ADD_X1_CMD_2_,
         ADD_X1_CMD_1_, ADD_X1_CMD_0_, ADD_REG_SELECT_1_, WDATA_CMD_3_,
         WDATA_CMD_1_, WDATA_CMD_0_, EDATA_CMD_3_, EDATA_CMD_1_, EDATA_CMD_0_,
         LOOP_CMD_1_, LOOP_CMD_0_, INH_LAST_ADDR_CNT, INH_DATA_CMP,
         Y1_MINMAX_TRIGGER, X1_MINMAX_TRIGGER, LOOPCOUNTMAX_TRIGGER,
         LOOP_POINTER_4_, LOOP_POINTER_3_, LOOP_POINTER_2_, LOOP_POINTER_1_,
         POINTER_CNTRL_SO, LAST_STATE_DONE, LOOP_STATE_TRUE, ADD_GEN_SO,
         ADD_Y1_CMD_MODIFIED_2_, ADD_Y1_CMD_MODIFIED_1_,
         ADD_Y1_CMD_MODIFIED_0_, ADD_X1_CMD_MODIFIED_2_,
         ADD_X1_CMD_MODIFIED_1_, ADD_X1_CMD_MODIFIED_0_, Y1_MINMAX_TRIGGER_OUT,
         X1_MINMAX_TRIGGER_OUT, INH_LAST_ADDR_CNT_MODIFIED, OPSET_INVERT_EDATA,
         SIGNAL_GEN_SO, LAST_TICK_PIPELINED, DELAYCOUNTER_ENDCOUNT_TRIGGER_INT,
         DELAYCOUNTER_SO, WDATA_CMD_MODIFIED_3_, WDATA_CMD_MODIFIED_1_,
         WDATA_CMD_MODIFIED_0_, EDATA_CMD_MODIFIED_3_, EDATA_CMD_MODIFIED_1_,
         EDATA_CMD_MODIFIED_0_, DATA_GEN_SO, LOOPCOUNTMAX_TRIGGER_INT,
         REPEAT_LOOP_CNTRL_SO, INH_LAST_ADDR_CNT_MODIFIED_INT, MBISTPG_GO_INT,
         N261, N266, N271, N276, N281, N286, N291, N296, N301, N306, N311,
         N316, N321, N326, N331, N336, N341, N346, N351, N356, N361, N366,
         N371, N376, N381, N386, N391, N396, N401, N406, N411, N416, N421,
         N426, N431, N436, N441, N446, N451, CTL_COMP_SI, CTL_COMP_SO, N457,
         N468, n1580, n227, n228, n229, n230, n231, n232, n233, n234, n238,
         n239, n240, n241, n582, n253, n256, n257, n260, n2610, n264, n265,
         n268, n269, n272, n273, n2760, n280, n287, n294, n3010, n308, n315,
         n322, n329, n3360, n343, n350, n357, n364, n3710, n378, n385, n392,
         n399, n4060, n413, n420, n427, n434, n4410, n448, n455, n462, n469,
         n476, n483, n490, n497, n504, n511, n518, n525, n532, n539, n546,
         n553, n562, n565, n578, n593, n594, n595, n596, n1, n2, n3, n4, n5,
         n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17, n18, n19, n20, n21,
         n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35,
         n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49,
         n50, n51, n52, n53, n55, n57, n59, n60, n61, n62, n63, n64, n65, n66,
         n67, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81,
         n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n159, n160, n161, n162, n163,
         n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174,
         n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185,
         n186, n187, n188, n189, n190, n191, n192, n193, n194, n195, n196,
         n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, n207,
         n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, n218,
         n219, n220, n221, n222, n223, n225, n226, n235, n236, net298528,
         net298529, net298530, net298531, net298532, net298533, net298534,
         net298535, net298536, net298537, net298538, net298539, net298540,
         net298541, net298542, net298543, net298544, net298545, net298546,
         net298547, net298548, net298549, net298550, net298551,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23, SYNOPSYS_UNCONNECTED_24,
         SYNOPSYS_UNCONNECTED_25, SYNOPSYS_UNCONNECTED_26,
         SYNOPSYS_UNCONNECTED_27, SYNOPSYS_UNCONNECTED_28,
         SYNOPSYS_UNCONNECTED_29, SYNOPSYS_UNCONNECTED_30,
         SYNOPSYS_UNCONNECTED_31, SYNOPSYS_UNCONNECTED_32,
         SYNOPSYS_UNCONNECTED_33, SYNOPSYS_UNCONNECTED_34,
         SYNOPSYS_UNCONNECTED_35, SYNOPSYS_UNCONNECTED_36,
         SYNOPSYS_UNCONNECTED_37, SYNOPSYS_UNCONNECTED_38,
         SYNOPSYS_UNCONNECTED_39, SYNOPSYS_UNCONNECTED_40,
         SYNOPSYS_UNCONNECTED_41, SYNOPSYS_UNCONNECTED_42,
         SYNOPSYS_UNCONNECTED_43, SYNOPSYS_UNCONNECTED_44,
         SYNOPSYS_UNCONNECTED_45, SYNOPSYS_UNCONNECTED_46,
         SYNOPSYS_UNCONNECTED_47, SYNOPSYS_UNCONNECTED_48,
         SYNOPSYS_UNCONNECTED_49, SYNOPSYS_UNCONNECTED_50,
         SYNOPSYS_UNCONNECTED_51, SYNOPSYS_UNCONNECTED_52,
         SYNOPSYS_UNCONNECTED_53, SYNOPSYS_UNCONNECTED_54,
         SYNOPSYS_UNCONNECTED_55, SYNOPSYS_UNCONNECTED_56,
         SYNOPSYS_UNCONNECTED_57, SYNOPSYS_UNCONNECTED_58,
         SYNOPSYS_UNCONNECTED_59, SYNOPSYS_UNCONNECTED_60,
         SYNOPSYS_UNCONNECTED_61, SYNOPSYS_UNCONNECTED_62,
         SYNOPSYS_UNCONNECTED_63, SYNOPSYS_UNCONNECTED_64,
         SYNOPSYS_UNCONNECTED_65, SYNOPSYS_UNCONNECTED_66,
         SYNOPSYS_UNCONNECTED_67, SYNOPSYS_UNCONNECTED_68,
         SYNOPSYS_UNCONNECTED_69, SYNOPSYS_UNCONNECTED_70,
         SYNOPSYS_UNCONNECTED_71, SYNOPSYS_UNCONNECTED_72,
         SYNOPSYS_UNCONNECTED_73, SYNOPSYS_UNCONNECTED_74,
         SYNOPSYS_UNCONNECTED_75, SYNOPSYS_UNCONNECTED_76,
         SYNOPSYS_UNCONNECTED_77, SYNOPSYS_UNCONNECTED_78,
         SYNOPSYS_UNCONNECTED_79, SYNOPSYS_UNCONNECTED_80,
         SYNOPSYS_UNCONNECTED_81, SYNOPSYS_UNCONNECTED_82,
         SYNOPSYS_UNCONNECTED_83, SYNOPSYS_UNCONNECTED_84,
         SYNOPSYS_UNCONNECTED_85, SYNOPSYS_UNCONNECTED_86,
         SYNOPSYS_UNCONNECTED_87, SYNOPSYS_UNCONNECTED_88,
         SYNOPSYS_UNCONNECTED_89, SYNOPSYS_UNCONNECTED_90,
         SYNOPSYS_UNCONNECTED_91, SYNOPSYS_UNCONNECTED_92,
         SYNOPSYS_UNCONNECTED_93, SYNOPSYS_UNCONNECTED_94,
         SYNOPSYS_UNCONNECTED_95, SYNOPSYS_UNCONNECTED_96,
         SYNOPSYS_UNCONNECTED_97, SYNOPSYS_UNCONNECTED_98,
         SYNOPSYS_UNCONNECTED_99, SYNOPSYS_UNCONNECTED_100,
         SYNOPSYS_UNCONNECTED_101, SYNOPSYS_UNCONNECTED_102,
         SYNOPSYS_UNCONNECTED_103, SYNOPSYS_UNCONNECTED_104,
         SYNOPSYS_UNCONNECTED_105, SYNOPSYS_UNCONNECTED_106,
         SYNOPSYS_UNCONNECTED_107, SYNOPSYS_UNCONNECTED_108,
         SYNOPSYS_UNCONNECTED_109, SYNOPSYS_UNCONNECTED_110,
         SYNOPSYS_UNCONNECTED_111, SYNOPSYS_UNCONNECTED_112,
         SYNOPSYS_UNCONNECTED_113, SYNOPSYS_UNCONNECTED_114,
         SYNOPSYS_UNCONNECTED_115, SYNOPSYS_UNCONNECTED_116,
         SYNOPSYS_UNCONNECTED_117, SYNOPSYS_UNCONNECTED_118,
         SYNOPSYS_UNCONNECTED_119, SYNOPSYS_UNCONNECTED_120,
         SYNOPSYS_UNCONNECTED_121, SYNOPSYS_UNCONNECTED_122,
         SYNOPSYS_UNCONNECTED_123, SYNOPSYS_UNCONNECTED_124,
         SYNOPSYS_UNCONNECTED_125, SYNOPSYS_UNCONNECTED_126,
         SYNOPSYS_UNCONNECTED_127, SYNOPSYS_UNCONNECTED_128,
         SYNOPSYS_UNCONNECTED_129, SYNOPSYS_UNCONNECTED_130,
         SYNOPSYS_UNCONNECTED_131, SYNOPSYS_UNCONNECTED_132,
         SYNOPSYS_UNCONNECTED_133, SYNOPSYS_UNCONNECTED_134,
         SYNOPSYS_UNCONNECTED_135, SYNOPSYS_UNCONNECTED_136;

  i0sfmn203ab1d03x5 tessent_persistent_cell_MBIST_NTC_RETIMING_CELL_CLK_EN ( 
        .clk(BIST_CLK), .d(BIST_EN_RETIME1_IN), .rb(n27), .o(BIST_EN_RETIME1)
         );
  i0scilb01ab1n02x5 tessent_persistent_cell_GATING_BIST_CLK ( .clk(BIST_CLK), 
        .en(n_372_net_0), .te(net262684), .clkout(BIST_CLK_GATED) );
  i0scmbn22ab1n02x5 tessent_persistent_cell_BIST_CLK_INT ( .clk2(
        BIST_CLK_GATED), .clk1(TCK), .s(INJECT_TCK), .clkout(BIST_CLK_INT) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBIST_RA_PRSRV_FUSE_VAL_SYNC ( 
        .a(MBIST_RA_PRSRV_FUSE_VAL), .b(BIST_ON), .o(
        MBIST_RA_PRSRV_FUSE_VAL_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_BIRA_EN_SYNC ( .a(
        MBISTPG_BIRA_EN), .b(BIST_ON), .o(MBISTPG_BIRA_EN_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_MEM_RST_SYNC ( .a(
        MBISTPG_MEM_RST), .b(BIST_ON), .o(MBISTPG_MEM_RST_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_FL_CNT_MODE0_SYNC ( .a(
        FL_CNT_MODE[0]), .b(BIST_ON), .o(FL_CNT_MODE0_SYNC) );
  i0sfmn203ab1d03x5 tessent_persistent_cell_MBIST_NTC_RETIMING_CELL_TESTDATA_SELECT ( 
        .clk(BIST_CLK), .d(MBISTPG_TESTDATA_SELECT), .rb(n29), .o(
        BIST_TESTDATA_SELECT_TO_COLLAR) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_BIST_SI_SYNC ( .a(BIST_SI), 
        .b(n13), .o(BIST_SI_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_BIST_SETUP_SYNC0 ( .a(n4), .b(
        BIST_ON), .o(BIST_SETUP_SYNC_0_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_BIST_SETUP_SYNC1 ( .a(BIST_ON), 
        .o(BIST_SETUP_SYNC_1_) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_BIRA_SETUP_SYNC ( .a(
        n221), .b(n13), .o(MBISTPG_BIRA_SETUP_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_GOID_SETUP_SYNC ( .a(
        n10), .b(n13), .o(MBISTPG_GOID_SETUP_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_SHORT_SETUP_SYNC ( .a(
        n_373_net_0), .b(n13), .o(SHORT_SETUP_SYNC) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_MBISTPG_DONE ( .a(BIST_DONE_PIPE2), 
        .o(MBISTPG_DONE) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_DEFAULT_MODE ( .a(n59), .b(
        BIST_ON_TO_COLLAR), .o(DEFAULT_MODE) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_BIST_ON ( .a(BIST_ON_TO_COLLAR), 
        .o(BIST_ON) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_BIST_RUN ( .a(BIST_RUN_INT), .o(
        BIST_RUN) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_DIAG_EN_GATED ( .a(
        MBISTPG_DIAG_EN), .b(BIST_ON), .o(MBISTPG_DIAG_EN_GATED) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_REDUCED_ADDR_CNT_EN_SYNC ( 
        .a(MBISTPG_REDUCED_ADDR_CNT_EN), .b(BIST_ON), .o(
        MBISTPG_REDUCED_ADDR_CNT_EN_SYNC) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_ALGO_MODE_SYNC0 ( .a(
        MBISTPG_ALGO_MODE[0]), .b(BIST_ON), .o(MBISTPG_ALGO_MODE_SYNC_0_) );
  i0sand002ab1n02x5 tessent_persistent_cell_AND_MBISTPG_ALGO_MODE_SYNC1 ( .a(
        MBISTPG_ALGO_MODE[1]), .b(BIST_ON), .o(MBISTPG_ALGO_MODE_SYNC_1_) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_Y0_MINMAX_TRIGGER ( .a(net262684), 
        .o(SYNOPSYS_UNCONNECTED_1) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_Y1_MINMAX_TRIGGER ( .a(
        Y1_MINMAX_TRIGGER_OUT), .o(Y1_MINMAX_TRIGGER) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X1_MINMAX_TRIGGER ( .a(
        X1_MINMAX_TRIGGER_OUT), .o(X1_MINMAX_TRIGGER) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_X0_MINMAX_TRIGGER ( .a(net262684), 
        .o(SYNOPSYS_UNCONNECTED_2) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_DELAYCOUNTER_ENDCOUNT_TRIGGER ( 
        .a(DELAYCOUNTER_ENDCOUNT_TRIGGER_INT), .o(SYNOPSYS_UNCONNECTED_3) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_LOOPCOUNTMAX_TRIGGER ( .a(
        LOOPCOUNTMAX_TRIGGER_INT), .o(LOOPCOUNTMAX_TRIGGER) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_INH_LAST_ADDR_CNT ( .a(
        INH_LAST_ADDR_CNT_MODIFIED_INT), .o(INH_LAST_ADDR_CNT_MODIFIED) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_MBISTPG_GO ( .a(MBISTPG_GO_INT), 
        .o(MBISTPG_GO) );
  i0sfvz003ab1d03x6 BIST_EN_RETIME2_reg ( .si(net262684), .d(BIST_EN_RETIME1), 
        .ssb(n582), .clk(BIST_CLK), .rb(n27), .o(BIST_ON_TO_COLLAR), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 BIST_SI_PIPELINE_reg ( .si(net262684), .d(BIST_SI_SYNC), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_SI_PIPELINE), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 CMP_EN_R_reg ( .si(net262684), .d(N158), .ssb(n582), .clk(
        BIST_CLK_INT), .rb(n28), .o(CMP_EN_R), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 BIST_DONE_PIPE1_reg ( .si(net262684), .d(BIST_DONE_PIPE0), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n29), .o(BIST_DONE_PIPE1), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 BIST_DONE_PIPE2_reg ( .si(net262684), .d(BIST_DONE_PIPE1), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_DONE_PIPE2), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 GO_EN_reg ( .si(net262684), .d(n596), .ssb(n582), .clk(
        BIST_CLK_INT), .rb(n28), .o(GO_EN), .so(SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 CMP_EN_MASK_EN_reg ( .si(net262684), .d(n594), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n27), .o(CMP_EN_MASK_EN), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 CMP_EN_MASK_reg ( .si(net262684), .d(n593), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n28), .o(CMP_EN_MASK), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz08bab1d06x5 MEM4_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N431), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM4_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_12) );
  i0sfvz08bab1d06x5 MEM5_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N426), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM5_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_13) );
  i0sfvz08bab1d06x5 MEM9_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N406), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM9_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_14) );
  i0sfvz08bab1d06x5 MEM10_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N401), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM10_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_15) );
  i0sfvz08bab1d06x5 MEM14_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N381), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM14_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_16) );
  i0sfvz08bab1d06x5 MEM15_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N376), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM15_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_17) );
  i0sfvz08bab1d06x5 MEM16_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N371), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM16_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_18) );
  i0sfvz08bab1d06x5 MEM19_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N356), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM19_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_19) );
  i0sfvz08bab1d06x5 MEM20_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N351), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM20_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_20) );
  i0sfvz08bab1d06x5 MEM24_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N331), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM24_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_21) );
  i0sfvz08bab1d06x5 MEM25_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N326), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM25_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_22) );
  i0sfvz08bab1d06x5 MEM26_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N321), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM26_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_23) );
  i0sfvz003ab1d03x6 REDUCED_ADDR_CNT_EN_REG_reg ( .si(net262684), .d(n2760), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n27), .o(REDUCED_ADDR_CNT_EN_REG), 
        .so(SYNOPSYS_UNCONNECTED_24) );
  i0sfvz003ab1d03x6 SELECT_COMMON_OPSET_REG_reg ( .si(net262684), .d(n264), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n27), .o(SELECT_COMMON_OPSET_REG), 
        .so(SYNOPSYS_UNCONNECTED_25) );
  i0sfvz003ab1d03x6 SELECT_COMMON_DATA_PAT_REG_reg ( .si(net262684), .d(n260), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n28), .o(
        SELECT_COMMON_DATA_PAT_REG), .so(SYNOPSYS_UNCONNECTED_26) );
  i0sfvz003ab1d03x6 MICROCODE_EN_REG_reg ( .si(net262684), .d(n256), .ssb(n582), .clk(BIST_CLK_INT), .rb(n29), .o(MICROCODE_EN_REG), .so(
        SYNOPSYS_UNCONNECTED_27) );
  i0sfvz003ab1d03x6 MEM_ARRAY_DUMP_MODE_R_reg ( .si(net262684), .d(n253), 
        .ssb(n582), .clk(BIST_CLK_INT), .rb(n27), .o(MEM_ARRAY_DUMP_MODE_SO), 
        .so(SYNOPSYS_UNCONNECTED_28) );
  i0sfvz003ab1d03x6 BIST_SO_PIPELINE_reg ( .si(net262684), .d(N457), .ssb(n582), .clk(BIST_CLK_INT), .rb(n29), .o(MBISTPG_SO), .so(SYNOPSYS_UNCONNECTED_29)
         );
  i0sand003ab1n03x7 U195 ( .a(BIST_COLLAR_GO[29]), .b(BIST_COLLAR_GO[28]), .c(
        BIST_COLLAR_GO[2]), .o(n232) );
  i0sand003ab1n03x7 U197 ( .a(BIST_COLLAR_GO[38]), .b(BIST_COLLAR_GO[37]), .c(
        BIST_COLLAR_GO[39]), .o(n233) );
  i0sand003ab1n03x7 U199 ( .a(BIST_COLLAR_GO[1]), .b(BIST_COLLAR_GO[19]), .c(
        BIST_COLLAR_GO[20]), .o(n234) );
  i0sorn002ab1n03x5 U279 ( .a(n40), .b(Y_ADDRESS_2_), .o(n240) );
  i0snanb02ab1n03x5 U288 ( .a(Y_ADDRESS_2_), .b(BIST_RUN_INT), .out0(n241) );
  i0snanb02ab1n03x5 U341 ( .a(X_ADDRESS_7_), .b(BIST_RUN_INT), .out0(n239) );
  firebird7_in_gate1_tessent_mbist_c1_controller_fsm MBISTPG_FSM ( .BIST_CLK(
        BIST_CLK_INT), .BIST_ON(BIST_ON_TO_COLLAR), .BIST_HOLD_R(
        BIST_COLLAR_HOLD), .BYPASS_RUN_STATE(BYPASS_RUN_STATE_INT), 
        .BIST_ASYNC_RESETN(n29), .LAST_STATE_DONE_PIPELINED(
        LAST_STATE_DONE_PIPELINED), .PAUSETOEND_ALGO_MODE(N468), 
        .SETUP_PULSE1(RESET_REG_SETUP1), .SETUP_PULSE2(n237), .BIST_INIT(
        BIST_INIT), .BIST_RUN(BIST_RUN_INT), .BIST_RUN_PIPE(BIST_RUN_PIPE), 
        .BIST_DONE(BIST_DONE_PIPE0), .BIST_IDLE_PULSE(BIST_IDLE_PULSE), 
        .BIST_IDLE(SYNOPSYS_UNCONNECTED_30) );
  firebird7_in_gate1_tessent_mbist_c1_controller_pointer_cntrl MBISTPG_POINTER_CNTRL ( 
        .BIST_CLK(BIST_CLK_INT), .RESET_REG_SETUP1(RESET_REG_SETUP1), 
        .RESET_REG_DEFAULT_MODE(net262684), .RESET_REG_SETUP2(
        MBISTPG_RESET_REG_SETUP2), .BIST_RUN(BIST_RUN), .BIST_ON(
        BIST_ON_TO_COLLAR), .LAST_TICK(LAST_TICK), .CHKBCI_PHASE(
        CHKBCI_PHASE_INT), .ALGO_MODE({MBISTPG_ALGO_MODE_SYNC_1_, 
        MBISTPG_ALGO_MODE_SYNC_0_}), .MEM_RST(MBISTPG_MEM_RST_SYNC), 
        .MBISTPG_ALGO_SEL(n3), .OPSET_SELECT_DECODED({OPSET_SELECT_DECODED_1_, 
        net262684}), .Y0_MINMAX_TRIGGER(net262684), .Y1_MINMAX_TRIGGER(
        Y1_MINMAX_TRIGGER), .X0_MINMAX_TRIGGER(net262684), .X1_MINMAX_TRIGGER(
        X1_MINMAX_TRIGGER), .DELAYCOUNTER_ENDCOUNT_TRIGGER(net262684), 
        .COUNTERA_ENDCOUNT_TRIGGER(net262684), .LOOPCOUNTMAX_TRIGGER(
        LOOPCOUNTMAX_TRIGGER), .LOOP_POINTER({LOOP_POINTER_4_, LOOP_POINTER_3_, 
        LOOP_POINTER_2_, LOOP_POINTER_1_, net262684}), .BIST_HOLD(n52), 
        .BIST_SHIFT_SHORT(n36), .SI(MEM_ARRAY_DUMP_MODE_SO), .DEFAULT_MODE(
        net262684), .BIST_MICROCODE_EN(net262684), .BIST_ASYNC_RESETN(n27), 
        .ESOE_RESET(ESOE_RESET), .SO(POINTER_CNTRL_SO), .SHORT_SETUP(net262684), .OP_SELECT_CMD({SYNOPSYS_UNCONNECTED_31, SYNOPSYS_UNCONNECTED_32, 
        OP_SELECT_CMD_3_, SYNOPSYS_UNCONNECTED_33, OP_SELECT_CMD_1_, 
        OP_SELECT_CMD_0_}), .A_EQUALS_B_INVERT_DATA({SYNOPSYS_UNCONNECTED_34, 
        SYNOPSYS_UNCONNECTED_35}), .ADD_Y0_CMD({SYNOPSYS_UNCONNECTED_36, 
        SYNOPSYS_UNCONNECTED_37}), .ADD_Y1_CMD({ADD_Y1_CMD_2_, ADD_Y1_CMD_1_, 
        ADD_Y1_CMD_0_}), .ADD_X0_CMD({SYNOPSYS_UNCONNECTED_38, 
        SYNOPSYS_UNCONNECTED_39}), .ADD_X1_CMD({ADD_X1_CMD_2_, ADD_X1_CMD_1_, 
        ADD_X1_CMD_0_}), .ADD_REG_SELECT({SYNOPSYS_UNCONNECTED_40, 
        ADD_REG_SELECT_1_, SYNOPSYS_UNCONNECTED_41}), .WDATA_CMD({WDATA_CMD_3_, 
        SYNOPSYS_UNCONNECTED_42, WDATA_CMD_1_, WDATA_CMD_0_}), .EDATA_CMD({
        EDATA_CMD_3_, SYNOPSYS_UNCONNECTED_43, EDATA_CMD_1_, EDATA_CMD_0_}), 
        .LOOP_CMD({LOOP_CMD_1_, LOOP_CMD_0_}), .COUNTERA_CMD(
        SYNOPSYS_UNCONNECTED_44), .INH_LAST_ADDR_CNT(INH_LAST_ADDR_CNT), 
        .INH_DATA_CMP(INH_DATA_CMP), .DELAYCOUNTER_CMD(SYNOPSYS_UNCONNECTED_45), .LAST_STATE_DONE_PIPELINED(LAST_STATE_DONE_PIPELINED), .LOOP_STATE_TRUE(
        LOOP_STATE_TRUE), .LAST_STATE_DONE(LAST_STATE_DONE), .LAST_STATE(
        SYNOPSYS_UNCONNECTED_46) );
  firebird7_in_gate1_tessent_mbist_c1_controller_add_gen MBISTPG_ADD_GEN ( 
        .BIST_CLK(BIST_CLK_INT), .BIST_RUN(BIST_RUN), .RESET_REG_DEFAULT_MODE(
        n15), .BIST_SWITCH_ADDRESS_EN(net262684), .BIST_ASYNC_RESETN(n29), 
        .SI(POINTER_CNTRL_SO), .BIST_SHIFT_SHORT(n222), .BIST_HOLD(n52), 
        .LAST_TICK(LAST_TICK), .MBISTPG_REDUCED_ADDR_CNT_EN(
        REDUCED_ADDR_CNT_EN_REG), .ESOE_RESET(ESOE_RESET), .ADD_Y0_CMD({
        net298544, net298545}), .ADD_Y1_CMD({ADD_Y1_CMD_MODIFIED_2_, 
        ADD_Y1_CMD_MODIFIED_1_, ADD_Y1_CMD_MODIFIED_0_}), .ADD_X0_CMD({
        net298546, net298547}), .ADD_X1_CMD({ADD_X1_CMD_MODIFIED_2_, 
        ADD_X1_CMD_MODIFIED_1_, ADD_X1_CMD_MODIFIED_0_}), .BIST_Y0_COUNT_EN(
        net298548), .BIST_X0_COUNT_EN(net298549), .ADD_REG_SELECT({net298550, 
        ADD_REG_SELECT_1_, net298551}), .INH_LAST_ADDR_CNT(
        INH_LAST_ADDR_CNT_MODIFIED), .MBISTPG_ALGO_SEL(n3), 
        .MEM_ARRAY_DUMP_MODE(n225), .SO(ADD_GEN_SO), .Y0_MINMAX_TRIGGER(
        SYNOPSYS_UNCONNECTED_47), .Y1_MINMAX_TRIGGER(Y1_MINMAX_TRIGGER_OUT), 
        .X0_MINMAX_TRIGGER(SYNOPSYS_UNCONNECTED_48), .X1_MINMAX_TRIGGER(
        X1_MINMAX_TRIGGER_OUT), .X_ADDRESS({X_ADDRESS_7_, X_ADDRESS_6_, 
        X_ADDRESS_5_, X_ADDRESS_4_, X_ADDRESS_3_, X_ADDRESS_2_, X_ADDRESS_1_, 
        X_ADDRESS_0_}), .Y_ADDRESS({Y_ADDRESS_2_, Y_ADDRESS_1_, Y_ADDRESS_0_}), 
        .A_EQUALS_B_TRIGGER(SYNOPSYS_UNCONNECTED_49) );
  firebird7_in_gate1_tessent_mbist_c1_controller_add_format MBISTPG_ADD_FORMAT ( 
        .Y_ADDRESS({Y_ADDRESS_2_, Y_ADDRESS_1_, Y_ADDRESS_0_}), .X_ADDRESS({
        X_ADDRESS_7_, X_ADDRESS_6_, X_ADDRESS_5_, X_ADDRESS_4_, X_ADDRESS_3_, 
        X_ADDRESS_2_, X_ADDRESS_1_, X_ADDRESS_0_}), .COLUMN_ADDRESS(
        BIST_COL_ADD), .ROW_ADDRESS(BIST_ROW_ADD) );
  firebird7_in_gate1_tessent_mbist_c1_controller_signal_gen MBISTPG_SIGNAL_GEN ( 
        .BIST_CLK(BIST_CLK_INT), .BIST_ASYNC_RESETN(n28), .LV_TM(LV_TM), 
        .MEM_BYPASS_EN(MEM_BYPASS_EN), .SI(ADD_GEN_SO), .BIST_SHIFT_SHORT(n36), 
        .BIST_HOLD_R_INT(n52), .RESET_REG_DEFAULT_MODE(n15), .OP_SELECT_CMD({
        net298541, net298542, OP_SELECT_CMD_3_, net298543, OP_SELECT_CMD_1_, 
        OP_SELECT_CMD_0_}), .BIST_RUN(BIST_RUN_PIPE), .BIST_RUN_TO_BUF(
        BIST_RUN_INT), .BIST_RUN_BUF(BIST_RUN), .LAST_STATE_DONE(
        LAST_STATE_DONE), .LAST_STATE_DONE_PIPELINED(LAST_STATE_DONE_PIPELINED), .BIST_ALGO_SEL_CNT(n235), .MBISTPG_ALGO_SEL(n6), .MEM_ARRAY_DUMP_MODE(n225), 
        .LAST_TICK(LAST_TICK), .LAST_TICK_PIPELINED(LAST_TICK_PIPELINED), 
        .OPSET_SELECT_DECODED({OPSET_SELECT_DECODED_1_, 
        OPSET_SELECT_DECODED_0_}), .BIST_COLLAR_OPSET_SELECT(
        BIST_COLLAR_OPSET_SELECT), .BIST_CMP(BIST_CMP_FROM_SIGNAL_GEN), 
        .BIST_Y0_COUNT_EN(SYNOPSYS_UNCONNECTED_50), .BIST_X0_COUNT_EN(
        SYNOPSYS_UNCONNECTED_51), .SWITCH_ADDRESS_REG(SYNOPSYS_UNCONNECTED_52), 
        .OPSET_INVERT_EDATA(OPSET_INVERT_EDATA), .OPSET_INVERT_WDATA(
        SYNOPSYS_UNCONNECTED_53), .BIST_WRITEENABLE(BIST_WRITEENABLE), 
        .BIST_READENABLE(BIST_READENABLE), .SO(SIGNAL_GEN_SO) );
  firebird7_in_gate1_tessent_mbist_c1_controller_delaycounter MBISTPG_DELAYCOUNTER ( 
        .BIST_CLK(BIST_CLK_INT), .BIST_HOLD(n52), .BIST_ASYNC_RESETN(n28), 
        .BIST_SHIFT_SHORT(n36), .RESET_REG_DEFAULT_MODE(n15), 
        .RESET_REG_SETUP1(RESET_REG_SETUP1), .BIST_ALGO_SEL_CNT(
        ALGO_SEL_CNT_REG), .DELAYCOUNTER_CMD(net298540), .LAST_TICK(LAST_TICK), 
        .BIST_RUN(BIST_RUN), .SI(SIGNAL_GEN_SO), .MBISTPG_ALGO_SEL(n6), 
        .MEM_ARRAY_DUMP_MODE(n225), .ESOE_RESET(ESOE_RESET), 
        .DELAYCOUNTER_ENDCOUNT_TRIGGER(DELAYCOUNTER_ENDCOUNT_TRIGGER_INT), 
        .SO(DELAYCOUNTER_SO) );
  firebird7_in_gate1_tessent_mbist_c1_controller_data_gen MBISTPG_DATA_GEN ( 
        .BIST_CLK(BIST_CLK_INT), .BIST_HOLD(n52), .BIST_ASYNC_RESETN(n27), 
        .BIST_SWITCH_ADDRESS_EN(net262684), .RESET_REG_DEFAULT_MODE(n15), 
        .WDATA_CMD({WDATA_CMD_MODIFIED_3_, net298538, WDATA_CMD_MODIFIED_1_, 
        WDATA_CMD_MODIFIED_0_}), .EDATA_CMD({EDATA_CMD_MODIFIED_3_, net298539, 
        EDATA_CMD_MODIFIED_1_, EDATA_CMD_MODIFIED_0_}), .ROW_ADDRESS(
        BIST_ROW_ADD), .COLUMN_ADDRESS(BIST_COL_ADD), .LAST_TICK(LAST_TICK), 
        .LAST_TICK_PIPELINED(LAST_TICK_PIPELINED), .OPSET_SELECT_DECODED({
        OPSET_SELECT_DECODED_1_, OPSET_SELECT_DECODED_0_}), .BIST_RUN(BIST_RUN), .BIST_SHIFT_SHORT(n36), .SI(DELAYCOUNTER_SO), .BIST_ALGO_SEL_CNT(n236), 
        .MBISTPG_ALGO_SEL(n3), .WRITE_DATA(BIST_WRITE_DATA), .EXPECT_DATA(
        BIST_EXPECT_DATA), .BIST_WRITEENABLE(BIST_WRITEENABLE), .SO(
        DATA_GEN_SO) );
  firebird7_in_gate1_tessent_mbist_c1_controller_repeat_loop_cntrl MBISTPG_REPEAT_LOOP_CNTRL ( 
        .BIST_CLK(BIST_CLK_INT), .RESET_REG_SETUP1(RESET_REG_SETUP1), 
        .RESET_REG_DEFAULT_MODE(n15), .LOOP_CMD({LOOP_CMD_1_, LOOP_CMD_0_}), 
        .BIST_ASYNC_RESETN(n29), .ADD_Y0_CMD({net298528, net298529}), 
        .ADD_Y1_CMD({ADD_Y1_CMD_2_, ADD_Y1_CMD_1_, ADD_Y1_CMD_0_}), 
        .ADD_X0_CMD({net298530, net298531}), .ADD_X1_CMD({ADD_X1_CMD_2_, 
        ADD_X1_CMD_1_, ADD_X1_CMD_0_}), .WDATA_CMD({WDATA_CMD_3_, net298532, 
        WDATA_CMD_1_, WDATA_CMD_0_}), .EDATA_CMD({EDATA_CMD_3_, net298533, 
        EDATA_CMD_1_, EDATA_CMD_0_}), .INH_LAST_ADDR_CNT(INH_LAST_ADDR_CNT), 
        .INH_DATA_CMP(INH_DATA_CMP), .LOOP_STATE_TRUE(LOOP_STATE_TRUE), 
        .A_EQUALS_B_INVERT_DATA({net298534, net298535}), .A_EQUALS_B_TRIGGER(
        net298536), .SI(DATA_GEN_SO), .BIST_HOLD(n52), .LAST_TICK(LAST_TICK), 
        .BIST_SHIFT_SHORT(n36), .BIST_RUN(BIST_RUN), .OPSET_SELECT_DECODED({
        OPSET_SELECT_DECODED_1_, OPSET_SELECT_DECODED_0_}), .MBISTPG_ALGO_SEL(
        n6), .OPSET_INVERT_EDATA(OPSET_INVERT_EDATA), .OPSET_INVERT_WDATA(
        net298537), .ESOE_RESET(ESOE_RESET), .LOOPCOUNTMAX_TRIGGER(
        LOOPCOUNTMAX_TRIGGER_INT), .LOOP_POINTER({LOOP_POINTER_4_, 
        LOOP_POINTER_3_, LOOP_POINTER_2_, LOOP_POINTER_1_, 
        SYNOPSYS_UNCONNECTED_54}), .ADD_Y0_CMD_MODIFIED({
        SYNOPSYS_UNCONNECTED_55, SYNOPSYS_UNCONNECTED_56}), 
        .ADD_Y1_CMD_MODIFIED({ADD_Y1_CMD_MODIFIED_2_, ADD_Y1_CMD_MODIFIED_1_, 
        ADD_Y1_CMD_MODIFIED_0_}), .ADD_X0_CMD_MODIFIED({
        SYNOPSYS_UNCONNECTED_57, SYNOPSYS_UNCONNECTED_58}), 
        .ADD_X1_CMD_MODIFIED({ADD_X1_CMD_MODIFIED_2_, ADD_X1_CMD_MODIFIED_1_, 
        ADD_X1_CMD_MODIFIED_0_}), .WDATA_CMD_MODIFIED({WDATA_CMD_MODIFIED_3_, 
        SYNOPSYS_UNCONNECTED_59, WDATA_CMD_MODIFIED_1_, WDATA_CMD_MODIFIED_0_}), .EDATA_CMD_MODIFIED({EDATA_CMD_MODIFIED_3_, SYNOPSYS_UNCONNECTED_60, 
        EDATA_CMD_MODIFIED_1_, EDATA_CMD_MODIFIED_0_}), 
        .INH_LAST_ADDR_CNT_MODIFIED(INH_LAST_ADDR_CNT_MODIFIED_INT), 
        .INH_DATA_CMP_MODIFIED(INH_DATA_CMP_MODIFIED), .SO(
        REPEAT_LOOP_CNTRL_SO) );
  firebird7_in_gate1_tessent_mbist_c1_controller_ctl_comp MBISTPG_CTL_COMP ( 
        .BIST_CLK(BIST_CLK_INT), .BIST_CLK_NG(BIST_CLK), .BIST_EN(net262684), 
        .BIST_ON(BIST_ON), .BIST_ASYNC_RESETN(n28), .BIST_IDLE_PULSE(
        BIST_IDLE_PULSE), .CLEAR_DEFAULT(BIST_CLEAR_DEFAULT), .CLEAR(net262684), .BIST_HOLD_R(BIST_COLLAR_HOLD), .BIST_SHIFT_SHORT(n14), .SI(CTL_COMP_SI), 
        .GO(net262684), .GO_EN(GO_EN), .CMP_EN(BIST_CMP), .CMP_EN_R(CMP_EN_R), 
        .BIST_COLLAR_GO(BIST_COLLAR_GO), .BIST_DONE(BIST_DONE_PIPE0), .FL1(
        FL_CNT_MODE[1]), .RESET_REG_SETUP1(MBISTPG_RESET_REG_SETUP2), 
        .FL_CNT_MODE0_SYNC(FL_CNT_MODE0_SYNC), .TM(net262684), 
        .FREEZE_STOP_ERROR(FREEZE_STOP_ERROR), .SO(CTL_COMP_SO), 
        .FREEZE_GO_ID(FREEZE_GO_ID), .HOLD_EN(BIST_HOLD_R_INT), 
        .BIST_STOP_ON_ERROR_EN(SYNOPSYS_UNCONNECTED_61), .ERROR_CNT_ZERO(
        ERROR_CNT_ZERO), .ESOE_RESET(ESOE_RESET) );
  i0sfvp003ab1d04x5 ALGO_SEL_CNT_REG_reg ( .si(net262684), .d(n268), .ssb(n582), .clk(BIST_CLK_INT), .rb(n28), .o(ALGO_SEL_CNT_REG), .so(
        SYNOPSYS_UNCONNECTED_62) );
  i0sfvp003ab1d18x5 BIRA_EN_R_reg ( .si(net262684), .d(n562), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n29), .o(BIST_COLLAR_BIRA_EN), .so(
        SYNOPSYS_UNCONNECTED_63) );
  i0snorb02ab1n02x7 U379 ( .a(n269), .b(n18), .out0(n268) );
  i0sfvz08bab1d02x5 MEM37_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N266), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM37_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_64) );
  i0sfvz08bab1d02x5 MEM34_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N281), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM34_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_65) );
  i0sfvz08bab1d02x5 MEM32_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N291), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM32_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_66) );
  i0sfvz08bab1d02x5 MEM29_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N306), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM29_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_67) );
  i0sfvz08bab1d02x5 MEM35_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N276), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM35_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_68) );
  i0sfvz08bab1d02x5 MEM38_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N261), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM38_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_69) );
  i0sfvz08bab1d02x5 MEM30_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N301), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM30_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_70) );
  i0sfvz08bab1d02x5 MEM33_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N286), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM33_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_71) );
  i0sfvz08bab1d02x5 MEM31_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N296), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM31_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_72) );
  i0sfvz08bab1d02x5 MEM8_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N411), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM8_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_73) );
  i0sfvz08bab1d03x6 MEM7_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N416), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM7_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_74) );
  i0sfvz08bab1d03x6 MEM18_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N361), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM18_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_75) );
  i0sfvz08bab1d03x6 MEM28_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N311), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM28_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_76) );
  i0sfvz08bab1d03x6 MEM12_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N391), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM12_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_77) );
  i0sfvz08bab1d03x6 MEM17_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N366), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM17_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_78) );
  i0sfvz08bab1d03x6 MEM22_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N341), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM22_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_79) );
  i0sfvz08bab1d03x6 MEM13_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N386), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM13_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_80) );
  i0sfvz08bab1d03x6 MEM23_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N336), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM23_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_81) );
  i0sfvz08bab1d03x6 MEM1_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N446), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM1_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_82) );
  i0sfvz08bab1d03x6 MEM6_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N421), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM6_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_83) );
  i0sfvz08bab1d03x6 MEM11_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N396), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM11_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_84) );
  i0snorb02ab1n02x5 U382 ( .a(n273), .b(n18), .out0(n272) );
  i0snorb02ab1n02x5 U376 ( .a(n265), .b(n18), .out0(n264) );
  i0snorb02ab1n02x5 U373 ( .a(n2610), .b(n18), .out0(n260) );
  i0snorb02ab1n02x5 U370 ( .a(n257), .b(n18), .out0(n256) );
  i0sfvz003ab1d02x6 PriorityColumn_R_reg ( .si(net262684), .d(n595), .ssb(n582), .clk(BIST_CLK_INT), .rb(n29), .o(n243), .so(SYNOPSYS_UNCONNECTED_85) );
  i0sfvz003ab1d02x6 DIAG_EN_R_reg ( .si(net262684), .d(n565), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n29), .o(n242), .so(SYNOPSYS_UNCONNECTED_86)
         );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_39 ( .si(net262684), .d(n280), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n61), .o(MEM_SELECT_REG_39_), 
        .so(SYNOPSYS_UNCONNECTED_87) );
  i0sfvz003ab1d03x6 BIRA_CONFIG_reg ( .si(net262684), .d(n578), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n28), .o(CTL_COMP_SI), .so(
        SYNOPSYS_UNCONNECTED_88) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_38 ( .si(net262684), .d(n287), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_38_), 
        .so(SYNOPSYS_UNCONNECTED_89) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_32 ( .si(net262684), .d(n329), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_32_), 
        .so(SYNOPSYS_UNCONNECTED_90) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_37 ( .si(net262684), .d(n294), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_37_), 
        .so(SYNOPSYS_UNCONNECTED_91) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_35 ( .si(net262684), .d(n308), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_35_), 
        .so(SYNOPSYS_UNCONNECTED_92) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_30 ( .si(net262684), .d(n343), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_30_), 
        .so(SYNOPSYS_UNCONNECTED_93) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_31 ( .si(net262684), .d(n3360), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_31_), 
        .so(SYNOPSYS_UNCONNECTED_94) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_33 ( .si(net262684), .d(n322), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_33_), 
        .so(SYNOPSYS_UNCONNECTED_95) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_34 ( .si(net262684), .d(n315), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_34_), 
        .so(SYNOPSYS_UNCONNECTED_96) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_8 ( .si(net262684), .d(n497), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_8_), .so(
        SYNOPSYS_UNCONNECTED_97) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_29 ( .si(net262684), .d(n350), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_29_), 
        .so(SYNOPSYS_UNCONNECTED_98) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_25 ( .si(net262684), .d(n378), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_25_), 
        .so(SYNOPSYS_UNCONNECTED_99) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_36 ( .si(net262684), .d(n3010), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n62), .o(MEM_SELECT_REG_36_), 
        .so(SYNOPSYS_UNCONNECTED_100) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_5 ( .si(net262684), .d(n518), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_5_), .so(
        SYNOPSYS_UNCONNECTED_101) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_15 ( .si(net262684), .d(n448), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_15_), 
        .so(SYNOPSYS_UNCONNECTED_102) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_26 ( .si(net262684), .d(n3710), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_26_), 
        .so(SYNOPSYS_UNCONNECTED_103) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_16 ( .si(net262684), .d(n4410), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_16_), 
        .so(SYNOPSYS_UNCONNECTED_104) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_27 ( .si(net262684), .d(n364), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_27_), 
        .so(SYNOPSYS_UNCONNECTED_105) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_7 ( .si(net262684), .d(n504), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_7_), .so(
        SYNOPSYS_UNCONNECTED_106) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_17 ( .si(net262684), .d(n434), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_17_), 
        .so(SYNOPSYS_UNCONNECTED_107) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_6 ( .si(net262684), .d(n511), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_6_), .so(
        SYNOPSYS_UNCONNECTED_108) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_24 ( .si(net262684), .d(n385), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_24_), 
        .so(SYNOPSYS_UNCONNECTED_109) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_4 ( .si(net262684), .d(n525), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_4_), .so(
        SYNOPSYS_UNCONNECTED_110) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_14 ( .si(net262684), .d(n455), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_14_), 
        .so(SYNOPSYS_UNCONNECTED_111) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_9 ( .si(net262684), .d(n490), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_9_), .so(
        SYNOPSYS_UNCONNECTED_112) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_19 ( .si(net262684), .d(n420), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_19_), 
        .so(SYNOPSYS_UNCONNECTED_113) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_2 ( .si(net262684), .d(n539), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_2_), .so(
        SYNOPSYS_UNCONNECTED_114) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_28 ( .si(net262684), .d(n357), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_28_), 
        .so(SYNOPSYS_UNCONNECTED_115) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_3 ( .si(net262684), .d(n532), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_3_), .so(
        SYNOPSYS_UNCONNECTED_116) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_13 ( .si(net262684), .d(n462), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_13_), 
        .so(SYNOPSYS_UNCONNECTED_117) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_23 ( .si(net262684), .d(n392), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n63), .o(MEM_SELECT_REG_23_), 
        .so(SYNOPSYS_UNCONNECTED_118) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_18 ( .si(net262684), .d(n427), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_18_), 
        .so(SYNOPSYS_UNCONNECTED_119) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_10 ( .si(net262684), .d(n483), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_10_), 
        .so(SYNOPSYS_UNCONNECTED_120) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_20 ( .si(net262684), .d(n413), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_20_), 
        .so(SYNOPSYS_UNCONNECTED_121) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_0 ( .si(net262684), .d(n553), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_0_), .so(
        SYNOPSYS_UNCONNECTED_122) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_12 ( .si(net262684), .d(n469), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_12_), 
        .so(SYNOPSYS_UNCONNECTED_123) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_22 ( .si(net262684), .d(n399), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_22_), 
        .so(SYNOPSYS_UNCONNECTED_124) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_1 ( .si(net262684), .d(n546), .ssb(n582), .clk(BIST_CLK_INT), .rb(n582), .s(n66), .o(MEM_SELECT_REG_1_), .so(
        SYNOPSYS_UNCONNECTED_125) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_11 ( .si(net262684), .d(n476), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n65), .o(MEM_SELECT_REG_11_), 
        .so(SYNOPSYS_UNCONNECTED_126) );
  i0sfvz00bab1d03x5 MEM_SELECT_REG_reg_21 ( .si(net262684), .d(n4060), .ssb(
        n582), .clk(BIST_CLK_INT), .rb(n582), .s(n64), .o(MEM_SELECT_REG_21_), 
        .so(SYNOPSYS_UNCONNECTED_127) );
  i0sfvz08bab1d03x6 MEM39_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        n223), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM39_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_128) );
  i0sfvz08bab1d03x6 MEM36_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N271), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM36_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_129) );
  i0sfvz08bab1d03x6 MEM27_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N316), .ssb(n582), .clkb(TCK), .rb(n28), .s(net262684), .o(
        MEM27_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_130) );
  i0sfvz08bab1d03x6 MEM0_BIST_COLLAR_SO_RetimeIn_reg ( .si(net262684), .d(
        MEM0_BIST_COLLAR_SO), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), 
        .o(MEM0_BIST_COLLAR_SO_RetimeIn), .so(SYNOPSYS_UNCONNECTED_131) );
  i0sfvz08bab1d03x6 MEM0_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N451), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM0_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_132) );
  i0sfvz08bab1d03x6 MEM21_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N346), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM21_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_133) );
  i0sfvz08bab1d03x6 MEM3_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N436), .ssb(n582), .clkb(TCK), .rb(n29), .s(net262684), .o(
        MEM3_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_134) );
  i0sfvz08bab1d03x6 MEM2_BIST_COLLAR_SI_RetimeOut_reg ( .si(net262684), .d(
        N441), .ssb(n582), .clkb(TCK), .rb(n27), .s(net262684), .o(
        MEM2_BIST_COLLAR_SI), .so(SYNOPSYS_UNCONNECTED_135) );
  i0sfvp003ab1d04x5 ALGO_SEL_REG_reg ( .si(net262684), .d(n272), .ssb(n582), 
        .clk(BIST_CLK_INT), .rb(n28), .o(ALGO_SEL_REG), .so(
        SYNOPSYS_UNCONNECTED_136) );
  i0stilo00ab1n02x5 U3 ( .o(net262684) );
  i0soai012ab1n06x5 U4 ( .b(n94), .c(n93), .a(n92), .o1(BYPASS_RUN_STATE_INT)
         );
  i0sinv030ab1n02x5 U5 ( .a(n94), .o1(n225) );
  i0saoi222ab1n02x7 U6 ( .a(MEM1_BIST_COLLAR_SI), .b(MEM_SELECT_REG_2_), .c(
        MEM0_BIST_COLLAR_SI), .d(MEM_SELECT_REG_1_), .e(MEM_SELECT_REG_0_), 
        .f(MEM0_BIST_COLLAR_SO_RetimeIn), .o1(n196) );
  i0sbff000ab1n06x5 U7 ( .a(n5), .o(n3) );
  i0snand42ab1n02x5 U8 ( .a(MEM30_BIST_COLLAR_SI), .b(MEM_SELECT_REG_31_), 
        .o1(n186) );
  i0snand42ab1n02x5 U9 ( .a(MEM29_BIST_COLLAR_SI), .b(MEM_SELECT_REG_30_), 
        .o1(n187) );
  i0sbff000ab1n02x5 U10 ( .a(n177), .o(n34) );
  i0sbff000ab1n02x5 U11 ( .a(MBISTPG_GOID_SETUP_SYNC), .o(n51) );
  i0saoi022ab1n02x7 U12 ( .a(MEM8_BIST_COLLAR_SI), .b(MEM_SELECT_REG_9_), .c(
        MEM7_BIST_COLLAR_SI), .d(MEM_SELECT_REG_8_), .o1(n195) );
  i0saoi022ab1n02x7 U13 ( .a(MEM28_BIST_COLLAR_SI), .b(MEM_SELECT_REG_29_), 
        .c(MEM27_BIST_COLLAR_SI), .d(MEM_SELECT_REG_28_), .o1(n205) );
  i0saoi222ab1n02x7 U14 ( .a(MEM21_BIST_COLLAR_SI), .b(MEM_SELECT_REG_22_), 
        .c(MEM20_BIST_COLLAR_SI), .d(MEM_SELECT_REG_21_), .e(
        MEM19_BIST_COLLAR_SI), .f(MEM_SELECT_REG_20_), .o1(n206) );
  i0saoi022ab1n02x7 U15 ( .a(MEM18_BIST_COLLAR_SI), .b(MEM_SELECT_REG_19_), 
        .c(MEM17_BIST_COLLAR_SI), .d(MEM_SELECT_REG_18_), .o1(n200) );
  i0saoi222ab1n02x7 U16 ( .a(MEM11_BIST_COLLAR_SI), .b(MEM_SELECT_REG_12_), 
        .c(MEM10_BIST_COLLAR_SI), .d(MEM_SELECT_REG_11_), .e(
        MEM9_BIST_COLLAR_SI), .f(MEM_SELECT_REG_10_), .o1(n201) );
  i0snand42ab1n02x5 U17 ( .a(MEM3_BIST_COLLAR_SI), .b(MEM_SELECT_REG_4_), .o1(
        n192) );
  i0snand42ab1n02x5 U18 ( .a(MEM2_BIST_COLLAR_SI), .b(MEM_SELECT_REG_3_), .o1(
        n193) );
  i0snand42ab1n02x5 U19 ( .a(MEM23_BIST_COLLAR_SI), .b(MEM_SELECT_REG_24_), 
        .o1(n202) );
  i0snand42ab1n02x5 U20 ( .a(MEM22_BIST_COLLAR_SI), .b(MEM_SELECT_REG_23_), 
        .o1(n203) );
  i0snand42ab1n02x5 U21 ( .a(MEM13_BIST_COLLAR_SI), .b(MEM_SELECT_REG_14_), 
        .o1(n197) );
  i0snand42ab1n02x5 U22 ( .a(MEM12_BIST_COLLAR_SI), .b(MEM_SELECT_REG_13_), 
        .o1(n198) );
  i0snand42ab1n02x5 U23 ( .a(MEM36_BIST_COLLAR_SI), .b(MEM_SELECT_REG_37_), 
        .o1(n183) );
  i0snand42ab1n02x5 U24 ( .a(MEM32_BIST_COLLAR_SI), .b(MEM_SELECT_REG_33_), 
        .o1(n191) );
  i0snand42ab1n02x5 U25 ( .a(MEM33_BIST_COLLAR_SI), .b(MEM_SELECT_REG_34_), 
        .o1(n190) );
  i0snand02ab1n02x5 U26 ( .a(n187), .b(n186), .o1(n188) );
  i0sinv000ab1n03x5 U27 ( .a(n75), .o1(n77) );
  i0soai012ab1n02x5 U28 ( .b(n178), .c(n30), .a(n176), .o1(N451) );
  i0soai012ab1n02x5 U29 ( .b(n124), .c(n32), .a(n123), .o1(N321) );
  i0soai012ab1n02x5 U30 ( .b(n126), .c(n32), .a(n125), .o1(N326) );
  i0soai012ab1n02x5 U31 ( .b(n128), .c(n32), .a(n127), .o1(N331) );
  i0soai012ab1n02x5 U32 ( .b(n136), .c(n31), .a(n135), .o1(N351) );
  i0soai012ab1n02x5 U33 ( .b(n138), .c(n31), .a(n137), .o1(N356) );
  i0soai012ab1n02x5 U34 ( .b(n144), .c(n31), .a(n143), .o1(N371) );
  i0soai012ab1n02x5 U35 ( .b(n146), .c(n31), .a(n145), .o1(N376) );
  i0soai012ab1n02x5 U36 ( .b(n148), .c(n31), .a(n147), .o1(N381) );
  i0soai012ab1n02x5 U37 ( .b(n156), .c(n30), .a(n155), .o1(N401) );
  i0soai012ab1n02x5 U38 ( .b(n159), .c(n30), .a(n157), .o1(N406) );
  i0soai012ab1n02x5 U39 ( .b(n167), .c(n30), .a(n166), .o1(N426) );
  i0soai012ab1n02x5 U40 ( .b(n169), .c(n30), .a(n168), .o1(N431) );
  i0sinv020ab1n03x5 U41 ( .a(BIST_SETUP2), .o1(n24) );
  i0sinv000ab1n02x5 U42 ( .a(BIST_SETUP[1]), .o1(n23) );
  i0snorp02ab1n03x5 U43 ( .a(BIST_COLLAR_BIRA_EN), .b(BYPASS_RUN_STATE_INT), 
        .o1(n219) );
  i0saoi302ab1n02x5 U44 ( .d(BIST_ON), .e(CTL_COMP_SI), .a(n219), .b(n218), 
        .c(GO_EN), .o1(BIST_CLEAR_BIRA) );
  i0sinv040ab1n06x5 U45 ( .a(n81), .o1(BIST_CMP) );
  i0snona23ab1n09x5 U46 ( .c(INH_DATA_CMP_MODIFIED), .d(BIST_HOLD_R_INT), .a(
        n80), .b(BIST_CMP_FROM_SIGNAL_GEN), .out0(n81) );
  i0sinv020ab1n10x5 U47 ( .a(n53), .o1(n52) );
  i0sinv000ab1n06x5 U48 ( .a(BIST_HOLD_R_INT), .o1(n53) );
  i0sinv040ab1n03x5 U49 ( .a(n25), .o1(n26) );
  i0sbff000ab1n06x5 U50 ( .a(n237), .o(MBISTPG_RESET_REG_SETUP2) );
  i0sao0023ab1n03x5 U51 ( .c(n13), .d(n11), .e(n24), .a(n10), .b(n13), .o(
        BIST_SHIFT_COLLAR) );
  i0sinv000ab1n02x5 U52 ( .a(BIST_SETUP[1]), .o1(n11) );
  i0sand002ab1n02x5 U53 ( .a(BIST_COLLAR_HOLD), .b(MBISTPG_EN), .o(n13) );
  i0sinv000ab1n06x5 U54 ( .a(ALGO_SEL_REG), .o1(n8) );
  i0sinv020ab1n04x5 U55 ( .a(ALGO_SEL_CNT_REG), .o1(n1) );
  i0sinv000ab1n02x5 U56 ( .a(ALGO_SEL_CNT_REG), .o1(n9) );
  i0saoi112ab1n02x7 U57 ( .c(DEFAULT_MODE), .d(n7), .a(n8), .b(n9), .o1(n5) );
  i0sinv000ab1n02x5 U58 ( .a(n9), .o1(n2) );
  i0sinv000ab1n02x5 U59 ( .a(n59), .o1(n4) );
  i0sinv020ab1n02x5 U60 ( .a(BIST_SETUP[0]), .o1(n59) );
  i0sinv000ab1n02x5 U61 ( .a(ALGO_SEL_REG), .o1(n96) );
  i0saoi112ab1n03x5 U62 ( .c(DEFAULT_MODE), .d(n7), .a(n8), .b(n1), .o1(n6) );
  i0sand003ab1n06x5 U63 ( .a(n11), .b(n4), .c(BIST_SETUP2), .o(n10) );
  i0sbff000ab1n06x5 U64 ( .a(BIST_HOLD), .o(BIST_COLLAR_HOLD) );
  i0sinv000ab1n02x5 U65 ( .a(MBISTPG_MEM_ARRAY_DUMP_MODE), .o1(n7) );
  i0sinv000ab1n30x5 U66 ( .a(n37), .o1(n36) );
  i0snorp02ab1n06x5 U67 ( .a(n82), .b(GO_EN), .o1(n17) );
  i0sinv040ab1n03x5 U68 ( .a(n73), .o1(n87) );
  i0snanp03ab1n02x5 U69 ( .a(n13), .b(n23), .c(n24), .o1(n217) );
  i0snand22ab1n02x5 U70 ( .a(n18), .b(n217), .o1(n86) );
  i0sinv040ab1n03x5 U71 ( .a(n12), .o1(BIST_CLEAR_DEFAULT) );
  i0sinv000ab1n03x5 U72 ( .a(MEM_SELECT_REG_0_), .o1(n178) );
  i0sinv000ab1n03x5 U73 ( .a(n217), .o1(n222) );
  i0sinv030ab1n02x5 U74 ( .a(MEM_SELECT_REG_20_), .o1(n136) );
  i0sinv030ab1n02x5 U75 ( .a(MEM_SELECT_REG_19_), .o1(n138) );
  i0sinv030ab1n02x5 U76 ( .a(MEM_SELECT_REG_14_), .o1(n148) );
  i0sinv030ab1n02x5 U77 ( .a(MEM_SELECT_REG_10_), .o1(n156) );
  i0sinv030ab1n02x5 U78 ( .a(MEM_SELECT_REG_9_), .o1(n159) );
  i0sinv030ab1n02x5 U79 ( .a(MEM_SELECT_REG_4_), .o1(n169) );
  i0sinv030ab1n02x5 U80 ( .a(MEM_SELECT_REG_24_), .o1(n128) );
  i0snor042ab1n03x5 U81 ( .a(n220), .b(n179), .o1(BIST_SHIFT_BIRA_COLLAR) );
  i0snanb02ab1n02x5 U82 ( .a(MBISTPG_ALGO_MODE_SYNC_1_), .b(n17), .out0(n12)
         );
  i0sand008ab1n02x5 U83 ( .a(BIST_COLLAR_GO[33]), .b(BIST_COLLAR_GO[32]), .c(
        BIST_COLLAR_GO[34]), .d(BIST_COLLAR_GO[36]), .e(BIST_COLLAR_GO[35]), 
        .f(BIST_COLLAR_GO[31]), .g(BIST_COLLAR_GO[30]), .h(n232), .o(n231) );
  i0sinv000ab1n02x5 U84 ( .a(MEM_SELECT_REG_16_), .o1(n144) );
  i0sinv000ab1n02x5 U85 ( .a(MEM_SELECT_REG_15_), .o1(n146) );
  i0sinv000ab1n02x5 U86 ( .a(MEM_SELECT_REG_5_), .o1(n167) );
  i0sinv000ab1n02x5 U87 ( .a(MEM_SELECT_REG_25_), .o1(n126) );
  i0sinv000ab1n02x5 U88 ( .a(MEM_SELECT_REG_26_), .o1(n124) );
  i0snanb02ab1n02x5 U89 ( .a(n57), .b(n36), .out0(n71) );
  i0snanb02ab1n02x5 U90 ( .a(n216), .b(n36), .out0(n69) );
  i0sbff000ab1n02x5 U91 ( .a(n60), .o(n29) );
  i0sbff000ab1n02x5 U92 ( .a(n60), .o(n27) );
  i0sbff000ab1n02x5 U93 ( .a(n60), .o(n28) );
  i0snona22ab1n02x4 U94 ( .b(n4), .c(BIST_SETUP[1]), .a(BIST_SETUP2), .out0(
        n179) );
  i0snorb02ab1n02x5 U95 ( .a(RESET_REG_SETUP1), .b(n52), .out0(
        BIST_COLLAR_SETUP) );
  i0snorp03ab1n02x5 U96 ( .a(BIST_SETUP2), .b(BIST_SETUP[1]), .c(n4), .o1(
        n_373_net_0) );
  i0sbff000ab1n03x5 U97 ( .a(n177), .o(n35) );
  i0snorp02ab1n02x5 U98 ( .a(LV_TM), .b(n220), .o1(INJECT_TCK) );
  i0soai012ab1n06x5 U99 ( .b(MBISTPG_ALGO_MODE_SYNC_0_), .c(
        MBISTPG_ALGO_MODE_SYNC_1_), .a(MBISTPG_MEM_RST_SYNC), .o1(n92) );
  i0snand22ab1n03x5 U100 ( .a(BIST_SETUP_SYNC_1_), .b(BIST_SETUP_SYNC_0_), 
        .o1(n93) );
  i0snanp02ab1n02x5 U101 ( .a(MBISTPG_DIAG_EN_GATED), .b(n87), .o1(n70) );
  i0snorp02ab1n02x5 U102 ( .a(n17), .b(n77), .o1(n76) );
  i0snanp02ab1n02x5 U103 ( .a(MBISTPG_BIRA_EN_SYNC), .b(n87), .o1(n72) );
  i0sinv000ab1n02x5 U104 ( .a(MEM_SELECT_REG_17_), .o1(n142) );
  i0sinv000ab1n02x5 U105 ( .a(MEM_SELECT_REG_7_), .o1(n163) );
  i0sinv000ab1n02x5 U106 ( .a(MEM_SELECT_REG_6_), .o1(n165) );
  i0sinv000ab1n02x5 U107 ( .a(MEM_SELECT_REG_27_), .o1(n122) );
  i0sand002ab1n03x5 U108 ( .a(n203), .b(n202), .o(n19) );
  i0snand04ab1n02x5 U109 ( .a(n19), .b(n206), .c(n205), .d(n204), .o1(n207) );
  i0sand002ab1n03x5 U110 ( .a(n198), .b(n197), .o(n20) );
  i0snand04ab1n02x5 U111 ( .a(n20), .b(n201), .c(n200), .d(n199), .o1(n208) );
  i0sand002ab1n03x5 U112 ( .a(n193), .b(n192), .o(n21) );
  i0snand04ab1n02x5 U113 ( .a(n21), .b(n196), .c(n195), .d(n194), .o1(n209) );
  i0snand22ab1n03x5 U114 ( .a(n181), .b(n180), .o1(n182) );
  i0snand42ab1n04x5 U115 ( .a(MEM34_BIST_COLLAR_SI), .b(MEM_SELECT_REG_35_), 
        .o1(n181) );
  i0sinv000ab1n02x5 U116 ( .a(MEM_SELECT_REG_36_), .o1(n104) );
  i0soai012ab1n02x7 U117 ( .b(n104), .c(n33), .a(n103), .o1(N271) );
  i0saboi22ab1n03x5 U118 ( .c(n49), .d(MEM_SELECT_REG_39_), .a(
        SHORT_SETUP_SYNC), .b(MBISTPG_BIRA_SETUP_SYNC), .out0(n214) );
  i0soaib12ab1n02x5 U119 ( .c(MEM_SELECT_REG_38_), .b(n33), .a(n100), .out0(
        N261) );
  i0sinv000ab1n02x5 U120 ( .a(BIST_SI_PIPELINE), .o1(n216) );
  i0sinv000ab1n02x5 U121 ( .a(n217), .o1(n14) );
  i0sbff000ab1n02x5 U122 ( .a(n67), .o(n62) );
  i0sbff000ab1n02x5 U123 ( .a(n67), .o(n63) );
  i0sbff000ab1n02x5 U124 ( .a(n67), .o(n64) );
  i0sbff000ab1n02x5 U125 ( .a(n67), .o(n65) );
  i0sbff000ab1n02x5 U126 ( .a(n67), .o(n61) );
  i0sbff000ab1n02x5 U127 ( .a(n67), .o(n66) );
  i0sinv000ab1n03x5 U128 ( .a(n179), .o1(n221) );
  i0sinv000ab1n03x5 U129 ( .a(n60), .o1(n67) );
  i0sinv000ab1n03x5 U130 ( .a(n222), .o1(n37) );
  i0sbff000ab1n02x5 U131 ( .a(n41), .o(n40) );
  i0sbff000ab1n02x5 U132 ( .a(n41), .o(n39) );
  i0sbff000ab1n02x5 U133 ( .a(MBISTPG_ASYNC_RESETN), .o(n60) );
  i0sbff000ab1n02x5 U134 ( .a(n34), .o(n32) );
  i0sbff000ab1n02x5 U135 ( .a(n35), .o(n31) );
  i0sbff000ab1n02x5 U136 ( .a(n35), .o(n30) );
  i0sbff000ab1n02x5 U137 ( .a(n34), .o(n33) );
  i0sbff000ab1n02x5 U138 ( .a(n239), .o(n41) );
  i0sbff000ab1n02x5 U139 ( .a(n42), .o(n38) );
  i0sbff000ab1n02x5 U140 ( .a(n239), .o(n42) );
  i0sbff000ab1n02x5 U141 ( .a(n47), .o(n45) );
  i0sbff000ab1n02x5 U142 ( .a(n48), .o(n44) );
  i0sbff000ab1n02x5 U143 ( .a(n48), .o(n43) );
  i0sbff000ab1n02x5 U144 ( .a(n47), .o(n46) );
  i0snanp02ab1n03x5 U145 ( .a(BIST_INIT), .b(n26), .o1(n82) );
  i0snanp02ab1n02x5 U146 ( .a(n17), .b(n53), .o1(n85) );
  i0sinv000ab1n03x5 U147 ( .a(n57), .o1(BIST_COLLAR_DIAG_EN) );
  i0sinv000ab1n03x5 U148 ( .a(n55), .o1(PriorityColumn) );
  i0sbff000ab1n02x5 U149 ( .a(n51), .o(n49) );
  i0sand008ab1n02x5 U150 ( .a(BIST_COLLAR_GO[24]), .b(BIST_COLLAR_GO[23]), .c(
        BIST_COLLAR_GO[25]), .d(BIST_COLLAR_GO[27]), .e(BIST_COLLAR_GO[26]), 
        .f(BIST_COLLAR_GO[22]), .g(BIST_COLLAR_GO[21]), .h(n234), .o(n229) );
  i0sand008ab1d02x5 U151 ( .a(BIST_COLLAR_GO[18]), .b(BIST_COLLAR_GO[17]), .c(
        n227), .d(BIST_COLLAR_GO[16]), .e(n228), .f(n229), .g(n230), .h(n231), 
        .o(MBISTPG_GO_INT) );
  i0sand002ab1n02x5 U152 ( .a(BIST_COLLAR_GO[15]), .b(BIST_COLLAR_GO[14]), .o(
        n227) );
  i0snano32ab1n02x4 U153 ( .b(BIST_COLLAR_GO[12]), .c(BIST_COLLAR_GO[13]), .d(
        BIST_COLLAR_GO[11]), .a(n99), .out0(n228) );
  i0sand008ab1n02x5 U154 ( .a(BIST_COLLAR_GO[6]), .b(BIST_COLLAR_GO[5]), .c(
        BIST_COLLAR_GO[7]), .d(BIST_COLLAR_GO[9]), .e(BIST_COLLAR_GO[8]), .f(
        BIST_COLLAR_GO[4]), .g(BIST_COLLAR_GO[3]), .h(n233), .o(n230) );
  i0sbff000ab1n02x5 U155 ( .a(n51), .o(n50) );
  i0sbff000ab1n02x5 U156 ( .a(n238), .o(n47) );
  i0sbff000ab1n02x5 U157 ( .a(n238), .o(n48) );
  i0saobi12ab1n06x5 U158 ( .b(MICROCODE_EN_REG), .c(n25), .a(RESET_REG_SETUP1), 
        .out0(n15) );
  i0snanp02ab1n02x5 U159 ( .a(BIST_COLLAR_HOLD), .b(MBISTPG_EN), .o1(n220) );
  i0sinv000ab1n02x5 U160 ( .a(RESET_REG_SETUP1), .o1(n218) );
  i0snorp02ab1n02x5 U161 ( .a(n85), .b(MBISTPG_MEM_ARRAY_DUMP_MODE), .o1(n18)
         );
  i0snorp02ab1n02x5 U162 ( .a(FREEZE_GO_ID), .b(n52), .o1(N158) );
  i0snorb03ab1n02x5 U163 ( .a(BIST_INIT), .b(MBISTPG_ALGO_MODE_SYNC_1_), .c(
        GO_EN), .out0(BIST_CLEAR) );
  i0sinv000ab1n02x5 U164 ( .a(CMP_EN_MASK_EN), .o1(n78) );
  i0snanp02ab1n02x5 U165 ( .a(MBISTPG_REDUCED_ADDR_CNT_EN_SYNC), .b(n87), .o1(
        n90) );
  i0sinv000ab1n03x5 U166 ( .a(MEM_SELECT_REG_39_), .o1(n88) );
  i0sinv000ab1n02x5 U167 ( .a(REDUCED_ADDR_CNT_EN_REG), .o1(n95) );
  i0saoi222ab1n02x5 U168 ( .a(MEM26_BIST_COLLAR_SI), .b(MEM_SELECT_REG_27_), 
        .c(MEM25_BIST_COLLAR_SI), .d(MEM_SELECT_REG_26_), .e(
        MEM24_BIST_COLLAR_SI), .f(MEM_SELECT_REG_25_), .o1(n204) );
  i0saoi222ab1n02x5 U169 ( .a(MEM16_BIST_COLLAR_SI), .b(MEM_SELECT_REG_17_), 
        .c(MEM15_BIST_COLLAR_SI), .d(MEM_SELECT_REG_16_), .e(
        MEM14_BIST_COLLAR_SI), .f(MEM_SELECT_REG_15_), .o1(n199) );
  i0soai012ab1n02x5 U170 ( .b(n106), .c(n32), .a(n105), .o1(N276) );
  i0sinv000ab1n03x5 U171 ( .a(MEM_SELECT_REG_35_), .o1(n106) );
  i0soai012ab1n02x5 U172 ( .b(n108), .c(n32), .a(n107), .o1(N281) );
  i0sinv000ab1n03x5 U173 ( .a(MEM_SELECT_REG_34_), .o1(n108) );
  i0soai012ab1n02x5 U174 ( .b(n110), .c(n32), .a(n109), .o1(N286) );
  i0sinv000ab1n03x5 U175 ( .a(MEM_SELECT_REG_33_), .o1(n110) );
  i0soai012ab1n02x5 U176 ( .b(n112), .c(n32), .a(n111), .o1(N291) );
  i0sinv000ab1n03x5 U177 ( .a(MEM_SELECT_REG_32_), .o1(n112) );
  i0soai012ab1n02x5 U178 ( .b(n114), .c(n32), .a(n113), .o1(N296) );
  i0sinv000ab1n03x5 U179 ( .a(MEM_SELECT_REG_31_), .o1(n114) );
  i0soai012ab1n02x5 U180 ( .b(n116), .c(n32), .a(n115), .o1(N301) );
  i0sinv000ab1n03x5 U181 ( .a(MEM_SELECT_REG_30_), .o1(n116) );
  i0soai012ab1n02x5 U182 ( .b(n118), .c(n32), .a(n117), .o1(N306) );
  i0sinv000ab1n03x5 U183 ( .a(MEM_SELECT_REG_29_), .o1(n118) );
  i0soai012ab1n02x5 U184 ( .b(n120), .c(n32), .a(n119), .o1(N311) );
  i0sinv000ab1n03x5 U185 ( .a(MEM_SELECT_REG_28_), .o1(n120) );
  i0soai012ab1n02x5 U186 ( .b(n122), .c(n32), .a(n121), .o1(N316) );
  i0soai012ab1n02x5 U187 ( .b(n130), .c(n31), .a(n129), .o1(N336) );
  i0sinv000ab1n03x5 U188 ( .a(MEM_SELECT_REG_23_), .o1(n130) );
  i0soai012ab1n02x5 U189 ( .b(n132), .c(n31), .a(n131), .o1(N341) );
  i0sinv000ab1n03x5 U190 ( .a(MEM_SELECT_REG_22_), .o1(n132) );
  i0soai012ab1n02x5 U191 ( .b(n134), .c(n31), .a(n133), .o1(N346) );
  i0sinv000ab1n03x5 U192 ( .a(MEM_SELECT_REG_21_), .o1(n134) );
  i0soai012ab1n02x5 U193 ( .b(n140), .c(n31), .a(n139), .o1(N361) );
  i0sinv000ab1n03x5 U194 ( .a(MEM_SELECT_REG_18_), .o1(n140) );
  i0soai012ab1n02x5 U196 ( .b(n142), .c(n31), .a(n141), .o1(N366) );
  i0soai012ab1n02x5 U198 ( .b(n150), .c(n31), .a(n149), .o1(N386) );
  i0sinv000ab1n03x5 U200 ( .a(MEM_SELECT_REG_13_), .o1(n150) );
  i0soai012ab1n02x5 U201 ( .b(n152), .c(n31), .a(n151), .o1(N391) );
  i0sinv000ab1n03x5 U202 ( .a(MEM_SELECT_REG_12_), .o1(n152) );
  i0soai012ab1n02x5 U203 ( .b(n154), .c(n30), .a(n153), .o1(N396) );
  i0sinv000ab1n03x5 U204 ( .a(MEM_SELECT_REG_11_), .o1(n154) );
  i0soai012ab1n02x5 U205 ( .b(n161), .c(n30), .a(n160), .o1(N411) );
  i0sinv000ab1n03x5 U206 ( .a(MEM_SELECT_REG_8_), .o1(n161) );
  i0soai012ab1n02x5 U207 ( .b(n163), .c(n30), .a(n162), .o1(N416) );
  i0soai012ab1n02x5 U208 ( .b(n165), .c(n30), .a(n164), .o1(N421) );
  i0soai012ab1n02x5 U209 ( .b(n171), .c(n30), .a(n170), .o1(N436) );
  i0sinv000ab1n03x5 U210 ( .a(MEM_SELECT_REG_3_), .o1(n171) );
  i0soai012ab1n02x5 U211 ( .b(n173), .c(n30), .a(n172), .o1(N441) );
  i0sinv000ab1n03x5 U212 ( .a(MEM_SELECT_REG_2_), .o1(n173) );
  i0soai012ab1n02x5 U213 ( .b(n175), .c(n30), .a(n174), .o1(N446) );
  i0sinv000ab1n03x5 U214 ( .a(MEM_SELECT_REG_1_), .o1(n175) );
  i0saoi222ab1n02x5 U215 ( .a(MEM6_BIST_COLLAR_SI), .b(MEM_SELECT_REG_7_), .c(
        MEM5_BIST_COLLAR_SI), .d(MEM_SELECT_REG_6_), .e(MEM4_BIST_COLLAR_SI), 
        .f(MEM_SELECT_REG_5_), .o1(n194) );
  i0soai012ab1n02x5 U216 ( .b(n102), .c(n33), .a(n101), .o1(N266) );
  i0sinv000ab1n03x5 U217 ( .a(MEM_SELECT_REG_37_), .o1(n102) );
  i0sinv000ab1n02x5 U218 ( .a(n85), .o1(n84) );
  i0snand42ab1n02x5 U219 ( .a(MEM31_BIST_COLLAR_SI), .b(MEM_SELECT_REG_32_), 
        .o1(n189) );
  i0snand42ab1n02x5 U220 ( .a(MEM38_BIST_COLLAR_SI), .b(MEM_SELECT_REG_39_), 
        .o1(n184) );
  i0snand42ab1n02x5 U221 ( .a(MEM35_BIST_COLLAR_SI), .b(MEM_SELECT_REG_36_), 
        .o1(n180) );
  i0snand42ab1n02x5 U222 ( .a(MEM37_BIST_COLLAR_SI), .b(MEM_SELECT_REG_38_), 
        .o1(n185) );
  i0sinv000ab1n02x5 U223 ( .a(REPEAT_LOOP_CNTRL_SO), .o1(n215) );
  i0smbn022ab1n03x5 U224 ( .b(n22), .a(MEM0_BIST_COLLAR_SO_RetimeIn), .sa(n36), 
        .o(n578) );
  i0smkn022ab1n04x5 U225 ( .b(MBIST_RA_PRSRV_FUSE_VAL_SYNC), .a(CTL_COMP_SI), 
        .sa(n82), .o(n22) );
  i0sinv020ab1n02x5 U226 ( .a(SELECT_COMMON_DATA_PAT_REG), .o1(n236) );
  i0sinv000ab1n03x5 U227 ( .a(n242), .o1(n57) );
  i0sinv000ab1n03x5 U228 ( .a(n243), .o1(n55) );
  i0sand002ab1n02x5 U229 ( .a(MBISTPG_ALGO_MODE_SYNC_0_), .b(
        MBISTPG_ALGO_MODE_SYNC_1_), .o(N468) );
  i0sinv000ab1n02x5 U230 ( .a(MICROCODE_EN_REG), .o1(n98) );
  i0sinv000ab1n03x5 U231 ( .a(SELECT_COMMON_OPSET_REG), .o1(n235) );
  i0soai112ab1n02x5 U232 ( .c(CHECK_REPAIR_NEEDED), .d(GO_EN), .a(
        BIST_COLLAR_GO[0]), .b(BIST_COLLAR_GO[10]), .o1(n99) );
  i0snorb02ab1n02x5 U233 ( .a(MEM_SELECT_REG_39_), .b(n240), .out0(
        BIST_COLLAR_EN39) );
  i0snorb02ab1n02x5 U234 ( .a(MEM_SELECT_REG_38_), .b(n240), .out0(
        BIST_COLLAR_EN38) );
  i0snorb02ab1n02x5 U235 ( .a(MEM_SELECT_REG_37_), .b(n240), .out0(
        BIST_COLLAR_EN37) );
  i0snorb02ab1n02x5 U236 ( .a(MEM_SELECT_REG_36_), .b(n240), .out0(
        BIST_COLLAR_EN36) );
  i0snorb02ab1n02x5 U237 ( .a(MEM_SELECT_REG_16_), .b(n39), .out0(
        BIST_COLLAR_EN16) );
  i0snorb02ab1n02x5 U238 ( .a(MEM_SELECT_REG_11_), .b(n39), .out0(
        BIST_COLLAR_EN11) );
  i0snorb02ab1n02x5 U239 ( .a(MEM_SELECT_REG_17_), .b(n39), .out0(
        BIST_COLLAR_EN17) );
  i0snorb02ab1n02x5 U240 ( .a(MEM_SELECT_REG_15_), .b(n39), .out0(
        BIST_COLLAR_EN15) );
  i0snorb02ab1n02x5 U241 ( .a(MEM_SELECT_REG_12_), .b(n39), .out0(
        BIST_COLLAR_EN12) );
  i0snorb02ab1n02x5 U242 ( .a(MEM_SELECT_REG_10_), .b(n39), .out0(
        BIST_COLLAR_EN10) );
  i0snorb02ab1n02x5 U243 ( .a(MEM_SELECT_REG_19_), .b(n39), .out0(
        BIST_COLLAR_EN19) );
  i0snorb02ab1n02x5 U244 ( .a(MEM_SELECT_REG_9_), .b(n39), .out0(
        BIST_COLLAR_EN9) );
  i0snorb02ab1n02x5 U245 ( .a(MEM_SELECT_REG_18_), .b(n39), .out0(
        BIST_COLLAR_EN18) );
  i0snorb02ab1n02x5 U246 ( .a(MEM_SELECT_REG_14_), .b(n39), .out0(
        BIST_COLLAR_EN14) );
  i0snorb02ab1n02x5 U247 ( .a(MEM_SELECT_REG_13_), .b(n39), .out0(
        BIST_COLLAR_EN13) );
  i0snorb02ab1n02x5 U248 ( .a(MEM_SELECT_REG_8_), .b(n39), .out0(
        BIST_COLLAR_EN8) );
  i0snorb02ab1n02x5 U249 ( .a(MEM_SELECT_REG_6_), .b(n40), .out0(
        BIST_COLLAR_EN6) );
  i0snorb02ab1n02x5 U250 ( .a(MEM_SELECT_REG_1_), .b(n40), .out0(
        BIST_COLLAR_EN1) );
  i0snorb02ab1n02x5 U251 ( .a(MEM_SELECT_REG_7_), .b(n40), .out0(
        BIST_COLLAR_EN7) );
  i0snorb02ab1n02x5 U252 ( .a(MEM_SELECT_REG_5_), .b(n40), .out0(
        BIST_COLLAR_EN5) );
  i0snorb02ab1n02x5 U253 ( .a(MEM_SELECT_REG_2_), .b(n40), .out0(
        BIST_COLLAR_EN2) );
  i0snorb02ab1n02x5 U254 ( .a(MEM_SELECT_REG_0_), .b(n40), .out0(
        BIST_COLLAR_EN0) );
  i0snorb02ab1n02x5 U255 ( .a(MEM_SELECT_REG_4_), .b(n40), .out0(
        BIST_COLLAR_EN4) );
  i0snorb02ab1n02x5 U256 ( .a(MEM_SELECT_REG_3_), .b(n40), .out0(
        BIST_COLLAR_EN3) );
  i0snorb02ab1n02x5 U257 ( .a(MEM_SELECT_REG_26_), .b(n38), .out0(
        BIST_COLLAR_EN26) );
  i0snorb02ab1n02x5 U258 ( .a(MEM_SELECT_REG_21_), .b(n38), .out0(
        BIST_COLLAR_EN21) );
  i0snorb02ab1n02x5 U259 ( .a(MEM_SELECT_REG_27_), .b(n38), .out0(
        BIST_COLLAR_EN27) );
  i0snorb02ab1n02x5 U260 ( .a(MEM_SELECT_REG_25_), .b(n38), .out0(
        BIST_COLLAR_EN25) );
  i0snorb02ab1n02x5 U261 ( .a(MEM_SELECT_REG_22_), .b(n38), .out0(
        BIST_COLLAR_EN22) );
  i0snorb02ab1n02x5 U262 ( .a(MEM_SELECT_REG_20_), .b(n38), .out0(
        BIST_COLLAR_EN20) );
  i0snorb02ab1n02x5 U263 ( .a(MEM_SELECT_REG_29_), .b(n38), .out0(
        BIST_COLLAR_EN29) );
  i0snorb02ab1n02x5 U264 ( .a(MEM_SELECT_REG_31_), .b(n38), .out0(
        BIST_COLLAR_EN31) );
  i0snorb02ab1n02x5 U265 ( .a(MEM_SELECT_REG_30_), .b(n38), .out0(
        BIST_COLLAR_EN30) );
  i0snorb02ab1n02x5 U266 ( .a(MEM_SELECT_REG_28_), .b(n38), .out0(
        BIST_COLLAR_EN28) );
  i0snorb02ab1n02x5 U267 ( .a(MEM_SELECT_REG_24_), .b(n38), .out0(
        BIST_COLLAR_EN24) );
  i0snorb02ab1n02x5 U268 ( .a(MEM_SELECT_REG_23_), .b(n38), .out0(
        BIST_COLLAR_EN23) );
  i0snorb02ab1n02x5 U269 ( .a(MEM_SELECT_REG_35_), .b(n241), .out0(
        BIST_COLLAR_EN35) );
  i0snorb02ab1n02x5 U270 ( .a(MEM_SELECT_REG_33_), .b(n241), .out0(
        BIST_COLLAR_EN33) );
  i0snorb02ab1n02x5 U271 ( .a(MEM_SELECT_REG_32_), .b(n241), .out0(
        BIST_COLLAR_EN32) );
  i0snorb02ab1n02x5 U272 ( .a(MEM_SELECT_REG_34_), .b(n241), .out0(
        BIST_COLLAR_EN34) );
  i0snorp02ab1n02x5 U273 ( .a(BIST_RUN_PIPE), .b(BIST_RUN_INT), .o1(n238) );
  i0snorb02ab1n02x5 U274 ( .a(MEM_SELECT_REG_27_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR27) );
  i0snorb02ab1n02x5 U275 ( .a(MEM_SELECT_REG_26_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR26) );
  i0snorb02ab1n02x5 U276 ( .a(MEM_SELECT_REG_25_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR25) );
  i0snorb02ab1n02x5 U277 ( .a(MEM_SELECT_REG_22_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR22) );
  i0snorb02ab1n02x5 U278 ( .a(MEM_SELECT_REG_21_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR21) );
  i0snorb02ab1n02x5 U280 ( .a(MEM_SELECT_REG_20_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR20) );
  i0snorb02ab1n02x5 U281 ( .a(MEM_SELECT_REG_17_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR17) );
  i0snorb02ab1n02x5 U282 ( .a(MEM_SELECT_REG_16_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR16) );
  i0snorb02ab1n02x5 U283 ( .a(MEM_SELECT_REG_15_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR15) );
  i0snorb02ab1n02x5 U284 ( .a(MEM_SELECT_REG_12_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR12) );
  i0snorb02ab1n02x5 U285 ( .a(MEM_SELECT_REG_11_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR11) );
  i0snorb02ab1n02x5 U286 ( .a(MEM_SELECT_REG_10_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR10) );
  i0snorb02ab1n02x5 U287 ( .a(MEM_SELECT_REG_7_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR7) );
  i0snorb02ab1n02x5 U289 ( .a(MEM_SELECT_REG_6_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR6) );
  i0snorb02ab1n02x5 U290 ( .a(MEM_SELECT_REG_5_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR5) );
  i0snorb02ab1n02x5 U291 ( .a(MEM_SELECT_REG_2_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR2) );
  i0snorb02ab1n02x5 U292 ( .a(MEM_SELECT_REG_1_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR1) );
  i0snorb02ab1n02x5 U293 ( .a(MEM_SELECT_REG_29_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR29) );
  i0snorb02ab1n02x5 U294 ( .a(MEM_SELECT_REG_19_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR19) );
  i0snorb02ab1n02x5 U295 ( .a(MEM_SELECT_REG_9_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR9) );
  i0snorb02ab1n02x5 U296 ( .a(MEM_SELECT_REG_35_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR35) );
  i0snorb02ab1n02x5 U297 ( .a(MEM_SELECT_REG_34_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR34) );
  i0snorb02ab1n02x5 U298 ( .a(MEM_SELECT_REG_33_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR33) );
  i0snorb02ab1n02x5 U299 ( .a(MEM_SELECT_REG_32_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR32) );
  i0snorb02ab1n02x5 U300 ( .a(MEM_SELECT_REG_31_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR31) );
  i0snorb02ab1n02x5 U301 ( .a(MEM_SELECT_REG_30_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR30) );
  i0snorb02ab1n02x5 U302 ( .a(MEM_SELECT_REG_28_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR28) );
  i0snorb02ab1n02x5 U303 ( .a(MEM_SELECT_REG_24_), .b(n45), .out0(
        BIST_RUN_TO_COLLAR24) );
  i0snorb02ab1n02x5 U304 ( .a(MEM_SELECT_REG_23_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR23) );
  i0snorb02ab1n02x5 U305 ( .a(MEM_SELECT_REG_18_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR18) );
  i0snorb02ab1n02x5 U306 ( .a(MEM_SELECT_REG_14_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR14) );
  i0snorb02ab1n02x5 U307 ( .a(MEM_SELECT_REG_13_), .b(n44), .out0(
        BIST_RUN_TO_COLLAR13) );
  i0snorb02ab1n02x5 U308 ( .a(MEM_SELECT_REG_8_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR8) );
  i0snorb02ab1n02x5 U309 ( .a(MEM_SELECT_REG_4_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR4) );
  i0snorb02ab1n02x5 U310 ( .a(MEM_SELECT_REG_3_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR3) );
  i0snorb02ab1n02x5 U311 ( .a(MEM_SELECT_REG_0_), .b(n43), .out0(
        BIST_RUN_TO_COLLAR0) );
  i0snorb02ab1n02x5 U312 ( .a(MEM_SELECT_REG_39_), .b(n46), .out0(
        BIST_RUN_TO_COLLAR39) );
  i0snorb02ab1n02x5 U313 ( .a(MEM_SELECT_REG_38_), .b(n46), .out0(
        BIST_RUN_TO_COLLAR38) );
  i0snorb02ab1n02x5 U314 ( .a(MEM_SELECT_REG_37_), .b(n46), .out0(
        BIST_RUN_TO_COLLAR37) );
  i0snorb02ab1n02x5 U315 ( .a(MEM_SELECT_REG_36_), .b(n46), .out0(
        BIST_RUN_TO_COLLAR36) );
  i0soaoi13ab1n03x5 U316 ( .c(BIST_ON_TO_COLLAR), .d(n226), .b(n1580), .a(
        MCP_BOUNDING_EN), .o1(n_372_net_0) );
  i0sinv000ab1n03x5 U317 ( .a(BIST_DONE_PIPE2), .o1(n226) );
  i0snona22ab1n02x4 U318 ( .b(FREEZE_STOP_ERROR), .c(BIST_DONE_PIPE2), .a(
        BIST_ON_TO_COLLAR), .out0(n1580) );
  i0sand002ab1n02x5 U319 ( .a(BIST_SETUP[1]), .b(MBISTPG_EN), .o(
        BIST_EN_RETIME1_IN) );
  i0stihi00ab1n02x5 U320 ( .o(n582) );
  i0sinv000ab1n02x5 U321 ( .a(n2), .o1(n97) );
  i0soabi13ab1n02x5 U322 ( .c(BIST_COLLAR_BIRA_EN), .d(n91), .a(n72), .b(n71), 
        .o1(n562) );
  i0smd2na2ab1n02x5 U323 ( .c(n73), .b(PriorityColumn), .a(BIST_COLLAR_BIRA_EN), .sa(n36), .out0(n595) );
  i0sinv000ab1n02x5 U324 ( .a(DEFAULT_MODE), .o1(n25) );
  i0soa0012ab1n03x5 U325 ( .b(RESET_REG_SETUP1), .c(GO_EN), .a(
        BIST_ON_TO_COLLAR), .o(n596) );
  i0snanb02ab1n03x5 U326 ( .a(n36), .b(n85), .out0(n91) );
  i0snanb02ab1n03x5 U327 ( .a(n85), .b(n217), .out0(n73) );
  i0soabi13ab1n03x5 U328 ( .c(BIST_COLLAR_DIAG_EN), .d(n91), .a(n70), .b(n69), 
        .o1(n565) );
  i0snanb02ab1n03x5 U329 ( .a(n17), .b(CMP_EN_MASK_EN), .out0(n74) );
  i0smdn022ab1n03x4 U330 ( .b(n74), .a(n55), .sa(n36), .o1(n594) );
  i0snanb02ab1n03x5 U331 ( .a(n52), .b(GO_EN), .out0(n75) );
  i0smdn022ab1n03x4 U332 ( .b(n77), .a(n76), .sa(CMP_EN_MASK), .o1(n79) );
  i0smdn022ab1n03x4 U333 ( .b(n79), .a(n78), .sa(n36), .o1(n593) );
  i0snanb02ab1n03x5 U334 ( .a(CMP_EN_MASK), .b(CMP_EN_MASK_EN), .out0(n80) );
  i0snanb02ab1n03x5 U335 ( .a(n98), .b(n36), .out0(n83) );
  i0sobai22ab1n03x5 U336 ( .a(MEM_ARRAY_DUMP_MODE_SO), .b(n91), .c(n84), .d(
        n83), .out0(n253) );
  i0smdn022ab1n03x4 U337 ( .b(MEM_ARRAY_DUMP_MODE_SO), .a(
        MBISTPG_MEM_ARRAY_DUMP_MODE), .sa(n26), .o1(n94) );
  i0smd2na2ab1n03x5 U338 ( .c(n86), .b(MEM_SELECT_REG_0_), .a(CMP_EN_MASK), 
        .sa(n36), .out0(n553) );
  i0smd2na2ab1n03x5 U339 ( .c(n86), .b(MEM_SELECT_REG_1_), .a(
        MEM_SELECT_REG_0_), .sa(n36), .out0(n546) );
  i0smd2na2ab1n03x5 U340 ( .c(n86), .b(MEM_SELECT_REG_2_), .a(
        MEM_SELECT_REG_1_), .sa(n36), .out0(n539) );
  i0smd2na2ab1n03x5 U342 ( .c(n86), .b(MEM_SELECT_REG_3_), .a(
        MEM_SELECT_REG_2_), .sa(n36), .out0(n532) );
  i0smd2na2ab1n03x5 U343 ( .c(n86), .b(MEM_SELECT_REG_4_), .a(
        MEM_SELECT_REG_3_), .sa(n36), .out0(n525) );
  i0smd2na2ab1n03x5 U344 ( .c(n86), .b(MEM_SELECT_REG_5_), .a(
        MEM_SELECT_REG_4_), .sa(n36), .out0(n518) );
  i0smd2na2ab1n03x5 U345 ( .c(n86), .b(MEM_SELECT_REG_6_), .a(
        MEM_SELECT_REG_5_), .sa(n36), .out0(n511) );
  i0smd2na2ab1n03x5 U346 ( .c(n86), .b(MEM_SELECT_REG_7_), .a(
        MEM_SELECT_REG_6_), .sa(n36), .out0(n504) );
  i0smd2na2ab1n03x5 U347 ( .c(n86), .b(MEM_SELECT_REG_8_), .a(
        MEM_SELECT_REG_7_), .sa(n36), .out0(n497) );
  i0smd2na2ab1n03x5 U348 ( .c(n86), .b(MEM_SELECT_REG_9_), .a(
        MEM_SELECT_REG_8_), .sa(n36), .out0(n490) );
  i0smd2na2ab1n03x5 U349 ( .c(n86), .b(MEM_SELECT_REG_10_), .a(
        MEM_SELECT_REG_9_), .sa(n36), .out0(n483) );
  i0smd2na2ab1n03x5 U350 ( .c(n86), .b(MEM_SELECT_REG_11_), .a(
        MEM_SELECT_REG_10_), .sa(n36), .out0(n476) );
  i0smd2na2ab1n03x5 U351 ( .c(n86), .b(MEM_SELECT_REG_12_), .a(
        MEM_SELECT_REG_11_), .sa(n36), .out0(n469) );
  i0smd2na2ab1n03x5 U352 ( .c(n86), .b(MEM_SELECT_REG_13_), .a(
        MEM_SELECT_REG_12_), .sa(n36), .out0(n462) );
  i0smd2na2ab1n03x5 U353 ( .c(n86), .b(MEM_SELECT_REG_14_), .a(
        MEM_SELECT_REG_13_), .sa(n36), .out0(n455) );
  i0smd2na2ab1n03x5 U354 ( .c(n86), .b(MEM_SELECT_REG_15_), .a(
        MEM_SELECT_REG_14_), .sa(n36), .out0(n448) );
  i0smd2na2ab1n03x5 U355 ( .c(n86), .b(MEM_SELECT_REG_16_), .a(
        MEM_SELECT_REG_15_), .sa(n36), .out0(n4410) );
  i0smd2na2ab1n03x5 U356 ( .c(n86), .b(MEM_SELECT_REG_17_), .a(
        MEM_SELECT_REG_16_), .sa(n36), .out0(n434) );
  i0smd2na2ab1n03x5 U357 ( .c(n86), .b(MEM_SELECT_REG_18_), .a(
        MEM_SELECT_REG_17_), .sa(n36), .out0(n427) );
  i0smd2na2ab1n03x5 U358 ( .c(n86), .b(MEM_SELECT_REG_19_), .a(
        MEM_SELECT_REG_18_), .sa(n36), .out0(n420) );
  i0smd2na2ab1n03x5 U359 ( .c(n86), .b(MEM_SELECT_REG_20_), .a(
        MEM_SELECT_REG_19_), .sa(n36), .out0(n413) );
  i0smd2na2ab1n03x5 U360 ( .c(n86), .b(MEM_SELECT_REG_21_), .a(
        MEM_SELECT_REG_20_), .sa(n36), .out0(n4060) );
  i0smd2na2ab1n03x5 U361 ( .c(n86), .b(MEM_SELECT_REG_22_), .a(
        MEM_SELECT_REG_21_), .sa(n36), .out0(n399) );
  i0smd2na2ab1n03x5 U362 ( .c(n86), .b(MEM_SELECT_REG_23_), .a(
        MEM_SELECT_REG_22_), .sa(n36), .out0(n392) );
  i0smd2na2ab1n03x5 U363 ( .c(n86), .b(MEM_SELECT_REG_24_), .a(
        MEM_SELECT_REG_23_), .sa(n36), .out0(n385) );
  i0smd2na2ab1n03x5 U364 ( .c(n86), .b(MEM_SELECT_REG_25_), .a(
        MEM_SELECT_REG_24_), .sa(n36), .out0(n378) );
  i0smd2na2ab1n03x5 U365 ( .c(n86), .b(MEM_SELECT_REG_26_), .a(
        MEM_SELECT_REG_25_), .sa(n36), .out0(n3710) );
  i0smd2na2ab1n03x5 U366 ( .c(n86), .b(MEM_SELECT_REG_27_), .a(
        MEM_SELECT_REG_26_), .sa(n36), .out0(n364) );
  i0smd2na2ab1n03x5 U367 ( .c(n86), .b(MEM_SELECT_REG_28_), .a(
        MEM_SELECT_REG_27_), .sa(n36), .out0(n357) );
  i0smd2na2ab1n03x5 U368 ( .c(n86), .b(MEM_SELECT_REG_29_), .a(
        MEM_SELECT_REG_28_), .sa(n36), .out0(n350) );
  i0smd2na2ab1n03x5 U369 ( .c(n86), .b(MEM_SELECT_REG_30_), .a(
        MEM_SELECT_REG_29_), .sa(n36), .out0(n343) );
  i0smd2na2ab1n03x5 U371 ( .c(n86), .b(MEM_SELECT_REG_31_), .a(
        MEM_SELECT_REG_30_), .sa(n36), .out0(n3360) );
  i0smd2na2ab1n03x5 U372 ( .c(n86), .b(MEM_SELECT_REG_32_), .a(
        MEM_SELECT_REG_31_), .sa(n36), .out0(n329) );
  i0smd2na2ab1n03x5 U374 ( .c(n86), .b(MEM_SELECT_REG_33_), .a(
        MEM_SELECT_REG_32_), .sa(n36), .out0(n322) );
  i0smd2na2ab1n03x5 U375 ( .c(n86), .b(MEM_SELECT_REG_34_), .a(
        MEM_SELECT_REG_33_), .sa(n36), .out0(n315) );
  i0smd2na2ab1n03x5 U377 ( .c(n86), .b(MEM_SELECT_REG_35_), .a(
        MEM_SELECT_REG_34_), .sa(n36), .out0(n308) );
  i0smd2na2ab1n03x5 U378 ( .c(n86), .b(MEM_SELECT_REG_36_), .a(
        MEM_SELECT_REG_35_), .sa(n36), .out0(n3010) );
  i0smd2na2ab1n03x5 U380 ( .c(n86), .b(MEM_SELECT_REG_37_), .a(
        MEM_SELECT_REG_36_), .sa(n36), .out0(n294) );
  i0smd2na2ab1n03x5 U381 ( .c(n86), .b(MEM_SELECT_REG_38_), .a(
        MEM_SELECT_REG_37_), .sa(n36), .out0(n287) );
  i0smd2na2ab1n03x5 U383 ( .c(n86), .b(MEM_SELECT_REG_39_), .a(
        MEM_SELECT_REG_38_), .sa(n36), .out0(n280) );
  i0snanb02ab1n03x5 U384 ( .a(n88), .b(n36), .out0(n89) );
  i0soabi13ab1n03x5 U385 ( .c(REDUCED_ADDR_CNT_EN_REG), .d(n91), .a(n90), .b(
        n89), .o1(n2760) );
  i0smdn022ab1n03x4 U386 ( .b(n96), .a(n95), .sa(n36), .o1(n273) );
  i0smdn022ab1n03x4 U387 ( .b(n97), .a(n96), .sa(n36), .o1(n269) );
  i0smdn022ab1n03x4 U388 ( .b(n235), .a(n97), .sa(n36), .o1(n265) );
  i0smdn022ab1n03x4 U389 ( .b(n236), .a(n235), .sa(n36), .o1(n2610) );
  i0smdn022ab1n03x4 U390 ( .b(n98), .a(n236), .sa(n36), .o1(n257) );
  i0sand002ab1n06x5 U391 ( .a(CHKBCI_PHASE_INT), .b(BIST_RUN_INT), .o(
        CHKBCI_PHASE) );
  i0snanp02ab1n06x5 U392 ( .a(BIST_SI_PIPELINE), .b(n49), .o1(n177) );
  i0saob012ab1n03x5 U393 ( .b(MEM_SELECT_REG_38_), .c(n49), .a(
        MEM39_BIST_COLLAR_SO), .out0(n100) );
  i0saob012ab1n03x5 U394 ( .b(MEM_SELECT_REG_37_), .c(n49), .a(
        MEM38_BIST_COLLAR_SO), .out0(n101) );
  i0saob012ab1n03x5 U395 ( .b(MEM_SELECT_REG_36_), .c(n49), .a(
        MEM37_BIST_COLLAR_SO), .out0(n103) );
  i0saob012ab1n03x5 U396 ( .b(MEM_SELECT_REG_35_), .c(n49), .a(
        MEM36_BIST_COLLAR_SO), .out0(n105) );
  i0saob012ab1n03x5 U397 ( .b(MEM_SELECT_REG_34_), .c(n49), .a(
        MEM35_BIST_COLLAR_SO), .out0(n107) );
  i0saob012ab1n03x5 U398 ( .b(MEM_SELECT_REG_33_), .c(n49), .a(
        MEM34_BIST_COLLAR_SO), .out0(n109) );
  i0saob012ab1n03x5 U399 ( .b(MEM_SELECT_REG_32_), .c(n49), .a(
        MEM33_BIST_COLLAR_SO), .out0(n111) );
  i0saob012ab1n03x5 U400 ( .b(MEM_SELECT_REG_31_), .c(n49), .a(
        MEM32_BIST_COLLAR_SO), .out0(n113) );
  i0saob012ab1n03x5 U401 ( .b(MEM_SELECT_REG_30_), .c(n49), .a(
        MEM31_BIST_COLLAR_SO), .out0(n115) );
  i0saob012ab1n03x5 U402 ( .b(MEM_SELECT_REG_29_), .c(n50), .a(
        MEM30_BIST_COLLAR_SO), .out0(n117) );
  i0saob012ab1n03x5 U403 ( .b(MEM_SELECT_REG_28_), .c(n49), .a(
        MEM29_BIST_COLLAR_SO), .out0(n119) );
  i0saob012ab1n03x5 U404 ( .b(MEM_SELECT_REG_27_), .c(n49), .a(
        MEM28_BIST_COLLAR_SO), .out0(n121) );
  i0saob012ab1n03x5 U405 ( .b(MEM_SELECT_REG_26_), .c(n49), .a(
        MEM27_BIST_COLLAR_SO), .out0(n123) );
  i0saob012ab1n03x5 U406 ( .b(MEM_SELECT_REG_25_), .c(n49), .a(
        MEM26_BIST_COLLAR_SO), .out0(n125) );
  i0saob012ab1n03x5 U407 ( .b(MEM_SELECT_REG_24_), .c(n49), .a(
        MEM25_BIST_COLLAR_SO), .out0(n127) );
  i0saob012ab1n03x5 U408 ( .b(MEM_SELECT_REG_23_), .c(n49), .a(
        MEM24_BIST_COLLAR_SO), .out0(n129) );
  i0saob012ab1n03x5 U409 ( .b(MEM_SELECT_REG_22_), .c(n49), .a(
        MEM23_BIST_COLLAR_SO), .out0(n131) );
  i0saob012ab1n03x5 U410 ( .b(MEM_SELECT_REG_21_), .c(n49), .a(
        MEM22_BIST_COLLAR_SO), .out0(n133) );
  i0saob012ab1n03x5 U411 ( .b(MEM_SELECT_REG_20_), .c(n49), .a(
        MEM21_BIST_COLLAR_SO), .out0(n135) );
  i0saob012ab1n03x5 U412 ( .b(MEM_SELECT_REG_19_), .c(n50), .a(
        MEM20_BIST_COLLAR_SO), .out0(n137) );
  i0saob012ab1n03x5 U413 ( .b(MEM_SELECT_REG_18_), .c(n50), .a(
        MEM19_BIST_COLLAR_SO), .out0(n139) );
  i0saob012ab1n03x5 U414 ( .b(MEM_SELECT_REG_17_), .c(n50), .a(
        MEM18_BIST_COLLAR_SO), .out0(n141) );
  i0saob012ab1n03x5 U415 ( .b(MEM_SELECT_REG_16_), .c(n50), .a(
        MEM17_BIST_COLLAR_SO), .out0(n143) );
  i0saob012ab1n03x5 U416 ( .b(MEM_SELECT_REG_15_), .c(n50), .a(
        MEM16_BIST_COLLAR_SO), .out0(n145) );
  i0saob012ab1n03x5 U417 ( .b(MEM_SELECT_REG_14_), .c(n50), .a(
        MEM15_BIST_COLLAR_SO), .out0(n147) );
  i0saob012ab1n03x5 U418 ( .b(MEM_SELECT_REG_13_), .c(n50), .a(
        MEM14_BIST_COLLAR_SO), .out0(n149) );
  i0saob012ab1n03x5 U419 ( .b(MEM_SELECT_REG_12_), .c(n50), .a(
        MEM13_BIST_COLLAR_SO), .out0(n151) );
  i0saob012ab1n03x5 U420 ( .b(MEM_SELECT_REG_11_), .c(n50), .a(
        MEM12_BIST_COLLAR_SO), .out0(n153) );
  i0saob012ab1n03x5 U421 ( .b(MEM_SELECT_REG_10_), .c(n50), .a(
        MEM11_BIST_COLLAR_SO), .out0(n155) );
  i0saob012ab1n03x5 U422 ( .b(MEM_SELECT_REG_9_), .c(n50), .a(
        MEM10_BIST_COLLAR_SO), .out0(n157) );
  i0saob012ab1n03x5 U423 ( .b(MEM_SELECT_REG_8_), .c(n50), .a(
        MEM9_BIST_COLLAR_SO), .out0(n160) );
  i0saob012ab1n03x5 U424 ( .b(MEM_SELECT_REG_7_), .c(n50), .a(
        MEM8_BIST_COLLAR_SO), .out0(n162) );
  i0saob012ab1n03x5 U425 ( .b(MEM_SELECT_REG_6_), .c(n50), .a(
        MEM7_BIST_COLLAR_SO), .out0(n164) );
  i0saob012ab1n03x5 U426 ( .b(MEM_SELECT_REG_5_), .c(n50), .a(
        MEM6_BIST_COLLAR_SO), .out0(n166) );
  i0saob012ab1n03x5 U427 ( .b(MEM_SELECT_REG_4_), .c(n50), .a(
        MEM5_BIST_COLLAR_SO), .out0(n168) );
  i0saob012ab1n03x5 U428 ( .b(MEM_SELECT_REG_3_), .c(n50), .a(
        MEM4_BIST_COLLAR_SO), .out0(n170) );
  i0saob012ab1n03x5 U429 ( .b(MEM_SELECT_REG_2_), .c(n50), .a(
        MEM3_BIST_COLLAR_SO), .out0(n172) );
  i0saob012ab1n03x5 U430 ( .b(MEM_SELECT_REG_1_), .c(n50), .a(
        MEM2_BIST_COLLAR_SO), .out0(n174) );
  i0saob012ab1n03x5 U431 ( .b(MEM_SELECT_REG_0_), .c(n49), .a(
        MEM1_BIST_COLLAR_SO), .out0(n176) );
  i0smdn022ab1n03x4 U432 ( .b(CTL_COMP_SO), .a(MEM0_BIST_COLLAR_SO_RetimeIn), 
        .sa(n221), .o1(n213) );
  i0snano32ab1n03x7 U433 ( .b(n185), .c(n184), .d(n183), .a(n182), .out0(n211)
         );
  i0snano32ab1n03x7 U434 ( .b(n191), .c(n190), .d(n189), .a(n188), .out0(n210)
         );
  i0snano24ab1n06x5 U435 ( .d(n211), .e(n210), .a(n209), .b(n208), .c(n207), 
        .out0(n212) );
  i0smdn022ab1n03x4 U436 ( .b(n213), .a(n212), .sa(n10), .o1(N457) );
  i0smdn022ab1n03x4 U437 ( .b(n216), .a(n215), .sa(n214), .o1(n223) );
endmodule

