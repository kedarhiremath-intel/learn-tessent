/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP5-1
// Date      : Mon Oct 23 13:10:56 2023
/////////////////////////////////////////////////////////////



    module firebird7_in_gate1_tessent_mbist_c1_interface_m21_RowRedundancyAnalysis ( 
        RepairedBySpareColumn, RepairableBySpareColumn, PriorityColumn, 
        BIST_BIRA_EN, CLEAR, BIST_HOLD, BIST_SHIFT, ErrorGlobal, BIST_CLK, 
        FROM_BISR_ALL_SROW0_FUSE_ADD_REG, FROM_BISR_ALL_SROW0_ALLOC_REG, 
        FROM_BISR_ALL_SROW1_FUSE_ADD_REG, FROM_BISR_ALL_SROW1_ALLOC_REG, LV_TM, 
        BIRA_SI, BIST_ASYNC_RESETN, BIRA_FUSE_ADD_A, BIRA_FUSE_ADD_B, 
        ALL_SROW0_FUSE_ADD_REG, ALL_SROW0_ALLOC_REG, ALL_SROW1_FUSE_ADD_REG, 
        ALL_SROW1_ALLOC_REG, BIRA_SO, RepairedBySpareRow, RepairableBySpareRow
 );
  input [6:0] FROM_BISR_ALL_SROW0_FUSE_ADD_REG;
  input [6:0] FROM_BISR_ALL_SROW1_FUSE_ADD_REG;
  input [6:0] BIRA_FUSE_ADD_A;
  input [6:0] BIRA_FUSE_ADD_B;
  output [6:0] ALL_SROW0_FUSE_ADD_REG;
  output [6:0] ALL_SROW1_FUSE_ADD_REG;
  input RepairedBySpareColumn, RepairableBySpareColumn, PriorityColumn,
         BIST_BIRA_EN, CLEAR, BIST_HOLD, BIST_SHIFT, ErrorGlobal, BIST_CLK,
         FROM_BISR_ALL_SROW0_ALLOC_REG, FROM_BISR_ALL_SROW1_ALLOC_REG, LV_TM,
         BIRA_SI, BIST_ASYNC_RESETN;
  output ALL_SROW0_ALLOC_REG, ALL_SROW1_ALLOC_REG, BIRA_SO, RepairedBySpareRow,
         RepairableBySpareRow;
  wire   ALL_SROW1_ALLOC_REG, ALL_FUSE0_PAST_ALLOC_REG,
         ALL_FUSE1_PAST_ALLOC_REG, RepairedBySpareRow_INT, n47, n48, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98,
         n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20;
  assign BIRA_SO = ALL_SROW1_ALLOC_REG;

  i0sfvz003ab1d03x6 RepairedBySpareRow_R_reg ( .si(n48), .d(
        RepairedBySpareRow_INT), .ssb(n47), .clk(BIST_CLK), .rb(n2), .o(
        RepairedBySpareRow), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_0 ( .si(n48), .d(n109), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW0_FUSE_ADD_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_1 ( .si(n48), .d(n140), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW0_FUSE_ADD_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_2 ( .si(n48), .d(n139), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW0_FUSE_ADD_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_3 ( .si(n48), .d(n138), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_FUSE_ADD_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_4 ( .si(n48), .d(n137), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_FUSE_ADD_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_5 ( .si(n48), .d(n136), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_FUSE_ADD_REG[5]), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ADD_REG_reg_6 ( .si(n48), .d(n135), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_FUSE_ADD_REG[6]), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 ALL_FUSE0_ALLOC_REG_reg ( .si(n48), .d(n110), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW0_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_0 ( .si(n48), .d(n134), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_1 ( .si(n48), .d(n133), .ssb(n47), 
        .clk(BIST_CLK), .rb(n3), .o(ALL_SROW1_FUSE_ADD_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_2 ( .si(n48), .d(n132), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_FUSE_ADD_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_3 ( .si(n48), .d(n131), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_FUSE_ADD_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_4 ( .si(n48), .d(n130), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_FUSE_ADD_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_5 ( .si(n48), .d(n129), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_FUSE_ADD_REG[5]), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ADD_REG_reg_6 ( .si(n48), .d(n128), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_FUSE_ADD_REG[6]), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0sfvz003ab1d03x6 ALL_FUSE1_ALLOC_REG_reg ( .si(n48), .d(n111), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(ALL_SROW1_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_17) );
  i0sfvz003ab1d03x5 RepairableBySpareRow_R_reg ( .si(n48), .d(n1), .ssb(n47), 
        .clk(BIST_CLK), .rb(n2), .o(RepairableBySpareRow), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfvz003ab1d06x5 ALL_FUSE1_PAST_ALLOC_REG_reg ( .si(n48), .d(n141), .ssb(
        n47), .clk(BIST_CLK), .rb(n2), .o(ALL_FUSE1_PAST_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_19) );
  i0sfvz003ab1d06x5 ALL_FUSE0_PAST_ALLOC_REG_reg ( .si(n48), .d(n142), .ssb(
        n47), .clk(BIST_CLK), .rb(n2), .o(ALL_FUSE0_PAST_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_20) );
  i0sinv030ab1n08x5 U3 ( .a(n45), .o1(n49) );
  i0sorn008ab1n02x7 U4 ( .a(n56), .b(n55), .c(n54), .d(n53), .e(n52), .f(n51), 
        .g(n104), .h(n50), .o(n106) );
  i0sinv030ab1n02x5 U5 ( .a(RepairedBySpareRow), .o1(n10) );
  i0snona23ab1n09x5 U6 ( .c(LV_TM), .d(BIST_HOLD), .a(CLEAR), .b(n7), .out0(
        n14) );
  i0sinv020ab1n02x5 U7 ( .a(ALL_SROW1_ALLOC_REG), .o1(n16) );
  i0sinv000ab1n06x5 U8 ( .a(n21), .o1(n40) );
  i0snona32ab1n09x5 U9 ( .b(n6), .c(n8), .d(BIST_HOLD), .a(n14), .out0(n13) );
  i0sxnr002ab1n03x5 U10 ( .a(BIRA_FUSE_ADD_A[2]), .b(n62), .out0(n66) );
  i0smdn022ab1n03x4 U11 ( .b(ALL_SROW1_FUSE_ADD_REG[2]), .a(BIRA_FUSE_ADD_B[2]), .sa(n40), .o1(n62) );
  i0soa0222ab1n02x5 U12 ( .a(n108), .b(n107), .c(n106), .d(n105), .e(n104), 
        .f(n103), .o(n1) );
  i0snand03ab1n04x5 U13 ( .a(n14), .b(n7), .c(n13), .o1(n15) );
  i0sinv000ab1n04x5 U14 ( .a(n13), .o1(n102) );
  i0smbc004ab1n03x5 U15 ( .a(n102), .sa(n46), .b(n96), .sb(ALL_SROW0_ALLOC_REG), .c(n6), .sc(ALL_SROW0_FUSE_ADD_REG[6]), .d(FROM_BISR_ALL_SROW0_ALLOC_REG), 
        .sd(n98), .o(n110) );
  i0soai022ab1n02x7 U16 ( .a(ALL_FUSE0_PAST_ALLOC_REG), .b(n106), .c(
        ALL_FUSE1_PAST_ALLOC_REG), .d(n108), .o1(RepairedBySpareRow_INT) );
  i0soaib13ab1n03x5 U17 ( .d(n102), .c(n60), .a(n24), .b(n23), .o1(n134) );
  i0soaib13ab1n03x5 U18 ( .d(n102), .c(n95), .a(n94), .b(n93), .o1(n136) );
  i0soaib13ab1n03x5 U19 ( .d(n102), .c(n91), .a(n90), .b(n89), .o1(n137) );
  i0soaib13ab1n03x5 U20 ( .d(n102), .c(n87), .a(n86), .b(n85), .o1(n138) );
  i0soaib13ab1n03x5 U21 ( .d(n102), .c(n83), .a(n82), .b(n81), .o1(n139) );
  i0soaib13ab1n03x5 U22 ( .d(n102), .c(n62), .a(n30), .b(n29), .o1(n132) );
  i0soabi13ab1n03x5 U23 ( .c(n102), .d(n101), .a(n100), .b(n99), .o1(n135) );
  i0snanp02ab1n02x5 U24 ( .a(n102), .b(n63), .o1(n18) );
  i0sinv030ab1n12x5 U25 ( .a(n14), .o1(n98) );
  i0saoi022ab1n03x5 U26 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[2]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[1]), .d(n5), .o1(n29) );
  i0sinv020ab1n03x5 U27 ( .a(BIST_SHIFT), .o1(n7) );
  i0sinv040ab1n06x5 U28 ( .a(n15), .o1(n96) );
  i0sxnr002ab1n03x5 U29 ( .a(BIRA_FUSE_ADD_A[1]), .b(n79), .out0(n51) );
  i0saoi022ab1n02x5 U30 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[6]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[5]), .d(n5), .o1(n42) );
  i0saoi022ab1n02x5 U31 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[5]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[4]), .d(n5), .o1(n38) );
  i0saoi022ab1n02x5 U32 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[4]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[3]), .d(n5), .o1(n35) );
  i0saoi022ab1n02x5 U33 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[3]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[2]), .d(n5), .o1(n32) );
  i0saoi022ab1n02x5 U34 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[1]), .b(n98), 
        .c(ALL_SROW1_FUSE_ADD_REG[0]), .d(n5), .o1(n26) );
  i0saoi022ab1n02x5 U35 ( .a(FROM_BISR_ALL_SROW1_FUSE_ADD_REG[0]), .b(n98), 
        .c(n6), .d(ALL_SROW0_ALLOC_REG), .o1(n23) );
  i0saoi022ab1n02x5 U36 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[6]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[5]), .d(n5), .o1(n99) );
  i0saoi022ab1n02x5 U37 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[5]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[4]), .d(n5), .o1(n93) );
  i0saoi022ab1n02x5 U38 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[4]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[3]), .d(n5), .o1(n89) );
  i0saoi022ab1n02x5 U39 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[3]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[2]), .d(n5), .o1(n85) );
  i0saoi022ab1n02x5 U40 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[2]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[1]), .d(n5), .o1(n81) );
  i0saoi022ab1n02x5 U41 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[0]), .b(n98), 
        .c(BIRA_SI), .d(n5), .o1(n73) );
  i0saoi022ab1n02x5 U42 ( .a(FROM_BISR_ALL_SROW0_FUSE_ADD_REG[1]), .b(n98), 
        .c(ALL_SROW0_FUSE_ADD_REG[0]), .d(n5), .o1(n77) );
  i0snanp02ab1n02x5 U43 ( .a(ALL_SROW1_FUSE_ADD_REG[6]), .b(n6), .o1(n19) );
  i0snanp02ab1n02x5 U44 ( .a(FROM_BISR_ALL_SROW1_ALLOC_REG), .b(n98), .o1(n20)
         );
  i0snand23ab1n03x5 U45 ( .a(n17), .b(ALL_SROW0_ALLOC_REG), .c(n16), .o1(n21)
         );
  i0sinv000ab1n02x5 U46 ( .a(RepairedBySpareColumn), .o1(n11) );
  i0sinv040ab1n03x5 U47 ( .a(n12), .o1(n17) );
  i0sinv000ab1n03x5 U48 ( .a(n7), .o1(n6) );
  i0sinv000ab1n03x5 U49 ( .a(n7), .o1(n5) );
  i0sbff000ab1n02x5 U50 ( .a(n4), .o(n2) );
  i0sbff000ab1n02x5 U51 ( .a(n4), .o(n3) );
  i0sbff000ab1n02x5 U52 ( .a(BIST_ASYNC_RESETN), .o(n4) );
  i0sinv000ab1n03x5 U53 ( .a(BIST_BIRA_EN), .o1(n8) );
  i0sinv020ab1n02x5 U54 ( .a(n63), .o1(n103) );
  i0sinv020ab1n02x5 U55 ( .a(n46), .o1(n104) );
  i0sxnr002ab1n03x5 U56 ( .a(BIRA_FUSE_ADD_A[6]), .b(n101), .out0(n55) );
  i0sxnr002ab1n03x5 U57 ( .a(BIRA_FUSE_ADD_A[4]), .b(n91), .out0(n56) );
  i0sxnr002ab1n03x5 U58 ( .a(BIRA_FUSE_ADD_A[5]), .b(n95), .out0(n53) );
  i0sxnr002ab1n03x5 U59 ( .a(BIRA_FUSE_ADD_A[0]), .b(n75), .out0(n50) );
  i0sxnr002ab1n03x5 U60 ( .a(BIRA_FUSE_ADD_A[3]), .b(n87), .out0(n52) );
  i0sxnr002ab1n03x5 U61 ( .a(BIRA_FUSE_ADD_A[2]), .b(n83), .out0(n54) );
  i0sorn008ab1n02x7 U62 ( .a(n71), .b(n70), .c(n69), .d(n68), .e(n67), .f(n66), 
        .g(n103), .h(n65), .o(n108) );
  i0sxnr002ab1n03x5 U63 ( .a(BIRA_FUSE_ADD_A[6]), .b(n58), .out0(n70) );
  i0sxnr002ab1n03x5 U64 ( .a(BIRA_FUSE_ADD_A[4]), .b(n57), .out0(n71) );
  i0sxnr002ab1n03x5 U65 ( .a(BIRA_FUSE_ADD_A[0]), .b(n60), .out0(n68) );
  i0sxnr002ab1n03x5 U66 ( .a(BIRA_FUSE_ADD_A[3]), .b(n64), .out0(n65) );
  i0sxnr002ab1n03x5 U67 ( .a(BIRA_FUSE_ADD_A[1]), .b(n61), .out0(n67) );
  i0sxnr002ab1n03x5 U68 ( .a(BIRA_FUSE_ADD_A[5]), .b(n59), .out0(n69) );
  i0sinv000ab1n03x5 U69 ( .a(ALL_SROW1_FUSE_ADD_REG[6]), .o1(n41) );
  i0sinv000ab1n02x5 U70 ( .a(ALL_SROW1_FUSE_ADD_REG[5]), .o1(n37) );
  i0sinv000ab1n03x5 U71 ( .a(ALL_SROW1_FUSE_ADD_REG[4]), .o1(n34) );
  i0sinv000ab1n03x5 U72 ( .a(ALL_SROW1_FUSE_ADD_REG[3]), .o1(n31) );
  i0sinv000ab1n02x5 U73 ( .a(ALL_SROW1_FUSE_ADD_REG[2]), .o1(n28) );
  i0sinv000ab1n02x5 U74 ( .a(ALL_SROW1_FUSE_ADD_REG[1]), .o1(n25) );
  i0sinv000ab1n03x5 U75 ( .a(ALL_SROW1_FUSE_ADD_REG[0]), .o1(n22) );
  i0sinv000ab1n03x5 U76 ( .a(ALL_SROW0_FUSE_ADD_REG[6]), .o1(n97) );
  i0sinv000ab1n02x5 U77 ( .a(ALL_SROW0_FUSE_ADD_REG[5]), .o1(n92) );
  i0sinv000ab1n02x5 U78 ( .a(ALL_SROW0_FUSE_ADD_REG[4]), .o1(n88) );
  i0sinv000ab1n02x5 U79 ( .a(ALL_SROW0_FUSE_ADD_REG[3]), .o1(n84) );
  i0sinv000ab1n02x5 U80 ( .a(ALL_SROW0_FUSE_ADD_REG[2]), .o1(n80) );
  i0sinv000ab1n02x5 U81 ( .a(ALL_SROW0_FUSE_ADD_REG[1]), .o1(n76) );
  i0sinv000ab1n02x5 U82 ( .a(ALL_SROW0_FUSE_ADD_REG[0]), .o1(n72) );
  i0sinv000ab1n03x5 U83 ( .a(FROM_BISR_ALL_SROW1_ALLOC_REG), .o1(n44) );
  i0sinv000ab1n03x5 U84 ( .a(FROM_BISR_ALL_SROW0_ALLOC_REG), .o1(n9) );
  i0sinv000ab1n03x5 U85 ( .a(ALL_FUSE0_PAST_ALLOC_REG), .o1(n105) );
  i0sinv000ab1n03x5 U86 ( .a(ALL_FUSE1_PAST_ALLOC_REG), .o1(n107) );
  i0stihi00ab1n02x5 U87 ( .o(n47) );
  i0stilo00ab1n02x5 U88 ( .o(n48) );
  i0smdn022ab1n03x4 U89 ( .b(n105), .a(n9), .sa(n98), .o1(n142) );
  i0snana24ab1n03x5 U90 ( .d(PriorityColumn), .e(RepairableBySpareColumn), .a(
        n11), .b(n10), .c(ErrorGlobal), .out0(n12) );
  i0snanb02ab1n03x5 U91 ( .a(ALL_SROW0_ALLOC_REG), .b(n17), .out0(n45) );
  i0snanb02ab1n03x5 U92 ( .a(ALL_SROW0_ALLOC_REG), .b(n45), .out0(n46) );
  i0snanb02ab1n03x5 U93 ( .a(ALL_SROW1_ALLOC_REG), .b(n21), .out0(n63) );
  i0snana24ab1n03x5 U94 ( .d(ALL_SROW1_ALLOC_REG), .e(n96), .a(n20), .b(n19), 
        .c(n18), .out0(n111) );
  i0smdn022ab1n03x4 U95 ( .b(ALL_SROW1_FUSE_ADD_REG[0]), .a(BIRA_FUSE_ADD_B[0]), .sa(n40), .o1(n60) );
  i0snanb02ab1n03x5 U96 ( .a(n22), .b(n96), .out0(n24) );
  i0smdn022ab1n03x4 U97 ( .b(ALL_SROW1_FUSE_ADD_REG[1]), .a(BIRA_FUSE_ADD_B[1]), .sa(n40), .o1(n61) );
  i0snanb02ab1n03x5 U98 ( .a(n25), .b(n96), .out0(n27) );
  i0soabi13ab1n03x5 U99 ( .c(n102), .d(n61), .a(n27), .b(n26), .o1(n133) );
  i0snanb02ab1n03x5 U100 ( .a(n28), .b(n96), .out0(n30) );
  i0smdn022ab1n03x4 U101 ( .b(ALL_SROW1_FUSE_ADD_REG[3]), .a(
        BIRA_FUSE_ADD_B[3]), .sa(n40), .o1(n64) );
  i0snanb02ab1n03x5 U102 ( .a(n31), .b(n96), .out0(n33) );
  i0soabi13ab1n03x5 U103 ( .c(n102), .d(n64), .a(n33), .b(n32), .o1(n131) );
  i0smdn022ab1n03x4 U104 ( .b(ALL_SROW1_FUSE_ADD_REG[4]), .a(
        BIRA_FUSE_ADD_B[4]), .sa(n40), .o1(n57) );
  i0snanb02ab1n03x5 U105 ( .a(n34), .b(n96), .out0(n36) );
  i0soabi13ab1n03x5 U106 ( .c(n102), .d(n57), .a(n36), .b(n35), .o1(n130) );
  i0smdn022ab1n03x4 U107 ( .b(ALL_SROW1_FUSE_ADD_REG[5]), .a(
        BIRA_FUSE_ADD_B[5]), .sa(n40), .o1(n59) );
  i0snanb02ab1n03x5 U108 ( .a(n37), .b(n96), .out0(n39) );
  i0soabi13ab1n03x5 U109 ( .c(n102), .d(n59), .a(n39), .b(n38), .o1(n129) );
  i0smdn022ab1n03x4 U110 ( .b(ALL_SROW1_FUSE_ADD_REG[6]), .a(
        BIRA_FUSE_ADD_B[6]), .sa(n40), .o1(n58) );
  i0snanb02ab1n03x5 U111 ( .a(n41), .b(n96), .out0(n43) );
  i0soabi13ab1n03x5 U112 ( .c(n102), .d(n58), .a(n43), .b(n42), .o1(n128) );
  i0smdn022ab1n03x4 U113 ( .b(n107), .a(n44), .sa(n98), .o1(n141) );
  i0smdn022ab1n03x4 U114 ( .b(ALL_SROW0_FUSE_ADD_REG[4]), .a(
        BIRA_FUSE_ADD_B[4]), .sa(n49), .o1(n91) );
  i0smdn022ab1n03x4 U115 ( .b(ALL_SROW0_FUSE_ADD_REG[6]), .a(
        BIRA_FUSE_ADD_B[6]), .sa(n49), .o1(n101) );
  i0smdn022ab1n03x4 U116 ( .b(ALL_SROW0_FUSE_ADD_REG[2]), .a(
        BIRA_FUSE_ADD_B[2]), .sa(n49), .o1(n83) );
  i0smdn022ab1n03x4 U117 ( .b(ALL_SROW0_FUSE_ADD_REG[5]), .a(
        BIRA_FUSE_ADD_B[5]), .sa(n49), .o1(n95) );
  i0smdn022ab1n03x4 U118 ( .b(ALL_SROW0_FUSE_ADD_REG[3]), .a(
        BIRA_FUSE_ADD_B[3]), .sa(n49), .o1(n87) );
  i0smdn022ab1n03x4 U119 ( .b(ALL_SROW0_FUSE_ADD_REG[1]), .a(
        BIRA_FUSE_ADD_B[1]), .sa(n49), .o1(n79) );
  i0smdn022ab1n03x4 U120 ( .b(ALL_SROW0_FUSE_ADD_REG[0]), .a(
        BIRA_FUSE_ADD_B[0]), .sa(n49), .o1(n75) );
  i0snanb02ab1n03x5 U121 ( .a(n72), .b(n96), .out0(n74) );
  i0soabi13ab1n03x5 U122 ( .c(n102), .d(n75), .a(n74), .b(n73), .o1(n109) );
  i0snanb02ab1n03x5 U123 ( .a(n76), .b(n96), .out0(n78) );
  i0soabi13ab1n03x5 U124 ( .c(n102), .d(n79), .a(n78), .b(n77), .o1(n140) );
  i0snanb02ab1n03x5 U125 ( .a(n80), .b(n96), .out0(n82) );
  i0snanb02ab1n03x5 U126 ( .a(n84), .b(n96), .out0(n86) );
  i0snanb02ab1n03x5 U127 ( .a(n88), .b(n96), .out0(n90) );
  i0snanb02ab1n03x5 U128 ( .a(n92), .b(n96), .out0(n94) );
  i0snanb02ab1n03x5 U129 ( .a(n97), .b(n96), .out0(n100) );
endmodule



    module firebird7_in_gate1_tessent_mbist_c1_interface_m21_ColumnRedundancyAnalysis ( 
        BIST_CLK, BIST_ASYNC_RESETN, BIST_HOLD, BIST_SHIFT, MultiBitError_R, 
        IOIndex0, CLEAR, BIST_BIRA_EN, RepairedBySpareRow, 
        RepairableBySpareRow, PriorityColumn, FROM_BISR_All_SCOL0_FUSE_REG, 
        FROM_BISR_All_SCOL0_ALLOC_REG, ERROR, LV_TM, BIRA_SI, 
        All_SCOL0_FUSE_REG, All_SCOL0_ALLOC_REG, BIRA_SO, ErrorGlobal, 
        RepairedBySpareColumn, RepairableBySpareColumn );
  input [0:0] MultiBitError_R;
  input [4:0] IOIndex0;
  input [4:0] FROM_BISR_All_SCOL0_FUSE_REG;
  input [0:0] ERROR;
  output [4:0] All_SCOL0_FUSE_REG;
  input BIST_CLK, BIST_ASYNC_RESETN, BIST_HOLD, BIST_SHIFT, CLEAR,
         BIST_BIRA_EN, RepairedBySpareRow, RepairableBySpareRow,
         PriorityColumn, FROM_BISR_All_SCOL0_ALLOC_REG, LV_TM, BIRA_SI;
  output All_SCOL0_ALLOC_REG, BIRA_SO, ErrorGlobal, RepairedBySpareColumn,
         RepairableBySpareColumn;
  wire   ERROR_0_, All_SCOL0_ALLOC_REG, All_FUSE0_PAST_ALLOC_REG,
         IOIndex0_R0_4_, IOIndex0_R0_3_, IOIndex0_R0_2_, IOIndex0_R0_1_,
         IOIndex0_R0_0_, N27, N28, N29, N30, N31, IO_RANGE0_FUSE0_ERROR_MATCH,
         IO_RANGE0_ERROR_MATCH_R, IO_RANGE0_SPARES_AVAILABLE,
         IO_RANGE0_SPARES_AVAILABLE_R, n310, n32, n67, n68, n69, n70, n1, n2,
         n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n270, n280, n290, n300,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14;
  assign ERROR_0_ = ERROR[0];
  assign ErrorGlobal = ERROR_0_;
  assign BIRA_SO = All_SCOL0_ALLOC_REG;

  i0sfvz003ab1d03x6 IO_RANGE0_SPARES_AVAILABLE_R_reg ( .si(n32), .d(
        IO_RANGE0_SPARES_AVAILABLE), .ssb(n310), .clk(BIST_CLK), .rb(n2), .o(
        IO_RANGE0_SPARES_AVAILABLE_R), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 All_FUSE0_ALLOC_REG_reg ( .si(n32), .d(n56), .ssb(n310), 
        .clk(BIST_CLK), .rb(BIST_ASYNC_RESETN), .o(All_SCOL0_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 IO_RANGE0_ERROR_MATCH_R_reg ( .si(n32), .d(
        IO_RANGE0_FUSE0_ERROR_MATCH), .ssb(n310), .clk(BIST_CLK), .rb(n2), .o(
        IO_RANGE0_ERROR_MATCH_R), .so(SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d12x5 IOIndex0_R0_reg_0 ( .si(n32), .d(N27), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(IOIndex0_R0_0_), .so(SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d12x5 IOIndex0_R0_reg_2 ( .si(n32), .d(N29), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(IOIndex0_R0_2_), .so(SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d12x5 IOIndex0_R0_reg_4 ( .si(n32), .d(N31), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(IOIndex0_R0_4_), .so(SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d12x5 IOIndex0_R0_reg_3 ( .si(n32), .d(N30), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(IOIndex0_R0_3_), .so(SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d12x5 IOIndex0_R0_reg_1 ( .si(n32), .d(N28), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(IOIndex0_R0_1_), .so(SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d18x5 All_FUSE0_REG_reg_0 ( .si(n32), .d(n57), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(All_SCOL0_FUSE_REG[0]), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d12x5 All_FUSE0_REG_reg_4 ( .si(n32), .d(n67), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(All_SCOL0_FUSE_REG[4]), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d12x5 All_FUSE0_REG_reg_3 ( .si(n32), .d(n68), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(All_SCOL0_FUSE_REG[3]), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d12x5 All_FUSE0_REG_reg_1 ( .si(n32), .d(n70), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(All_SCOL0_FUSE_REG[1]), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d12x5 All_FUSE0_PAST_ALLOC_REG_reg ( .si(n32), .d(n58), .ssb(
        n310), .clk(BIST_CLK), .rb(n2), .o(All_FUSE0_PAST_ALLOC_REG), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d12x5 All_FUSE0_REG_reg_2 ( .si(n32), .d(n69), .ssb(n310), .clk(
        BIST_CLK), .rb(n2), .o(All_SCOL0_FUSE_REG[2]), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sand003ab1n06x5 U3 ( .a(n8), .b(n4), .c(n9), .o(n1) );
  i0sinv020ab1n04x5 U4 ( .a(n8), .o1(n39) );
  i0snona23ab1n06x5 U5 ( .c(LV_TM), .d(BIST_HOLD), .a(CLEAR), .b(n4), .out0(n8) );
  i0sinv020ab1n02x5 U6 ( .a(IO_RANGE0_SPARES_AVAILABLE_R), .o1(n54) );
  i0snona32ab1n06x5 U7 ( .b(n3), .c(n5), .d(BIST_HOLD), .a(n8), .out0(n9) );
  i0saoai13ab1n03x5 U8 ( .c(n12), .d(PriorityColumn), .b(n11), .a(n10), .o1(
        n19) );
  i0saoi022ab1n02x5 U9 ( .a(FROM_BISR_All_SCOL0_FUSE_REG[3]), .b(n39), .c(
        All_SCOL0_FUSE_REG[2]), .d(n3), .o1(n300) );
  i0snand42ab1n02x5 U10 ( .a(n38), .b(n43), .o1(n13) );
  i0sinv000ab1n02x5 U11 ( .a(n43), .o1(IO_RANGE0_SPARES_AVAILABLE) );
  i0sinv000ab1n02x5 U12 ( .a(BIST_SHIFT), .o1(n4) );
  i0saoi022ab1n02x5 U13 ( .a(FROM_BISR_All_SCOL0_FUSE_REG[4]), .b(n39), .c(
        All_SCOL0_FUSE_REG[3]), .d(n3), .o1(n36) );
  i0saoi022ab1n02x5 U14 ( .a(FROM_BISR_All_SCOL0_FUSE_REG[1]), .b(n39), .c(
        All_SCOL0_FUSE_REG[0]), .d(n3), .o1(n24) );
  i0saoi022ab1n02x5 U15 ( .a(FROM_BISR_All_SCOL0_FUSE_REG[0]), .b(n39), .c(
        BIRA_SI), .d(n3), .o1(n21) );
  i0snanp02ab1n02x5 U16 ( .a(n3), .b(All_SCOL0_FUSE_REG[4]), .o1(n14) );
  i0snanp02ab1n02x5 U17 ( .a(FROM_BISR_All_SCOL0_ALLOC_REG), .b(n39), .o1(n15)
         );
  i0snorp02ab1n02x5 U18 ( .a(n39), .b(n18), .o1(N27) );
  i0snorp02ab1n02x5 U19 ( .a(n39), .b(n17), .o1(N28) );
  i0snorp02ab1n02x5 U20 ( .a(n39), .b(n16), .o1(N29) );
  i0snorp02ab1n02x5 U21 ( .a(n39), .b(n7), .o1(N30) );
  i0snorp02ab1n02x5 U22 ( .a(n39), .b(n6), .o1(N31) );
  i0snorp03ab1n02x5 U23 ( .a(RepairedBySpareColumn), .b(RepairedBySpareRow), 
        .c(All_SCOL0_ALLOC_REG), .o1(n10) );
  i0sinv000ab1n03x5 U24 ( .a(RepairableBySpareRow), .o1(n11) );
  i0snorp02ab1n02x5 U25 ( .a(MultiBitError_R[0]), .b(n54), .o1(n12) );
  i0snand23ab1n03x5 U26 ( .a(n44), .b(n43), .c(n42), .o1(n53) );
  i0snor043ab1n03x5 U27 ( .a(n53), .b(n52), .c(n51), .o1(
        IO_RANGE0_FUSE0_ERROR_MATCH) );
  i0sinv000ab1n03x5 U28 ( .a(n4), .o1(n3) );
  i0sbff000ab1n02x5 U29 ( .a(BIST_ASYNC_RESETN), .o(n2) );
  i0sinv000ab1n03x5 U30 ( .a(BIST_BIRA_EN), .o1(n5) );
  i0saoi012ab1n03x5 U31 ( .b(n55), .c(n54), .a(MultiBitError_R[0]), .o1(
        RepairableBySpareColumn) );
  i0sinv000ab1n03x5 U32 ( .a(All_SCOL0_FUSE_REG[3]), .o1(n290) );
  i0sinv000ab1n03x5 U33 ( .a(All_SCOL0_FUSE_REG[1]), .o1(n23) );
  i0sinv000ab1n03x5 U34 ( .a(All_SCOL0_FUSE_REG[0]), .o1(n20) );
  i0sinv000ab1n03x5 U35 ( .a(All_SCOL0_FUSE_REG[4]), .o1(n35) );
  i0saoi022ab1n03x5 U36 ( .a(FROM_BISR_All_SCOL0_FUSE_REG[2]), .b(n39), .c(
        All_SCOL0_FUSE_REG[1]), .d(n3), .o1(n270) );
  i0sinv000ab1n03x5 U37 ( .a(All_SCOL0_FUSE_REG[2]), .o1(n26) );
  i0sinv000ab1n03x5 U38 ( .a(FROM_BISR_All_SCOL0_ALLOC_REG), .o1(n40) );
  i0sinv000ab1n03x5 U39 ( .a(IOIndex0[0]), .o1(n18) );
  i0sinv000ab1n03x5 U40 ( .a(IOIndex0[1]), .o1(n17) );
  i0sinv000ab1n03x5 U41 ( .a(IOIndex0[2]), .o1(n16) );
  i0sinv000ab1n03x5 U42 ( .a(IOIndex0[3]), .o1(n7) );
  i0sinv000ab1n03x5 U43 ( .a(IOIndex0[4]), .o1(n6) );
  i0sxor002ab1n02x7 U44 ( .a(n48), .b(IOIndex0[1]), .out0(n50) );
  i0sxor002ab1n02x7 U45 ( .a(n45), .b(IOIndex0[3]), .out0(n47) );
  i0sxor002ab1n02x7 U46 ( .a(n41), .b(IOIndex0[0]), .out0(n44) );
  i0sinv000ab1n03x5 U47 ( .a(All_FUSE0_PAST_ALLOC_REG), .o1(n42) );
  i0stihi00ab1n02x5 U48 ( .o(n310) );
  i0stilo00ab1n02x5 U49 ( .o(n32) );
  i0soaib12ab1n06x5 U50 ( .c(IO_RANGE0_ERROR_MATCH_R), .b(MultiBitError_R[0]), 
        .a(ERROR_0_), .out0(RepairedBySpareColumn) );
  i0sinv030ab1n04x5 U51 ( .a(n9), .o1(n38) );
  i0snanb02ab1n03x5 U52 ( .a(All_SCOL0_ALLOC_REG), .b(n19), .out0(n43) );
  i0snana24ab1n03x5 U53 ( .d(All_SCOL0_ALLOC_REG), .e(n1), .a(n15), .b(n14), 
        .c(n13), .out0(n56) );
  i0sinv030ab1n04x5 U54 ( .a(n19), .o1(n34) );
  i0smdn022ab1n03x4 U55 ( .b(All_SCOL0_FUSE_REG[0]), .a(IOIndex0_R0_0_), .sa(
        n34), .o1(n41) );
  i0snanb02ab1n03x5 U56 ( .a(n20), .b(n1), .out0(n22) );
  i0soabi13ab1n03x5 U57 ( .c(n38), .d(n41), .a(n22), .b(n21), .o1(n57) );
  i0smdn022ab1n03x4 U58 ( .b(All_SCOL0_FUSE_REG[1]), .a(IOIndex0_R0_1_), .sa(
        n34), .o1(n48) );
  i0snanb02ab1n03x5 U59 ( .a(n23), .b(n1), .out0(n25) );
  i0soabi13ab1n03x5 U60 ( .c(n38), .d(n48), .a(n25), .b(n24), .o1(n70) );
  i0smdn022ab1n03x4 U61 ( .b(All_SCOL0_FUSE_REG[2]), .a(IOIndex0_R0_2_), .sa(
        n34), .o1(n46) );
  i0snanb02ab1n03x5 U62 ( .a(n26), .b(n1), .out0(n280) );
  i0soabi13ab1n03x5 U63 ( .c(n38), .d(n46), .a(n280), .b(n270), .o1(n69) );
  i0smdn022ab1n03x4 U64 ( .b(All_SCOL0_FUSE_REG[3]), .a(IOIndex0_R0_3_), .sa(
        n34), .o1(n45) );
  i0snanb02ab1n03x5 U65 ( .a(n290), .b(n1), .out0(n33) );
  i0soabi13ab1n03x5 U66 ( .c(n38), .d(n45), .a(n33), .b(n300), .o1(n68) );
  i0smdn022ab1n03x4 U67 ( .b(All_SCOL0_FUSE_REG[4]), .a(IOIndex0_R0_4_), .sa(
        n34), .o1(n49) );
  i0snanb02ab1n03x5 U68 ( .a(n35), .b(n1), .out0(n37) );
  i0soabi13ab1n03x5 U69 ( .c(n38), .d(n49), .a(n37), .b(n36), .o1(n67) );
  i0smdn022ab1n03x4 U70 ( .b(n42), .a(n40), .sa(n39), .o1(n58) );
  i0sxo2na2ab1n03x5 U71 ( .c(n47), .a(n46), .b(IOIndex0[2]), .out0(n52) );
  i0sxo2na2ab1n03x5 U72 ( .c(n50), .a(n49), .b(IOIndex0[4]), .out0(n51) );
  i0sinv030ab1n04x5 U73 ( .a(RepairedBySpareColumn), .o1(n55) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_interface_m21_STATUS ( BIST_CLEAR, 
        FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID, CMP_EN, BIST_ASYNC_RESETN, 
        BIST_CLK, BIST_COLLAR_SETUP, BIST_COLLAR_HOLD, BIST_SHIFT_COLLAR, 
        BIST_ON, USE_DEFAULTS, SI, BIST_DIAG_EN, BIST_BIRA_EN, RAW_CMP_STAT, 
        MCP_BOUNDING_EN, INCLUDE_MEM_RESULTS_REG, GO_EN, ERROR, ERROR_R, 
        MultiBitError_R, ERROR_R_A, IOIndex0_R, SO, BIST_GO );
  input [21:0] RAW_CMP_STAT;
  output [0:0] ERROR;
  output [0:0] ERROR_R;
  output [0:0] MultiBitError_R;
  output [0:0] ERROR_R_A;
  output [4:0] IOIndex0_R;
  input BIST_CLEAR, FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID, CMP_EN,
         BIST_ASYNC_RESETN, BIST_CLK, BIST_COLLAR_SETUP, BIST_COLLAR_HOLD,
         BIST_SHIFT_COLLAR, BIST_ON, USE_DEFAULTS, SI, BIST_DIAG_EN,
         BIST_BIRA_EN, MCP_BOUNDING_EN, INCLUDE_MEM_RESULTS_REG;
  output GO_EN, SO, BIST_GO;
  wire   n143, CMP_EN_R, GO_ID_REG_MUX_SEL_21_, GO_ID_REG_MUX_SEL_20_,
         GO_ID_REG_MUX_SEL_19_, GO_ID_REG_MUX_SEL_18_, GO_ID_REG_MUX_SEL_17_,
         GO_ID_REG_MUX_SEL_16_, GO_ID_REG_MUX_SEL_15_, GO_ID_REG_MUX_SEL_14_,
         GO_ID_REG_MUX_SEL_13_, GO_ID_REG_MUX_SEL_12_, GO_ID_REG_MUX_SEL_11_,
         GO_ID_REG_MUX_SEL_10_, GO_ID_REG_MUX_SEL_9_, GO_ID_REG_MUX_SEL_8_,
         GO_ID_REG_MUX_SEL_7_, GO_ID_REG_MUX_SEL_6_, GO_ID_REG_MUX_SEL_5_,
         GO_ID_REG_MUX_SEL_4_, GO_ID_REG_MUX_SEL_3_, GO_ID_REG_MUX_SEL_2_,
         GO_ID_REG_MUX_SEL_1_, GO_ID_REG_MUX_SEL_0_, n_858_net_0,
         GO_ID_REG_MUX_21_, GO_ID_REG_MUX_20_, GO_ID_REG_MUX_19_,
         GO_ID_REG_MUX_18_, GO_ID_REG_MUX_17_, GO_ID_REG_MUX_16_,
         GO_ID_REG_MUX_15_, GO_ID_REG_MUX_14_, GO_ID_REG_MUX_13_,
         GO_ID_REG_MUX_12_, GO_ID_REG_MUX_11_, GO_ID_REG_MUX_10_,
         GO_ID_REG_MUX_9_, GO_ID_REG_MUX_8_, GO_ID_REG_MUX_7_,
         GO_ID_REG_MUX_6_, GO_ID_REG_MUX_5_, GO_ID_REG_MUX_4_,
         GO_ID_REG_MUX_3_, GO_ID_REG_MUX_2_, GO_ID_REG_MUX_1_,
         GO_ID_REG_MUX_0_, n_859_net_0, n_860_net_0, n_861_net_0, n_862_net_0,
         n_863_net_0, n_864_net_0, n_865_net_0, n_866_net_0, n_867_net_0,
         n_868_net_0, n_869_net_0, n_870_net_0, n_871_net_0, n_872_net_0,
         n_873_net_0, n_874_net_0, n_875_net_0, n_876_net_0, n_877_net_0,
         n_878_net_0, n_879_net_0, GO_ID_REG_21_, GO_ID_REG_20_, GO_ID_REG_19_,
         GO_ID_REG_18_, GO_ID_REG_17_, GO_ID_REG_16_, GO_ID_REG_15_,
         GO_ID_REG_14_, GO_ID_REG_13_, GO_ID_REG_12_, GO_ID_REG_11_,
         GO_ID_REG_10_, GO_ID_REG_9_, GO_ID_REG_8_, GO_ID_REG_7_, GO_ID_REG_6_,
         GO_ID_REG_5_, GO_ID_REG_4_, GO_ID_REG_3_, GO_ID_REG_2_, GO_ID_REG_1_,
         GO_ID_REG_0_, N34, N35, IOIndex0_4_, IOIndex0_3_, IOIndex0_2_,
         IOIndex0_1_, IOIndex0_0_, MultiBitError_R1_0_, N586, n65, n66, n67,
         n68, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n340, n350, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n69, n70, n71, n72, n73, n74,
         n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88,
         n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101,
         n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112,
         n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123,
         n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134,
         n135, n136, n137, n138, n139, n140, SYNOPSYS_UNCONNECTED_1,
         SYNOPSYS_UNCONNECTED_2, SYNOPSYS_UNCONNECTED_3,
         SYNOPSYS_UNCONNECTED_4, SYNOPSYS_UNCONNECTED_5,
         SYNOPSYS_UNCONNECTED_6, SYNOPSYS_UNCONNECTED_7,
         SYNOPSYS_UNCONNECTED_8, SYNOPSYS_UNCONNECTED_9,
         SYNOPSYS_UNCONNECTED_10, SYNOPSYS_UNCONNECTED_11,
         SYNOPSYS_UNCONNECTED_12, SYNOPSYS_UNCONNECTED_13,
         SYNOPSYS_UNCONNECTED_14, SYNOPSYS_UNCONNECTED_15,
         SYNOPSYS_UNCONNECTED_16, SYNOPSYS_UNCONNECTED_17,
         SYNOPSYS_UNCONNECTED_18, SYNOPSYS_UNCONNECTED_19,
         SYNOPSYS_UNCONNECTED_20, SYNOPSYS_UNCONNECTED_21,
         SYNOPSYS_UNCONNECTED_22, SYNOPSYS_UNCONNECTED_23,
         SYNOPSYS_UNCONNECTED_24, SYNOPSYS_UNCONNECTED_25,
         SYNOPSYS_UNCONNECTED_26, SYNOPSYS_UNCONNECTED_27,
         SYNOPSYS_UNCONNECTED_28, SYNOPSYS_UNCONNECTED_29,
         SYNOPSYS_UNCONNECTED_30, SYNOPSYS_UNCONNECTED_31,
         SYNOPSYS_UNCONNECTED_32, SYNOPSYS_UNCONNECTED_33;

  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG0 ( .b(
        RAW_CMP_STAT[0]), .a(n_858_net_0), .sa(GO_ID_REG_MUX_SEL_0_), .o(
        GO_ID_REG_MUX_0_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG1 ( .b(
        RAW_CMP_STAT[1]), .a(n_859_net_0), .sa(GO_ID_REG_MUX_SEL_1_), .o(
        GO_ID_REG_MUX_1_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG2 ( .b(
        RAW_CMP_STAT[2]), .a(n_860_net_0), .sa(GO_ID_REG_MUX_SEL_2_), .o(
        GO_ID_REG_MUX_2_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG3 ( .b(
        RAW_CMP_STAT[3]), .a(n_861_net_0), .sa(GO_ID_REG_MUX_SEL_3_), .o(
        GO_ID_REG_MUX_3_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG4 ( .b(
        RAW_CMP_STAT[4]), .a(n_862_net_0), .sa(GO_ID_REG_MUX_SEL_4_), .o(
        GO_ID_REG_MUX_4_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG5 ( .b(
        RAW_CMP_STAT[5]), .a(n_863_net_0), .sa(GO_ID_REG_MUX_SEL_5_), .o(
        GO_ID_REG_MUX_5_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG6 ( .b(
        RAW_CMP_STAT[6]), .a(n_864_net_0), .sa(GO_ID_REG_MUX_SEL_6_), .o(
        GO_ID_REG_MUX_6_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG7 ( .b(
        RAW_CMP_STAT[7]), .a(n_865_net_0), .sa(GO_ID_REG_MUX_SEL_7_), .o(
        GO_ID_REG_MUX_7_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG8 ( .b(
        RAW_CMP_STAT[8]), .a(n_866_net_0), .sa(GO_ID_REG_MUX_SEL_8_), .o(
        GO_ID_REG_MUX_8_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG9 ( .b(
        RAW_CMP_STAT[9]), .a(n_867_net_0), .sa(GO_ID_REG_MUX_SEL_9_), .o(
        GO_ID_REG_MUX_9_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG10 ( .b(
        RAW_CMP_STAT[10]), .a(n_868_net_0), .sa(GO_ID_REG_MUX_SEL_10_), .o(
        GO_ID_REG_MUX_10_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG11 ( .b(
        RAW_CMP_STAT[11]), .a(n_869_net_0), .sa(GO_ID_REG_MUX_SEL_11_), .o(
        GO_ID_REG_MUX_11_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG12 ( .b(
        RAW_CMP_STAT[12]), .a(n_870_net_0), .sa(GO_ID_REG_MUX_SEL_12_), .o(
        GO_ID_REG_MUX_12_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG13 ( .b(
        RAW_CMP_STAT[13]), .a(n_871_net_0), .sa(GO_ID_REG_MUX_SEL_13_), .o(
        GO_ID_REG_MUX_13_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG14 ( .b(
        RAW_CMP_STAT[14]), .a(n_872_net_0), .sa(GO_ID_REG_MUX_SEL_14_), .o(
        GO_ID_REG_MUX_14_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG15 ( .b(
        RAW_CMP_STAT[15]), .a(n_873_net_0), .sa(GO_ID_REG_MUX_SEL_15_), .o(
        GO_ID_REG_MUX_15_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG16 ( .b(
        RAW_CMP_STAT[16]), .a(n_874_net_0), .sa(GO_ID_REG_MUX_SEL_16_), .o(
        GO_ID_REG_MUX_16_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG17 ( .b(
        RAW_CMP_STAT[17]), .a(n_875_net_0), .sa(GO_ID_REG_MUX_SEL_17_), .o(
        GO_ID_REG_MUX_17_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG18 ( .b(
        RAW_CMP_STAT[18]), .a(n_876_net_0), .sa(GO_ID_REG_MUX_SEL_18_), .o(
        GO_ID_REG_MUX_18_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG19 ( .b(
        RAW_CMP_STAT[19]), .a(n_877_net_0), .sa(GO_ID_REG_MUX_SEL_19_), .o(
        GO_ID_REG_MUX_19_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG20 ( .b(
        RAW_CMP_STAT[20]), .a(n_878_net_0), .sa(GO_ID_REG_MUX_SEL_20_), .o(
        GO_ID_REG_MUX_20_) );
  i0smbn022ab1n02x5 tessent_persistent_cell_MUX_GO_ID_REG21 ( .b(
        RAW_CMP_STAT[21]), .a(n_879_net_0), .sa(GO_ID_REG_MUX_SEL_21_), .o(
        GO_ID_REG_MUX_21_) );
  i0sfvz003ab1d03x6 GO_EN_reg ( .si(n66), .d(n67), .ssb(n65), .clk(BIST_CLK), 
        .rb(n17), .o(GO_EN), .so(SYNOPSYS_UNCONNECTED_1) );
  i0sfvz003ab1d03x6 CMP_EN_R_reg ( .si(n66), .d(n7), .ssb(n65), .clk(BIST_CLK), 
        .rb(n17), .o(CMP_EN_R), .so(SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_21 ( .si(n66), .d(GO_ID_REG_MUX_21_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_21_), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_20 ( .si(n66), .d(GO_ID_REG_MUX_20_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_20_), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_18 ( .si(n66), .d(GO_ID_REG_MUX_18_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_18_), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_17 ( .si(n66), .d(GO_ID_REG_MUX_17_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_17_), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_16 ( .si(n66), .d(GO_ID_REG_MUX_16_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_16_), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_15 ( .si(n66), .d(GO_ID_REG_MUX_15_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_15_), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_14 ( .si(n66), .d(GO_ID_REG_MUX_14_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_14_), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_13 ( .si(n66), .d(GO_ID_REG_MUX_13_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_13_), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_12 ( .si(n66), .d(GO_ID_REG_MUX_12_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_12_), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_11 ( .si(n66), .d(GO_ID_REG_MUX_11_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_11_), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_10 ( .si(n66), .d(GO_ID_REG_MUX_10_), .ssb(
        n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_10_), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_9 ( .si(n66), .d(GO_ID_REG_MUX_9_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_9_), .so(SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_8 ( .si(n66), .d(GO_ID_REG_MUX_8_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_8_), .so(SYNOPSYS_UNCONNECTED_15) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_7 ( .si(n66), .d(GO_ID_REG_MUX_7_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_7_), .so(SYNOPSYS_UNCONNECTED_16) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_6 ( .si(n66), .d(GO_ID_REG_MUX_6_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_6_), .so(SYNOPSYS_UNCONNECTED_17) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_5 ( .si(n66), .d(GO_ID_REG_MUX_5_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_5_), .so(SYNOPSYS_UNCONNECTED_18) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_4 ( .si(n66), .d(GO_ID_REG_MUX_4_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_4_), .so(SYNOPSYS_UNCONNECTED_19) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_3 ( .si(n66), .d(GO_ID_REG_MUX_3_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_3_), .so(SYNOPSYS_UNCONNECTED_20) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_2 ( .si(n66), .d(GO_ID_REG_MUX_2_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_2_), .so(SYNOPSYS_UNCONNECTED_21) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_1 ( .si(n66), .d(GO_ID_REG_MUX_1_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_1_), .so(SYNOPSYS_UNCONNECTED_22) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_0 ( .si(n66), .d(GO_ID_REG_MUX_0_), .ssb(n65), .clk(BIST_CLK), .rb(n18), .o(GO_ID_REG_0_), .so(SYNOPSYS_UNCONNECTED_23) );
  i0sfvz003ab1d03x6 ERROR_R2_reg_0 ( .si(n66), .d(N35), .ssb(n65), .clk(
        BIST_CLK), .rb(n18), .o(ERROR_R_A[0]), .so(SYNOPSYS_UNCONNECTED_24) );
  i0sfvz003ab1d03x6 MultiBitError_R1_reg_0 ( .si(n66), .d(N586), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(MultiBitError_R1_0_), .so(
        SYNOPSYS_UNCONNECTED_25) );
  i0sfvz003ab1d03x6 MultiBitError_R2_reg_0 ( .si(n66), .d(MultiBitError_R1_0_), 
        .ssb(n65), .clk(BIST_CLK), .rb(n19), .o(MultiBitError_R[0]), .so(
        SYNOPSYS_UNCONNECTED_26) );
  i0sfvz003ab1d03x6 IOIndex0_R_reg_2 ( .si(n66), .d(IOIndex0_2_), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(IOIndex0_R[2]), .so(
        SYNOPSYS_UNCONNECTED_27) );
  i0sorn002ab1n03x5 U3 ( .a(GO_EN), .b(BIST_COLLAR_SETUP), .o(n68) );
  i0sand002ab1n03x5 U70 ( .a(n68), .b(BIST_ON), .o(n67) );
  i0sfvz003ab1d02x6 ERROR_R1_reg_0 ( .si(n66), .d(N34), .ssb(n65), .clk(
        BIST_CLK), .rb(n18), .o(n143), .so(SYNOPSYS_UNCONNECTED_28) );
  i0sfvz003ab1d02x6 IOIndex0_R_reg_0 ( .si(n66), .d(IOIndex0_0_), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(IOIndex0_R[0]), .so(
        SYNOPSYS_UNCONNECTED_29) );
  i0sfvz003ab1d02x6 IOIndex0_R_reg_3 ( .si(n66), .d(IOIndex0_3_), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(IOIndex0_R[3]), .so(
        SYNOPSYS_UNCONNECTED_30) );
  i0sfvz003ab1d02x6 IOIndex0_R_reg_1 ( .si(n66), .d(IOIndex0_1_), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(IOIndex0_R[1]), .so(
        SYNOPSYS_UNCONNECTED_31) );
  i0sfvz003ab1d03x6 IOIndex0_R_reg_4 ( .si(n66), .d(IOIndex0_4_), .ssb(n65), 
        .clk(BIST_CLK), .rb(n19), .o(IOIndex0_R[4]), .so(
        SYNOPSYS_UNCONNECTED_32) );
  i0sfvz003ab1d03x6 GO_ID_REG_reg_19 ( .si(n66), .d(GO_ID_REG_MUX_19_), .ssb(
        n65), .clk(BIST_CLK), .rb(n17), .o(GO_ID_REG_19_), .so(
        SYNOPSYS_UNCONNECTED_33) );
  i0sinv030ab1n02x5 U4 ( .a(n72), .o1(n39) );
  i0sinv030ab1n02x5 U5 ( .a(GO_ID_REG_0_), .o1(n58) );
  i0snor002ab1n02x5 U6 ( .a(GO_ID_REG_3_), .b(GO_ID_REG_2_), .o1(n10) );
  i0snona23ab1n06x5 U7 ( .c(GO_ID_REG_7_), .d(n41), .a(n28), .b(n9), .out0(n71) );
  i0sinv030ab1n02x5 U8 ( .a(n42), .o1(n52) );
  i0sinv030ab1n02x5 U9 ( .a(n77), .o1(n91) );
  i0sinv000ab1n03x5 U10 ( .a(n46), .o1(n103) );
  i0sinv030ab1n02x5 U11 ( .a(n69), .o1(n94) );
  i0sand003ab1n02x5 U12 ( .a(n39), .b(n38), .c(n118), .o(n1) );
  i0sand002ab1n03x5 U13 ( .a(n52), .b(n12), .o(n2) );
  i0sand003ab1n03x7 U14 ( .a(n128), .b(n132), .c(n59), .o(n3) );
  i0sinv000ab1n03x5 U15 ( .a(INCLUDE_MEM_RESULTS_REG), .o1(n25) );
  i0snorp02ab1n02x5 U16 ( .a(BIST_DIAG_EN), .b(BIST_BIRA_EN), .o1(n4) );
  i0soaib12ab1n02x5 U17 ( .c(n24), .b(n111), .a(n26), .out0(n5) );
  i0sinv040ab1n06x5 U18 ( .a(n5), .o1(n139) );
  i0sinv020ab1n03x5 U19 ( .a(BIST_SHIFT_COLLAR), .o1(n24) );
  i0snanp03ab1n06x5 U20 ( .a(n10), .b(n58), .c(n133), .o1(n62) );
  i0snanp03ab1n02x5 U21 ( .a(n64), .b(n14), .c(n133), .o1(n57) );
  i0sinv020ab1n02x5 U22 ( .a(n85), .o1(n95) );
  i0sinv020ab1n02x5 U23 ( .a(n83), .o1(n45) );
  i0snor022ab1n04x5 U24 ( .a(GO_ID_REG_19_), .b(GO_ID_REG_18_), .o1(n9) );
  i0snorp03ab1n06x5 U25 ( .a(GO_ID_REG_11_), .b(GO_ID_REG_10_), .c(
        GO_ID_REG_12_), .o1(n8) );
  i0snor022ab1n04x5 U26 ( .a(GO_ID_REG_14_), .b(GO_ID_REG_13_), .o1(n12) );
  i0snor022ab1n04x5 U27 ( .a(GO_ID_REG_4_), .b(GO_ID_REG_1_), .o1(n14) );
  i0sinv030ab1n02x5 U28 ( .a(n97), .o1(n104) );
  i0saoi112ab1n02x5 U29 ( .c(n92), .d(n10), .a(n91), .b(n90), .o1(n108) );
  i0sinv000ab1n02x5 U30 ( .a(GO_ID_REG_20_), .o1(n118) );
  i0snanp02ab1n02x5 U31 ( .a(n55), .b(n85), .o1(n61) );
  i0snanb04ab1n02x5 U32 ( .a(n122), .b(n2), .c(n123), .d(n121), .out0(n89) );
  i0snona32ab1n02x4 U33 ( .b(n24), .c(n25), .d(MCP_BOUNDING_EN), .a(n112), 
        .out0(n20) );
  i0snanb04ab1n06x5 U34 ( .a(n136), .b(n92), .c(n135), .d(n58), .out0(n101) );
  i0sinv040ab1n03x5 U35 ( .a(n350), .o1(n59) );
  i0snanb04ab1n02x5 U36 ( .a(n94), .b(n103), .c(n93), .d(n6), .out0(
        IOIndex0_2_) );
  i0sinv000ab1n02x5 U37 ( .a(n105), .o1(n60) );
  i0snanb04ab1n02x5 U38 ( .a(n105), .b(n103), .c(n99), .d(n100), .out0(
        IOIndex0_0_) );
  i0sinv020ab1n02x5 U39 ( .a(n98), .o1(ERROR[0]) );
  i0sinv000ab1n02x5 U40 ( .a(n76), .o1(n84) );
  i0sand002ab1n02x5 U41 ( .a(n80), .b(n79), .o(n81) );
  i0snanb04ab1n02x5 U42 ( .a(n130), .b(n1), .c(n129), .d(n117), .out0(n77) );
  i0sinv000ab1n02x5 U43 ( .a(n93), .o1(n96) );
  i0snorp02ab1n02x5 U44 ( .a(n22), .b(n98), .o1(N34) );
  i0snanp03ab1n02x5 U45 ( .a(n2), .b(GO_ID_REG_15_), .c(n43), .o1(n54) );
  i0sand003ab1n02x5 U46 ( .a(n1), .b(GO_ID_REG_21_), .c(n40), .o(n11) );
  i0snanp03ab1n02x5 U47 ( .a(n3), .b(GO_ID_REG_12_), .c(n127), .o1(n80) );
  i0snanp03ab1n02x5 U48 ( .a(n56), .b(GO_ID_REG_7_), .c(n9), .o1(n55) );
  i0snona32ab1n02x4 U49 ( .b(GO_ID_REG_7_), .c(GO_ID_REG_19_), .d(n120), .a(
        n56), .out0(n85) );
  i0snanp03ab1n02x5 U50 ( .a(n8), .b(GO_ID_REG_6_), .c(n59), .o1(n75) );
  i0snorp02ab1n02x5 U51 ( .a(n72), .b(n71), .o1(n73) );
  i0sinv000ab1n02x5 U52 ( .a(GO_ID_REG_21_), .o1(n117) );
  i0sinv000ab1n02x5 U53 ( .a(GO_ID_REG_8_), .o1(n130) );
  i0sinv000ab1n02x5 U54 ( .a(GO_ID_REG_9_), .o1(n129) );
  i0sinv020ab1n04x5 U55 ( .a(BIST_CLEAR), .o1(n23) );
  i0snona32ab1n02x4 U56 ( .b(n24), .c(n25), .d(MCP_BOUNDING_EN), .a(n112), 
        .out0(n138) );
  i0snona32ab1n02x4 U57 ( .b(n24), .c(n25), .d(MCP_BOUNDING_EN), .a(n112), 
        .out0(n21) );
  i0sinv040ab1n03x5 U58 ( .a(n30), .o1(n56) );
  i0sinv000ab1n02x5 U59 ( .a(n62), .o1(n63) );
  i0snanb04ab1n02x5 U60 ( .a(n134), .b(n64), .c(n63), .d(n137), .out0(n69) );
  i0snorb02ab1n02x5 U61 ( .a(CMP_EN), .b(n4), .out0(n110) );
  i0snand23ab1n03x5 U62 ( .a(n3), .b(GO_ID_REG_11_), .c(n126), .o1(n79) );
  i0soa0012ab1n02x5 U63 ( .b(n13), .c(n47), .a(n76), .o(n100) );
  i0sorn003ab1n02x5 U64 ( .a(n137), .b(n62), .c(GO_ID_REG_4_), .o(n13) );
  i0snona32ab1n02x4 U65 ( .b(GO_ID_REG_7_), .c(GO_ID_REG_18_), .d(n119), .a(
        n56), .out0(n87) );
  i0soabi12ab1n02x5 U66 ( .b(n72), .c(n47), .a(n29), .out0(n98) );
  i0snanp03ab1n02x5 U67 ( .a(n37), .b(n50), .c(n124), .o1(n83) );
  i0snorp02ab1n02x5 U68 ( .a(n128), .b(n48), .o1(n49) );
  i0snanb03ab1n02x5 U69 ( .a(n51), .b(n50), .c(n49), .out0(n97) );
  i0sinv000ab1n02x5 U71 ( .a(GO_ID_REG_10_), .o1(n128) );
  i0sinv000ab1n02x5 U72 ( .a(GO_ID_REG_14_), .o1(n124) );
  i0sinv000ab1n02x5 U73 ( .a(GO_ID_REG_12_), .o1(n126) );
  i0sbff000ab1n02x5 U74 ( .a(n15), .o(n17) );
  i0sbff000ab1n02x5 U75 ( .a(n15), .o(n18) );
  i0sinv000ab1n03x5 U76 ( .a(n23), .o1(n22) );
  i0sbff000ab1n02x5 U77 ( .a(BIST_ASYNC_RESETN), .o(n15) );
  i0sbff000ab1n02x5 U78 ( .a(n16), .o(n19) );
  i0sbff000ab1n02x5 U79 ( .a(BIST_ASYNC_RESETN), .o(n16) );
  i0sinv000ab1n03x5 U80 ( .a(MCP_BOUNDING_EN), .o1(n26) );
  i0sinv000ab1n03x5 U81 ( .a(n57), .o1(n92) );
  i0sinv000ab1n03x5 U82 ( .a(n89), .o1(n90) );
  i0snano32ab1n03x5 U83 ( .b(n6), .c(n108), .d(n107), .a(n106), .out0(N586) );
  i0snorp03ab1n03x5 U84 ( .a(n96), .b(n95), .c(n94), .o1(n107) );
  i0snanb04ab1n03x5 U85 ( .a(n129), .b(n1), .c(n130), .d(n117), .out0(n76) );
  i0snand43ab1n02x5 U86 ( .a(n97), .b(n54), .c(n93), .o1(n78) );
  i0sinv020ab1n02x5 U87 ( .a(n78), .o1(n82) );
  i0sand003ab1n03x7 U88 ( .a(n86), .b(n75), .c(n80), .o(n6) );
  i0snona32ab1n02x4 U89 ( .b(n48), .c(n33), .d(n41), .a(n39), .out0(n30) );
  i0sinv000ab1n03x5 U90 ( .a(n143), .o1(BIST_GO) );
  i0sinv020ab1n02x5 U91 ( .a(GO_EN), .o1(n115) );
  i0snor042ab1n03x5 U92 ( .a(FREEZE_GO_ID), .b(BIST_COLLAR_HOLD), .o1(n7) );
  i0sinv000ab1n02x5 U93 ( .a(GO_ID_REG_7_), .o1(n131) );
  i0snorb02ab1n02x5 U94 ( .a(CMP_EN_R), .b(FREEZE_STOP_ERROR_EARLY_R), .out0(
        n109) );
  i0soai113ab1n03x7 U95 ( .c(n36), .d(n135), .e(n57), .a(n87), .b(n79), .o1(
        n105) );
  i0snor022ab1n02x5 U96 ( .a(GO_ID_REG_5_), .b(GO_ID_REG_0_), .o1(n31) );
  i0snona32ab1n03x5 U97 ( .b(GO_ID_REG_16_), .c(GO_ID_REG_15_), .d(n121), .a(
        n2), .out0(n99) );
  i0soai013ab1n02x4 U98 ( .b(CMP_EN_R), .c(BIST_COLLAR_HOLD), .d(n4), .a(GO_EN), .o1(n29) );
  i0snano32ab1n02x4 U99 ( .b(GO_ID_REG_13_), .c(n123), .d(n43), .a(n41), 
        .out0(n37) );
  i0snand02ab1n02x5 U100 ( .a(n74), .b(n73), .o1(n86) );
  i0snorp03ab1n02x5 U101 ( .a(n118), .b(n70), .c(GO_ID_REG_21_), .o1(n74) );
  i0sinv000ab1n02x5 U102 ( .a(GO_ID_REG_19_), .o1(n119) );
  i0sinv000ab1n02x5 U103 ( .a(GO_ID_REG_13_), .o1(n125) );
  i0sinv000ab1n02x5 U104 ( .a(GO_ID_REG_1_), .o1(n137) );
  i0sinv000ab1n02x5 U105 ( .a(GO_ID_REG_17_), .o1(n121) );
  i0sinv000ab1n02x5 U106 ( .a(GO_ID_REG_18_), .o1(n120) );
  i0sinv000ab1n02x5 U107 ( .a(GO_ID_REG_16_), .o1(n122) );
  i0sinv000ab1n02x5 U108 ( .a(GO_ID_REG_4_), .o1(n134) );
  i0sinv000ab1n02x5 U109 ( .a(GO_ID_REG_11_), .o1(n127) );
  i0sinv000ab1n02x5 U110 ( .a(GO_ID_REG_3_), .o1(n135) );
  i0snorb02ab1n03x4 U111 ( .a(n143), .b(n22), .out0(N35) );
  i0sinv000ab1n02x5 U112 ( .a(GO_ID_REG_2_), .o1(n136) );
  i0sinv000ab1n03x5 U113 ( .a(SI), .o1(n113) );
  i0stihi00ab1n02x5 U114 ( .o(n65) );
  i0stilo00ab1n02x5 U115 ( .o(n66) );
  i0sinv040ab1n06x5 U116 ( .a(n116), .o1(n140) );
  i0sinv030ab1n04x5 U117 ( .a(GO_ID_REG_5_), .o1(n133) );
  i0snanb02ab1n03x5 U118 ( .a(n62), .b(n14), .out0(n72) );
  i0sorn002ab1n03x5 U119 ( .a(GO_ID_REG_9_), .b(GO_ID_REG_8_), .o(n70) );
  i0sinv030ab1n04x5 U120 ( .a(n70), .o1(n40) );
  i0snor042ab1n03x5 U121 ( .a(GO_ID_REG_21_), .b(GO_ID_REG_20_), .o1(n27) );
  i0snanp02ab1n06x5 U122 ( .a(n40), .b(n27), .o1(n33) );
  i0sinv030ab1n04x5 U123 ( .a(GO_ID_REG_6_), .o1(n132) );
  i0snanp02ab1n06x5 U124 ( .a(n8), .b(n132), .o1(n41) );
  i0sinv030ab1n04x5 U125 ( .a(GO_ID_REG_15_), .o1(n123) );
  i0sorn002ab1n03x5 U126 ( .a(GO_ID_REG_17_), .b(GO_ID_REG_16_), .o(n53) );
  i0sinv030ab1n04x5 U127 ( .a(n53), .o1(n43) );
  i0snand03ab1n04x5 U128 ( .a(n12), .b(n123), .c(n43), .o1(n48) );
  i0sinv030ab1n04x5 U129 ( .a(n48), .o1(n28) );
  i0sinv030ab1n04x5 U130 ( .a(n71), .o1(n38) );
  i0snanb02ab1n03x5 U131 ( .a(n33), .b(n38), .out0(n47) );
  i0smdn022ab1n03x4 U132 ( .b(n113), .a(n58), .sa(INCLUDE_MEM_RESULTS_REG), 
        .o1(SO) );
  i0sorn002ab1n03x5 U133 ( .a(GO_ID_REG_0_), .b(GO_ID_REG_2_), .o(n36) );
  i0sinv030ab1n04x5 U134 ( .a(n47), .o1(n64) );
  i0snanb02ab1n03x5 U135 ( .a(GO_ID_REG_7_), .b(n9), .out0(n32) );
  i0snona24ab1n03x5 U136 ( .d(n33), .e(n32), .a(n31), .b(n14), .c(n10), .out0(
        n340) );
  i0sinv030ab1n04x5 U137 ( .a(n340), .o1(n50) );
  i0snanb02ab1n03x5 U138 ( .a(n48), .b(n50), .out0(n350) );
  i0snona24ab1n03x5 U139 ( .d(n133), .e(GO_ID_REG_0_), .a(n10), .b(n64), .c(
        n14), .out0(n44) );
  i0snanb02ab1n03x5 U140 ( .a(n41), .b(n50), .out0(n42) );
  i0snona24ab1n03x5 U141 ( .d(n45), .e(n11), .a(n55), .b(n44), .c(n54), .out0(
        n46) );
  i0sorn003ab1n03x7 U142 ( .a(GO_ID_REG_12_), .b(GO_ID_REG_11_), .c(
        GO_ID_REG_6_), .o(n51) );
  i0snona24ab1n03x5 U143 ( .d(GO_ID_REG_15_), .e(n53), .a(n52), .b(
        GO_ID_REG_14_), .c(n125), .out0(n93) );
  i0snona24ab1n03x5 U144 ( .d(n78), .e(n61), .a(n101), .b(n60), .c(n75), 
        .out0(IOIndex0_1_) );
  i0snona24ab1n03x5 U145 ( .d(n84), .e(n91), .a(n83), .b(n82), .c(n81), .out0(
        IOIndex0_3_) );
  i0snanb02ab1n03x5 U146 ( .a(n95), .b(n86), .out0(n88) );
  i0snona24ab1n03x5 U147 ( .d(n11), .e(n88), .a(n87), .b(n99), .c(n89), .out0(
        IOIndex0_4_) );
  i0sand003ab1n03x7 U148 ( .a(ERROR[0]), .b(n100), .c(n99), .o(n102) );
  i0snona24ab1n03x5 U149 ( .d(n105), .e(n104), .a(n103), .b(n102), .c(n101), 
        .out0(n106) );
  i0smd2na2ab1n03x5 U150 ( .c(n23), .b(n110), .a(n109), .sa(BIST_COLLAR_HOLD), 
        .out0(n111) );
  i0sinv030ab1n04x5 U151 ( .a(n111), .o1(n112) );
  i0sobai22ab1n03x5 U152 ( .a(GO_ID_REG_21_), .b(n139), .c(n20), .d(n113), 
        .out0(n_879_net_0) );
  i0snanb02ab1n03x5 U153 ( .a(INCLUDE_MEM_RESULTS_REG), .b(BIST_SHIFT_COLLAR), 
        .out0(n114) );
  i0snona24ab1n03x5 U154 ( .d(n115), .e(MCP_BOUNDING_EN), .a(n114), .b(n7), 
        .c(n23), .out0(n116) );
  i0saob012ab1n03x5 U155 ( .b(GO_ID_REG_21_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_21_) );
  i0sobai22ab1n03x5 U156 ( .a(GO_ID_REG_20_), .b(n139), .c(n21), .d(n117), 
        .out0(n_878_net_0) );
  i0saob012ab1n03x5 U157 ( .b(GO_ID_REG_20_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_20_) );
  i0sobai22ab1n03x5 U158 ( .a(GO_ID_REG_19_), .b(n139), .c(n138), .d(n118), 
        .out0(n_877_net_0) );
  i0saob012ab1n03x5 U159 ( .b(GO_ID_REG_19_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_19_) );
  i0sobai22ab1n03x5 U160 ( .a(GO_ID_REG_18_), .b(n139), .c(n20), .d(n119), 
        .out0(n_876_net_0) );
  i0saob012ab1n03x5 U161 ( .b(GO_ID_REG_18_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_18_) );
  i0sobai22ab1n03x5 U162 ( .a(GO_ID_REG_17_), .b(n139), .c(n21), .d(n120), 
        .out0(n_875_net_0) );
  i0saob012ab1n03x5 U163 ( .b(GO_ID_REG_17_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_17_) );
  i0sobai22ab1n03x5 U164 ( .a(GO_ID_REG_16_), .b(n139), .c(n138), .d(n121), 
        .out0(n_874_net_0) );
  i0saob012ab1n03x5 U165 ( .b(GO_ID_REG_16_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_16_) );
  i0sobai22ab1n03x5 U166 ( .a(GO_ID_REG_15_), .b(n139), .c(n20), .d(n122), 
        .out0(n_873_net_0) );
  i0saob012ab1n03x5 U167 ( .b(GO_ID_REG_15_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_15_) );
  i0sobai22ab1n03x5 U168 ( .a(GO_ID_REG_14_), .b(n139), .c(n21), .d(n123), 
        .out0(n_872_net_0) );
  i0saob012ab1n03x5 U169 ( .b(GO_ID_REG_14_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_14_) );
  i0sobai22ab1n03x5 U170 ( .a(GO_ID_REG_13_), .b(n139), .c(n138), .d(n124), 
        .out0(n_871_net_0) );
  i0saob012ab1n03x5 U171 ( .b(GO_ID_REG_13_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_13_) );
  i0sobai22ab1n03x5 U172 ( .a(GO_ID_REG_12_), .b(n139), .c(n20), .d(n125), 
        .out0(n_870_net_0) );
  i0saob012ab1n03x5 U173 ( .b(GO_ID_REG_12_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_12_) );
  i0sobai22ab1n03x5 U174 ( .a(GO_ID_REG_11_), .b(n139), .c(n21), .d(n126), 
        .out0(n_869_net_0) );
  i0saob012ab1n03x5 U175 ( .b(GO_ID_REG_11_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_11_) );
  i0sobai22ab1n03x5 U176 ( .a(GO_ID_REG_10_), .b(n139), .c(n138), .d(n127), 
        .out0(n_868_net_0) );
  i0saob012ab1n03x5 U177 ( .b(GO_ID_REG_10_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_10_) );
  i0sobai22ab1n03x5 U178 ( .a(GO_ID_REG_9_), .b(n139), .c(n20), .d(n128), 
        .out0(n_867_net_0) );
  i0saob012ab1n03x5 U179 ( .b(GO_ID_REG_9_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_9_) );
  i0sobai22ab1n03x5 U180 ( .a(GO_ID_REG_8_), .b(n139), .c(n21), .d(n129), 
        .out0(n_866_net_0) );
  i0saob012ab1n03x5 U181 ( .b(GO_ID_REG_8_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_8_) );
  i0sobai22ab1n03x5 U182 ( .a(GO_ID_REG_7_), .b(n139), .c(n138), .d(n130), 
        .out0(n_865_net_0) );
  i0saob012ab1n03x5 U183 ( .b(GO_ID_REG_7_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_7_) );
  i0sobai22ab1n03x5 U184 ( .a(GO_ID_REG_6_), .b(n139), .c(n20), .d(n131), 
        .out0(n_864_net_0) );
  i0saob012ab1n03x5 U185 ( .b(GO_ID_REG_6_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_6_) );
  i0sobai22ab1n03x5 U186 ( .a(GO_ID_REG_5_), .b(n139), .c(n21), .d(n132), 
        .out0(n_863_net_0) );
  i0saob012ab1n03x5 U187 ( .b(GO_ID_REG_5_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_5_) );
  i0sobai22ab1n03x5 U188 ( .a(GO_ID_REG_4_), .b(n139), .c(n138), .d(n133), 
        .out0(n_862_net_0) );
  i0saob012ab1n03x5 U189 ( .b(GO_ID_REG_4_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_4_) );
  i0sobai22ab1n03x5 U190 ( .a(GO_ID_REG_3_), .b(n139), .c(n20), .d(n134), 
        .out0(n_861_net_0) );
  i0saob012ab1n03x5 U191 ( .b(GO_ID_REG_3_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_3_) );
  i0sobai22ab1n03x5 U192 ( .a(GO_ID_REG_2_), .b(n139), .c(n21), .d(n135), 
        .out0(n_860_net_0) );
  i0saob012ab1n03x5 U193 ( .b(GO_ID_REG_2_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_2_) );
  i0sobai22ab1n03x5 U194 ( .a(GO_ID_REG_1_), .b(n139), .c(n138), .d(n136), 
        .out0(n_859_net_0) );
  i0saob012ab1n03x5 U195 ( .b(GO_ID_REG_1_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_1_) );
  i0sobai22ab1n03x5 U196 ( .a(GO_ID_REG_0_), .b(n139), .c(n20), .d(n137), 
        .out0(n_858_net_0) );
  i0saob012ab1n03x5 U197 ( .b(GO_ID_REG_0_), .c(n4), .a(n140), .out0(
        GO_ID_REG_MUX_SEL_0_) );
endmodule


module firebird7_in_gate1_tessent_mbist_c1_interface_m21 ( PriorityColumn, 
        BIST_CLEAR_BIRA, wen_IN, ren_IN, adr_IN, din_IN, q_IN, TCK, BIST_CMP, 
        INCLUDE_MEM_RESULTS_REG, BIST_WRITEENABLE, BIST_READENABLE, 
        BIST_COL_ADD, BIST_ROW_ADD, BIST_WRITE_DATA, CHKBCI_PHASE, 
        BIST_TESTDATA_SELECT_TO_COLLAR, MEM_BYPASS_EN, SCAN_SHIFT_EN, 
        MCP_BOUNDING_EN, BIST_ON, BIST_RUN, BIST_ASYNC_RESETN, BIST_CLK, 
        BIST_SHIFT_COLLAR, BIST_EXPECT_DATA, BIST_SI, BIST_COLLAR_SETUP, 
        BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD, BIST_BIRA_EN, 
        CHECK_REPAIR_NEEDED, BIST_DIAG_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR, 
        BIST_SETUP2, BIST_SETUP1, BIST_SETUP0, LV_TM, FREEZE_STOP_ERROR, 
        BIST_COLLAR_EN, FROM_BISR_ALL_SROW0_FUSE_ADD_REG, 
        FROM_BISR_ALL_SROW0_ALLOC_REG, FROM_BISR_ALL_SROW1_FUSE_ADD_REG, 
        FROM_BISR_ALL_SROW1_ALLOC_REG, FROM_BISR_All_SCOL0_FUSE_REG, 
        FROM_BISR_All_SCOL0_ALLOC_REG, BIST_SHIFT_BIRA_COLLAR, 
        RESET_REG_SETUP2, ERROR_CNT_ZERO, wen, ren, adr, din, q, 
        SCAN_OBS_FLOPS, BIST_SO, BIST_GO, ALL_SROW0_FUSE_ADD_REG, 
        ALL_SROW0_ALLOC_REG, ALL_SROW1_FUSE_ADD_REG, ALL_SROW1_ALLOC_REG, 
        All_SCOL0_FUSE_REG, All_SCOL0_ALLOC_REG, REPAIR_STATUS );
  input [9:0] adr_IN;
  input [21:0] din_IN;
  input [21:0] q_IN;
  input [2:0] BIST_COL_ADD;
  input [6:0] BIST_ROW_ADD;
  input [3:0] BIST_WRITE_DATA;
  input [3:0] BIST_EXPECT_DATA;
  input [6:0] FROM_BISR_ALL_SROW0_FUSE_ADD_REG;
  input [6:0] FROM_BISR_ALL_SROW1_FUSE_ADD_REG;
  input [4:0] FROM_BISR_All_SCOL0_FUSE_REG;
  output [9:0] adr;
  output [21:0] din;
  output [21:0] q;
  output [3:0] SCAN_OBS_FLOPS;
  output [6:0] ALL_SROW0_FUSE_ADD_REG;
  output [6:0] ALL_SROW1_FUSE_ADD_REG;
  output [4:0] All_SCOL0_FUSE_REG;
  output [1:0] REPAIR_STATUS;
  input PriorityColumn, BIST_CLEAR_BIRA, wen_IN, ren_IN, TCK, BIST_CMP,
         INCLUDE_MEM_RESULTS_REG, BIST_WRITEENABLE, BIST_READENABLE,
         CHKBCI_PHASE, BIST_TESTDATA_SELECT_TO_COLLAR, MEM_BYPASS_EN,
         SCAN_SHIFT_EN, MCP_BOUNDING_EN, BIST_ON, BIST_RUN, BIST_ASYNC_RESETN,
         BIST_CLK, BIST_SHIFT_COLLAR, BIST_SI, BIST_COLLAR_SETUP,
         BIST_COLLAR_OPSET_SELECT, BIST_COLLAR_HOLD, BIST_BIRA_EN,
         CHECK_REPAIR_NEEDED, BIST_DIAG_EN, BIST_CLEAR_DEFAULT, BIST_CLEAR,
         BIST_SETUP2, BIST_SETUP1, BIST_SETUP0, LV_TM, FREEZE_STOP_ERROR,
         BIST_COLLAR_EN, FROM_BISR_ALL_SROW0_ALLOC_REG,
         FROM_BISR_ALL_SROW1_ALLOC_REG, FROM_BISR_All_SCOL0_ALLOC_REG,
         BIST_SHIFT_BIRA_COLLAR, RESET_REG_SETUP2, ERROR_CNT_ZERO;
  output wen, ren, BIST_SO, BIST_GO, ALL_SROW0_ALLOC_REG, ALL_SROW1_ALLOC_REG,
         All_SCOL0_ALLOC_REG;
  wire   N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17, N18, N19, N20, N21, N32, net143817, BIST_ROW_ADD_R1_6_,
         BIST_ROW_ADD_R1_5_, BIST_ROW_ADD_R1_4_, BIST_ROW_ADD_R1_3_,
         BIST_ROW_ADD_R1_2_, BIST_ROW_ADD_R1_1_, BIST_ROW_ADD_R1_0_,
         BIST_ROW_ADD_R2_6_, BIST_ROW_ADD_R2_5_, BIST_ROW_ADD_R2_4_,
         BIST_ROW_ADD_R2_3_, BIST_ROW_ADD_R2_2_, BIST_ROW_ADD_R2_1_,
         BIST_ROW_ADD_R2_0_, BIST_ROW_ADD_R3_6_, BIST_ROW_ADD_R3_5_,
         BIST_ROW_ADD_R3_4_, BIST_ROW_ADD_R3_3_, BIST_ROW_ADD_R3_2_,
         BIST_ROW_ADD_R3_1_, BIST_ROW_ADD_R3_0_, BIST_ROW_ADD_R4_6_,
         BIST_ROW_ADD_R4_5_, BIST_ROW_ADD_R4_4_, BIST_ROW_ADD_R4_3_,
         BIST_ROW_ADD_R4_2_, BIST_ROW_ADD_R4_1_, BIST_ROW_ADD_R4_0_,
         BIST_CLK_INT, BIST_INPUT_SELECT, n_856_net_0, BIST_COLLAR_HOLD_INT,
         wen_NOT_GATED, ren_NOT_GATED, N39, N40, N41, N42,
         BIST_WRITE_DATA_INT_9_, BIST_WRITE_DATA_INT_8_,
         BIST_WRITE_DATA_INT_7_, BIST_WRITE_DATA_INT_6_, wen_TEST_IN,
         ren_TEST_IN, q_FROM_BYPASS_21_, q_FROM_BYPASS_20_, q_FROM_BYPASS_19_,
         q_FROM_BYPASS_18_, q_FROM_BYPASS_17_, q_FROM_BYPASS_16_,
         q_FROM_BYPASS_15_, q_FROM_BYPASS_14_, q_FROM_BYPASS_13_,
         q_FROM_BYPASS_12_, q_FROM_BYPASS_11_, q_FROM_BYPASS_10_,
         q_FROM_BYPASS_9_, q_FROM_BYPASS_8_, q_FROM_BYPASS_7_,
         q_FROM_BYPASS_6_, q_FROM_BYPASS_5_, q_FROM_BYPASS_4_,
         q_FROM_BYPASS_3_, q_FROM_BYPASS_2_, q_FROM_BYPASS_1_,
         q_FROM_BYPASS_0_, N46, N47, N48, N49, N50, N51, N52, N53, N54, N55,
         N56, N57, N58, N59, N60, N61, N62, N63, N64, N65, N66, N67,
         BIST_COLLAR_EN_PIPE_0, EDATA_CKB_EN_PIPE_0, EDATA_COL_ADD_BIT0_PIPE_0,
         BIST_ROW_ADD_PIPE_0_6_, BIST_ROW_ADD_PIPE_0_5_,
         BIST_ROW_ADD_PIPE_0_4_, BIST_ROW_ADD_PIPE_0_3_,
         BIST_ROW_ADD_PIPE_0_2_, BIST_ROW_ADD_PIPE_0_1_,
         BIST_ROW_ADD_PIPE_0_0_, FREEZE_STOP_ERROR_EARLY_R, FREEZE_GO_ID,
         ERROR_0_, GO_EN, FREEZE_STOP_ERROR_CLEAR, BIST_CLK_OR_TCK,
         MultiBitError_R_0_, ERROR_R_A_0_, IOIndex0_R_4_, IOIndex0_R_3_,
         IOIndex0_R_2_, IOIndex0_R_1_, IOIndex0_R_0_, BIST_GO_FROM_STATUS,
         COLLAR_STATUS_SO, RepairedBySpareRow, RepairableBySpareRow,
         ErrorGlobal, RepairedBySpareColumn, RepairableBySpareColumn,
         COL_BIRA_SO, ROW_BIRA_SO, REPAIR_STATUS_SHADOW_1_,
         REPAIR_STATUS_SHADOW_0_, BIST_CLK_EN, INJECT_TCK, n110, n300, n28,
         n29, n301, n31, n390, n420, n43, n179, n460, n630, n72, n81, n90, n99,
         n108, n117, n120, n123, n126, n181, n183, n184, n185, n186, n187,
         n220, n440, n510, n680, n700, n800, n91, n100, n111, n121, n130, n140,
         n150, n160, n170, n180, n190, n200, n210, n221, n23, n24, n25, n26,
         n27, n320, n33, n34, n35, n36, n37, n38, n400, n410, n441, n45, n470,
         n480, n490, n500, n511, n520, n530, n540, n550, n560, n570, n580,
         n590, n600, n610, n620, n640, n650, n660, n670, n681, n69, n701, n71,
         n73, n74, n75, n76, n77, n78, n79, n801, n82, SYNOPSYS_UNCONNECTED_1,
         SYNOPSYS_UNCONNECTED_2, SYNOPSYS_UNCONNECTED_3,
         SYNOPSYS_UNCONNECTED_4, SYNOPSYS_UNCONNECTED_5,
         SYNOPSYS_UNCONNECTED_6, SYNOPSYS_UNCONNECTED_7,
         SYNOPSYS_UNCONNECTED_8, SYNOPSYS_UNCONNECTED_9,
         SYNOPSYS_UNCONNECTED_10, SYNOPSYS_UNCONNECTED_11,
         SYNOPSYS_UNCONNECTED_12, SYNOPSYS_UNCONNECTED_13,
         SYNOPSYS_UNCONNECTED_14, SYNOPSYS_UNCONNECTED_15,
         SYNOPSYS_UNCONNECTED_16, SYNOPSYS_UNCONNECTED_17,
         SYNOPSYS_UNCONNECTED_18, SYNOPSYS_UNCONNECTED_19,
         SYNOPSYS_UNCONNECTED_20, SYNOPSYS_UNCONNECTED_21,
         SYNOPSYS_UNCONNECTED_22, SYNOPSYS_UNCONNECTED_23,
         SYNOPSYS_UNCONNECTED_24, SYNOPSYS_UNCONNECTED_25,
         SYNOPSYS_UNCONNECTED_26, SYNOPSYS_UNCONNECTED_27,
         SYNOPSYS_UNCONNECTED_28, SYNOPSYS_UNCONNECTED_29,
         SYNOPSYS_UNCONNECTED_30, SYNOPSYS_UNCONNECTED_31,
         SYNOPSYS_UNCONNECTED_32, SYNOPSYS_UNCONNECTED_33,
         SYNOPSYS_UNCONNECTED_34, SYNOPSYS_UNCONNECTED_35,
         SYNOPSYS_UNCONNECTED_36, SYNOPSYS_UNCONNECTED_37,
         SYNOPSYS_UNCONNECTED_38, SYNOPSYS_UNCONNECTED_39,
         SYNOPSYS_UNCONNECTED_40, SYNOPSYS_UNCONNECTED_41,
         SYNOPSYS_UNCONNECTED_42, SYNOPSYS_UNCONNECTED_43,
         SYNOPSYS_UNCONNECTED_44, SYNOPSYS_UNCONNECTED_45,
         SYNOPSYS_UNCONNECTED_46, SYNOPSYS_UNCONNECTED_47,
         SYNOPSYS_UNCONNECTED_48, SYNOPSYS_UNCONNECTED_49,
         SYNOPSYS_UNCONNECTED_50, SYNOPSYS_UNCONNECTED_51,
         SYNOPSYS_UNCONNECTED_52, SYNOPSYS_UNCONNECTED_53,
         SYNOPSYS_UNCONNECTED_54, SYNOPSYS_UNCONNECTED_55,
         SYNOPSYS_UNCONNECTED_56, SYNOPSYS_UNCONNECTED_57,
         SYNOPSYS_UNCONNECTED_58, SYNOPSYS_UNCONNECTED_59,
         SYNOPSYS_UNCONNECTED_60, SYNOPSYS_UNCONNECTED_61,
         SYNOPSYS_UNCONNECTED_62, SYNOPSYS_UNCONNECTED_63,
         SYNOPSYS_UNCONNECTED_64, SYNOPSYS_UNCONNECTED_65;

  i0sand002ab1n02x5 tessent_persistent_cell_AND_BIST_SETUP0_SYNC ( .a(
        BIST_SETUP0), .b(BIST_ON), .o(SYNOPSYS_UNCONNECTED_1) );
  i0sbfn000ab1n02x5 tessent_persistent_cell_BIST_INPUT_SELECT_INT ( .a(
        n_856_net_0), .o(N32) );
  i0scilb01ab1n02x5 tessent_persistent_cell_GATING_BIST_CLK ( .clk(BIST_CLK), 
        .en(BIST_CLK_EN), .te(net143817), .clkout(BIST_CLK_INT) );
  i0scmbn22ab1n02x5 tessent_persistent_cell_BIST_CLK_OR_TCK ( .clk2(
        BIST_CLK_INT), .clk1(TCK), .s(INJECT_TCK), .clkout(BIST_CLK_OR_TCK) );
  i0sfvz003ab1d03x6 BIST_INPUT_SELECT_reg ( .si(net143817), .d(n181), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_INPUT_SELECT), .so(
        SYNOPSYS_UNCONNECTED_2) );
  i0sfvz003ab1d03x6 SCAN_OBS_FLOPS_reg_3 ( .si(net143817), .d(N39), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(SCAN_OBS_FLOPS[3]), .so(
        SYNOPSYS_UNCONNECTED_3) );
  i0sfvz003ab1d03x6 SCAN_OBS_FLOPS_reg_2 ( .si(net143817), .d(N40), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(SCAN_OBS_FLOPS[2]), .so(
        SYNOPSYS_UNCONNECTED_4) );
  i0sfvz003ab1d03x6 SCAN_OBS_FLOPS_reg_1 ( .si(net143817), .d(N41), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(SCAN_OBS_FLOPS[1]), .so(
        SYNOPSYS_UNCONNECTED_5) );
  i0sfvz003ab1d03x6 SCAN_OBS_FLOPS_reg_0 ( .si(net143817), .d(N42), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(SCAN_OBS_FLOPS[0]), .so(
        SYNOPSYS_UNCONNECTED_6) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_21 ( .si(net143817), .d(N46), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_21_), .so(
        SYNOPSYS_UNCONNECTED_7) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_20 ( .si(net143817), .d(N47), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_20_), .so(
        SYNOPSYS_UNCONNECTED_8) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_19 ( .si(net143817), .d(N48), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_19_), .so(
        SYNOPSYS_UNCONNECTED_9) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_18 ( .si(net143817), .d(N49), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_18_), .so(
        SYNOPSYS_UNCONNECTED_10) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_17 ( .si(net143817), .d(N50), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_17_), .so(
        SYNOPSYS_UNCONNECTED_11) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_16 ( .si(net143817), .d(N51), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_16_), .so(
        SYNOPSYS_UNCONNECTED_12) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_15 ( .si(net143817), .d(N52), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_15_), .so(
        SYNOPSYS_UNCONNECTED_13) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_14 ( .si(net143817), .d(N53), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_14_), .so(
        SYNOPSYS_UNCONNECTED_14) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_13 ( .si(net143817), .d(N54), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_13_), .so(
        SYNOPSYS_UNCONNECTED_15) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_12 ( .si(net143817), .d(N55), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_12_), .so(
        SYNOPSYS_UNCONNECTED_16) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_11 ( .si(net143817), .d(N56), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_11_), .so(
        SYNOPSYS_UNCONNECTED_17) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_10 ( .si(net143817), .d(N57), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_10_), .so(
        SYNOPSYS_UNCONNECTED_18) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_9 ( .si(net143817), .d(N58), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_9_), .so(
        SYNOPSYS_UNCONNECTED_19) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_8 ( .si(net143817), .d(N59), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_8_), .so(
        SYNOPSYS_UNCONNECTED_20) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_7 ( .si(net143817), .d(N60), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_7_), .so(
        SYNOPSYS_UNCONNECTED_21) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_6 ( .si(net143817), .d(N61), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_6_), .so(
        SYNOPSYS_UNCONNECTED_22) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_5 ( .si(net143817), .d(N62), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_5_), .so(
        SYNOPSYS_UNCONNECTED_23) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_4 ( .si(net143817), .d(N63), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_4_), .so(
        SYNOPSYS_UNCONNECTED_24) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_3 ( .si(net143817), .d(N64), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_3_), .so(
        SYNOPSYS_UNCONNECTED_25) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_2 ( .si(net143817), .d(N65), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_2_), .so(
        SYNOPSYS_UNCONNECTED_26) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_1 ( .si(net143817), .d(N66), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_1_), .so(
        SYNOPSYS_UNCONNECTED_27) );
  i0sfvz003ab1d03x6 q_SCAN_IN_reg_0 ( .si(net143817), .d(N67), .ssb(n179), 
        .clk(BIST_CLK_INT), .rb(n27), .o(q_FROM_BYPASS_0_), .so(
        SYNOPSYS_UNCONNECTED_28) );
  i0sfvz003ab1d03x6 BIST_COLLAR_EN_PIPE_0_reg ( .si(net143817), .d(n126), 
        .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_COLLAR_EN_PIPE_0), 
        .so(SYNOPSYS_UNCONNECTED_29) );
  i0sfvz003ab1d03x6 EDATA_CKB_EN_PIPE_0_reg ( .si(net143817), .d(n123), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(EDATA_CKB_EN_PIPE_0), .so(
        SYNOPSYS_UNCONNECTED_30) );
  i0sfvz003ab1d03x6 EDATA_COL_ADD_BIT0_PIPE_0_reg ( .si(net143817), .d(n120), 
        .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(EDATA_COL_ADD_BIT0_PIPE_0), .so(SYNOPSYS_UNCONNECTED_31) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_6 ( .si(net143817), .d(n117), 
        .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_6_), 
        .so(SYNOPSYS_UNCONNECTED_32) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_6 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_6_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_6_), .so(SYNOPSYS_UNCONNECTED_33) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_6 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_6_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_6_), .so(SYNOPSYS_UNCONNECTED_34) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_6 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_6_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_6_), .so(SYNOPSYS_UNCONNECTED_35) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_5 ( .si(net143817), .d(n108), 
        .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_5_), 
        .so(SYNOPSYS_UNCONNECTED_36) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_5 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_5_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_5_), .so(SYNOPSYS_UNCONNECTED_37) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_5 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_5_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_5_), .so(SYNOPSYS_UNCONNECTED_38) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_5 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_5_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_5_), .so(SYNOPSYS_UNCONNECTED_39) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_4 ( .si(net143817), .d(n99), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_4_), .so(
        SYNOPSYS_UNCONNECTED_40) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_4 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_4_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_4_), .so(SYNOPSYS_UNCONNECTED_41) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_4 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_4_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_4_), .so(SYNOPSYS_UNCONNECTED_42) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_4 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_4_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_4_), .so(SYNOPSYS_UNCONNECTED_43) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_3 ( .si(net143817), .d(n90), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_3_), .so(
        SYNOPSYS_UNCONNECTED_44) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_3 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_3_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_3_), .so(SYNOPSYS_UNCONNECTED_45) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_3 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_3_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_3_), .so(SYNOPSYS_UNCONNECTED_46) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_3 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_3_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_3_), .so(SYNOPSYS_UNCONNECTED_47) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_2 ( .si(net143817), .d(n81), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_2_), .so(
        SYNOPSYS_UNCONNECTED_48) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_2 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_2_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_2_), .so(SYNOPSYS_UNCONNECTED_49) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_2 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_2_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_2_), .so(SYNOPSYS_UNCONNECTED_50) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_2 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_2_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_2_), .so(SYNOPSYS_UNCONNECTED_51) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_1 ( .si(net143817), .d(n72), .ssb(
        n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_1_), .so(
        SYNOPSYS_UNCONNECTED_52) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_1 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_1_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_1_), .so(SYNOPSYS_UNCONNECTED_53) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_1 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_1_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_1_), .so(SYNOPSYS_UNCONNECTED_54) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_1 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_1_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_1_), .so(SYNOPSYS_UNCONNECTED_55) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_PIPE_0_reg_0 ( .si(net143817), .d(n630), 
        .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(BIST_ROW_ADD_PIPE_0_0_), 
        .so(SYNOPSYS_UNCONNECTED_56) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R2_reg_0 ( .si(net143817), .d(
        BIST_ROW_ADD_R1_0_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R2_0_), .so(SYNOPSYS_UNCONNECTED_57) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R3_reg_0 ( .si(net143817), .d(
        BIST_ROW_ADD_R2_0_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R3_0_), .so(SYNOPSYS_UNCONNECTED_58) );
  i0sfvz003ab1d03x6 BIST_ROW_ADD_R4_reg_0 ( .si(net143817), .d(
        BIST_ROW_ADD_R3_0_), .ssb(n179), .clk(BIST_CLK_INT), .rb(n27), .o(
        BIST_ROW_ADD_R4_0_), .so(SYNOPSYS_UNCONNECTED_59) );
  i0sfvz003ab1d03x6 REPAIR_STATUS_reg_1 ( .si(net143817), .d(n185), .ssb(n179), 
        .clk(BIST_CLK_OR_TCK), .rb(n27), .o(REPAIR_STATUS[1]), .so(
        SYNOPSYS_UNCONNECTED_60) );
  i0sfvz003ab1d03x6 FREEZE_STOP_ERROR_EARLY_R_reg ( .si(net143817), .d(n460), 
        .ssb(n179), .clk(BIST_CLK_OR_TCK), .rb(n27), .o(
        FREEZE_STOP_ERROR_EARLY_R), .so(SYNOPSYS_UNCONNECTED_61) );
  i0sxo2na2ab1n03x5 U101 ( .c(CHKBCI_PHASE), .a(BIST_WRITE_DATA[0]), .b(
        BIST_COL_ADD[0]), .out0(n390) );
  i0sao0022ab1n03x7 U105 ( .a(BIST_ROW_ADD[6]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_6_), .d(n210), .o(BIST_ROW_ADD_R1_6_) );
  i0sao0022ab1n03x7 U106 ( .a(BIST_ROW_ADD[5]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_5_), .d(n210), .o(BIST_ROW_ADD_R1_5_) );
  i0sao0022ab1n03x7 U107 ( .a(BIST_ROW_ADD[4]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_4_), .d(n210), .o(BIST_ROW_ADD_R1_4_) );
  i0sao0022ab1n03x7 U108 ( .a(BIST_ROW_ADD[3]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_3_), .d(n210), .o(BIST_ROW_ADD_R1_3_) );
  i0sao0022ab1n03x7 U109 ( .a(BIST_ROW_ADD[2]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_2_), .d(n210), .o(BIST_ROW_ADD_R1_2_) );
  i0sao0022ab1n03x7 U110 ( .a(BIST_ROW_ADD[1]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_1_), .d(n210), .o(BIST_ROW_ADD_R1_1_) );
  i0sao0022ab1n03x7 U111 ( .a(BIST_ROW_ADD[0]), .b(BIST_COLLAR_OPSET_SELECT), 
        .c(BIST_ROW_ADD_PIPE_0_0_), .d(n210), .o(BIST_ROW_ADD_R1_0_) );
  firebird7_in_gate1_tessent_mbist_c1_interface_m21_STATUS MBISTPG_STATUS ( 
        .BIST_CLEAR(n190), .FREEZE_STOP_ERROR_EARLY_R(
        FREEZE_STOP_ERROR_EARLY_R), .FREEZE_GO_ID(FREEZE_GO_ID), .CMP_EN(
        BIST_CMP), .BIST_ASYNC_RESETN(n27), .BIST_CLK(BIST_CLK_OR_TCK), 
        .BIST_COLLAR_SETUP(BIST_COLLAR_SETUP), .BIST_COLLAR_HOLD(
        BIST_COLLAR_HOLD_INT), .BIST_SHIFT_COLLAR(n221), .BIST_ON(BIST_ON), 
        .USE_DEFAULTS(net143817), .SI(REPAIR_STATUS_SHADOW_1_), .BIST_DIAG_EN(
        BIST_DIAG_EN), .BIST_BIRA_EN(n200), .RAW_CMP_STAT({N0, N1, N2, N3, N4, 
        N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18, N19, 
        N20, N21}), .MCP_BOUNDING_EN(n35), .INCLUDE_MEM_RESULTS_REG(n26), 
        .GO_EN(GO_EN), .ERROR(ERROR_0_), .ERROR_R(SYNOPSYS_UNCONNECTED_62), 
        .MultiBitError_R(MultiBitError_R_0_), .ERROR_R_A(ERROR_R_A_0_), 
        .IOIndex0_R({IOIndex0_R_4_, IOIndex0_R_3_, IOIndex0_R_2_, 
        IOIndex0_R_1_, IOIndex0_R_0_}), .SO(COLLAR_STATUS_SO), .BIST_GO(
        BIST_GO_FROM_STATUS) );
  firebird7_in_gate1_tessent_mbist_c1_interface_m21_ColumnRedundancyAnalysis MBIST_ColumnRedundancyAnalysis ( 
        .BIST_CLK(BIST_CLK_OR_TCK), .BIST_ASYNC_RESETN(n27), .BIST_HOLD(n33), 
        .BIST_SHIFT(n170), .MultiBitError_R(MultiBitError_R_0_), .IOIndex0({
        IOIndex0_R_4_, IOIndex0_R_3_, IOIndex0_R_2_, IOIndex0_R_1_, 
        IOIndex0_R_0_}), .CLEAR(n24), .BIST_BIRA_EN(n200), 
        .RepairedBySpareRow(RepairedBySpareRow), .RepairableBySpareRow(
        RepairableBySpareRow), .PriorityColumn(PriorityColumn), 
        .FROM_BISR_All_SCOL0_FUSE_REG(FROM_BISR_All_SCOL0_FUSE_REG), 
        .FROM_BISR_All_SCOL0_ALLOC_REG(FROM_BISR_All_SCOL0_ALLOC_REG), .ERROR(
        ERROR_R_A_0_), .LV_TM(LV_TM), .BIRA_SI(BIST_SI), .All_SCOL0_FUSE_REG(
        All_SCOL0_FUSE_REG), .All_SCOL0_ALLOC_REG(All_SCOL0_ALLOC_REG), 
        .BIRA_SO(COL_BIRA_SO), .ErrorGlobal(ErrorGlobal), 
        .RepairedBySpareColumn(RepairedBySpareColumn), 
        .RepairableBySpareColumn(RepairableBySpareColumn) );
  firebird7_in_gate1_tessent_mbist_c1_interface_m21_RowRedundancyAnalysis MBIST_RowRedundancyAnalysis_INST ( 
        .RepairedBySpareColumn(RepairedBySpareColumn), 
        .RepairableBySpareColumn(RepairableBySpareColumn), .PriorityColumn(
        PriorityColumn), .BIST_BIRA_EN(n200), .CLEAR(n24), .BIST_HOLD(n33), 
        .BIST_SHIFT(n170), .ErrorGlobal(ErrorGlobal), .BIST_CLK(
        BIST_CLK_OR_TCK), .FROM_BISR_ALL_SROW0_FUSE_ADD_REG(
        FROM_BISR_ALL_SROW0_FUSE_ADD_REG), .FROM_BISR_ALL_SROW0_ALLOC_REG(
        FROM_BISR_ALL_SROW0_ALLOC_REG), .FROM_BISR_ALL_SROW1_FUSE_ADD_REG(
        FROM_BISR_ALL_SROW1_FUSE_ADD_REG), .FROM_BISR_ALL_SROW1_ALLOC_REG(
        FROM_BISR_ALL_SROW1_ALLOC_REG), .LV_TM(LV_TM), .BIRA_SI(COL_BIRA_SO), 
        .BIST_ASYNC_RESETN(n27), .BIRA_FUSE_ADD_A({BIST_ROW_ADD_R3_6_, 
        BIST_ROW_ADD_R3_5_, BIST_ROW_ADD_R3_4_, BIST_ROW_ADD_R3_3_, 
        BIST_ROW_ADD_R3_2_, BIST_ROW_ADD_R3_1_, BIST_ROW_ADD_R3_0_}), 
        .BIRA_FUSE_ADD_B({BIST_ROW_ADD_R4_6_, BIST_ROW_ADD_R4_5_, 
        BIST_ROW_ADD_R4_4_, BIST_ROW_ADD_R4_3_, BIST_ROW_ADD_R4_2_, 
        BIST_ROW_ADD_R4_1_, BIST_ROW_ADD_R4_0_}), .ALL_SROW0_FUSE_ADD_REG(
        ALL_SROW0_FUSE_ADD_REG), .ALL_SROW0_ALLOC_REG(ALL_SROW0_ALLOC_REG), 
        .ALL_SROW1_FUSE_ADD_REG(ALL_SROW1_FUSE_ADD_REG), .ALL_SROW1_ALLOC_REG(
        ALL_SROW1_ALLOC_REG), .BIRA_SO(ROW_BIRA_SO), .RepairedBySpareRow(
        RepairedBySpareRow), .RepairableBySpareRow(RepairableBySpareRow) );
  i0snorb02ab1n02x5 U206 ( .a(BIST_COLLAR_EN), .b(n190), .out0(n126) );
  i0snorb02ab1n02x5 U203 ( .a(CHKBCI_PHASE), .b(n190), .out0(n123) );
  i0snorb02ab1n02x5 U200 ( .a(BIST_COL_ADD[0]), .b(n190), .out0(n120) );
  i0snorb02ab1n02x5 U197 ( .a(BIST_ROW_ADD[6]), .b(n190), .out0(n117) );
  i0snorb02ab1n02x5 U188 ( .a(BIST_ROW_ADD[5]), .b(n190), .out0(n108) );
  i0snorb02ab1n02x5 U179 ( .a(BIST_ROW_ADD[4]), .b(n190), .out0(n99) );
  i0snorb02ab1n02x5 U170 ( .a(BIST_ROW_ADD[3]), .b(n190), .out0(n90) );
  i0snorb02ab1n02x5 U161 ( .a(BIST_ROW_ADD[2]), .b(n190), .out0(n81) );
  i0snorb02ab1n02x5 U152 ( .a(BIST_ROW_ADD[1]), .b(n190), .out0(n72) );
  i0snorb02ab1n02x5 U143 ( .a(BIST_ROW_ADD[0]), .b(n190), .out0(n630) );
  i0sfvz003ab1d18x5 REPAIR_STATUS_reg_0 ( .si(net143817), .d(n184), .ssb(n179), 
        .clk(BIST_CLK_OR_TCK), .rb(n27), .o(REPAIR_STATUS[0]), .so(
        SYNOPSYS_UNCONNECTED_63) );
  i0sfvz003ab1d02x6 REPAIR_STATUS_SHADOW_reg_1 ( .si(net143817), .d(n186), 
        .ssb(n179), .clk(BIST_CLK_OR_TCK), .rb(n27), .o(
        REPAIR_STATUS_SHADOW_1_), .so(SYNOPSYS_UNCONNECTED_64) );
  i0sfvz003ab1d02x6 REPAIR_STATUS_SHADOW_reg_0 ( .si(net143817), .d(n187), 
        .ssb(n179), .clk(BIST_CLK_OR_TCK), .rb(n27), .o(
        REPAIR_STATUS_SHADOW_0_), .so(SYNOPSYS_UNCONNECTED_65) );
  i0snorb02ab1n03x4 U126 ( .a(n183), .b(FREEZE_STOP_ERROR_CLEAR), .out0(n460)
         );
  i0sinv030ab1n04x5 U3 ( .a(BIST_EXPECT_DATA[2]), .o1(n140) );
  i0sinv020ab1n02x5 U4 ( .a(n150), .o1(n160) );
  i0sbff000ab1n06x5 U5 ( .a(BIST_EXPECT_DATA[0]), .o(n150) );
  i0saob012ab1n06x5 U6 ( .b(n140), .c(n400), .a(n470), .out0(n490) );
  i0sxnr002ab1n03x5 U7 ( .a(q[19]), .b(n500), .out0(N2) );
  i0soai012ab1n06x5 U8 ( .b(BIST_EXPECT_DATA[3]), .c(n480), .a(n470), .o1(n500) );
  i0sinv000ab1n02x5 U9 ( .a(REPAIR_STATUS_SHADOW_0_), .o1(n580) );
  i0sbff000ab1n02x5 U10 ( .a(INCLUDE_MEM_RESULTS_REG), .o(n26) );
  i0soai013ab1n03x4 U11 ( .b(n74), .c(n75), .d(n73), .a(n71), .o1(n183) );
  i0sinv020ab1n04x5 U12 ( .a(n441), .o1(n511) );
  i0snanb04ab1n02x5 U13 ( .a(n701), .b(BIST_CMP), .c(n23), .d(n79), .out0(
        FREEZE_GO_ID) );
  i0soai012ab1n06x5 U14 ( .b(BIST_EXPECT_DATA[1]), .c(n480), .a(n470), .o1(
        n520) );
  i0sinv020ab1n04x5 U15 ( .a(n25), .o1(n24) );
  i0sinv030ab1n06x5 U16 ( .a(n34), .o1(n33) );
  i0sinv040ab1n03x5 U17 ( .a(n400), .o1(n480) );
  i0snanp03ab1n02x5 U18 ( .a(GO_EN), .b(n25), .c(n440), .o1(n660) );
  i0smdn022ab1n03x4 U19 ( .b(n78), .a(n79), .sa(n220), .o1(BIST_SO) );
  i0sinv000ab1n03x5 U20 ( .a(REPAIR_STATUS_SHADOW_1_), .o1(n681) );
  i0snand43ab1n02x5 U21 ( .a(n650), .b(n640), .c(n620), .o1(n185) );
  i0snand43ab1n02x5 U22 ( .a(n550), .b(n540), .c(n530), .o1(n184) );
  i0sinv000ab1n03x5 U23 ( .a(n77), .o1(n220) );
  i0sinv000ab1n02x5 U24 ( .a(FREEZE_STOP_ERROR_EARLY_R), .o1(n79) );
  i0snorp02ab1n02x5 U25 ( .a(n33), .b(n221), .o1(n440) );
  i0sinv000ab1n02x5 U26 ( .a(BIST_SHIFT_COLLAR), .o1(n23) );
  i0sinv000ab1n02x5 U27 ( .a(BIST_SHIFT_BIRA_COLLAR), .o1(n180) );
  i0sinv000ab1n02x5 U28 ( .a(BIST_CLEAR_BIRA), .o1(n25) );
  i0sbff000ab1n04x5 U29 ( .a(BIST_BIRA_EN), .o(n200) );
  i0saoi012ab1n02x5 U30 ( .b(n23), .c(n180), .a(LV_TM), .o1(INJECT_TCK) );
  i0snanp03ab1n02x5 U31 ( .a(n43), .b(n510), .c(n801), .o1(BIST_CLK_EN) );
  i0snanb03ab1n02x5 U32 ( .a(n24), .b(ROW_BIRA_SO), .c(n170), .out0(n530) );
  i0snanb04ab1n02x5 U33 ( .a(n610), .b(ErrorGlobal), .c(n200), .d(n590), 
        .out0(n550) );
  i0snanb03ab1n02x5 U34 ( .a(n24), .b(REPAIR_STATUS[0]), .c(n170), .out0(n620)
         );
  i0snanb03ab1n02x5 U35 ( .a(n610), .b(n600), .c(ErrorGlobal), .out0(n650) );
  i0soai222ab1n02x5 U36 ( .a(n580), .b(n69), .c(n24), .d(n570), .e(n660), .f(
        n560), .o1(n187) );
  i0snanp02ab1n02x5 U37 ( .a(BIST_SI), .b(n221), .o1(n570) );
  i0soai222ab1n02x5 U38 ( .a(n69), .b(n681), .c(n24), .d(n670), .e(n660), .f(
        n78), .o1(n186) );
  i0snanp02ab1n02x5 U39 ( .a(REPAIR_STATUS_SHADOW_0_), .b(n221), .o1(n670) );
  i0snorp02ab1n02x5 U40 ( .a(GO_EN), .b(n75), .o1(FREEZE_STOP_ERROR_CLEAR) );
  i0snanb02ab1n02x5 U41 ( .a(FREEZE_STOP_ERROR), .b(n440), .out0(n75) );
  i0sorn002ab1n02x5 U42 ( .a(RepairableBySpareRow), .b(RepairableBySpareColumn), .o(n590) );
  i0sbff000ab1n02x5 U43 ( .a(n111), .o(n130) );
  i0sbff000ab1n02x5 U44 ( .a(n111), .o(n121) );
  i0sinv000ab1n03x5 U45 ( .a(n23), .o1(n221) );
  i0sinv000ab1n03x5 U46 ( .a(n180), .o1(n170) );
  i0snorp02ab1n02x5 U47 ( .a(n170), .b(n24), .o1(n510) );
  i0sinv000ab1n03x5 U48 ( .a(BIST_COLLAR_OPSET_SELECT), .o1(n210) );
  i0sbff000ab1n02x5 U49 ( .a(n37), .o(n111) );
  i0sinv000ab1n03x5 U50 ( .a(BIST_COLLAR_HOLD), .o1(n34) );
  i0sinv000ab1n03x5 U51 ( .a(n38), .o1(n37) );
  i0sinv000ab1n09x5 U52 ( .a(n320), .o1(n27) );
  i0sinv000ab1n03x5 U53 ( .a(BIST_ASYNC_RESETN), .o1(n320) );
  i0sinv000ab1n03x5 U54 ( .a(n36), .o1(n38) );
  i0sbff000ab1n02x5 U55 ( .a(BIST_CLEAR), .o(n190) );
  i0soaib12ab1n03x5 U56 ( .c(BIST_WRITE_DATA[0]), .b(CHKBCI_PHASE), .a(n390), 
        .out0(BIST_WRITE_DATA_INT_8_) );
  i0soaib12ab1n03x5 U57 ( .c(BIST_WRITE_DATA[1]), .b(CHKBCI_PHASE), .a(n390), 
        .out0(BIST_WRITE_DATA_INT_9_) );
  i0soaib12ab1n03x5 U58 ( .c(BIST_WRITE_DATA[2]), .b(CHKBCI_PHASE), .a(n390), 
        .out0(BIST_WRITE_DATA_INT_6_) );
  i0soaib12ab1n03x5 U59 ( .c(BIST_WRITE_DATA[3]), .b(CHKBCI_PHASE), .a(n390), 
        .out0(BIST_WRITE_DATA_INT_7_) );
  i0sbff000ab1n02x5 U60 ( .a(MEM_BYPASS_EN), .o(n36) );
  i0sbff000ab1n02x5 U61 ( .a(MCP_BOUNDING_EN), .o(n35) );
  i0sinv000ab1n03x5 U62 ( .a(ERROR_0_), .o1(n73) );
  i0sbff000ab1n02x5 U63 ( .a(n700), .o(n800) );
  i0sbff000ab1n02x5 U64 ( .a(n700), .o(n91) );
  i0soai012ab1n03x5 U65 ( .b(SCAN_SHIFT_EN), .c(n37), .a(LV_TM), .o1(n110) );
  i0sxnr002ab1n03x5 U66 ( .a(q[21]), .b(n520), .out0(N0) );
  i0sxnr002ab1n03x5 U67 ( .a(q[17]), .b(n520), .out0(N4) );
  i0sxnr002ab1n03x5 U68 ( .a(q[13]), .b(n520), .out0(N8) );
  i0sxnr002ab1n03x5 U69 ( .a(q[9]), .b(n520), .out0(N12) );
  i0sxnr002ab1n03x5 U70 ( .a(q[5]), .b(n520), .out0(N16) );
  i0sxnr002ab1n03x5 U71 ( .a(q[1]), .b(n520), .out0(N20) );
  i0sxnr002ab1n03x5 U72 ( .a(q[15]), .b(n500), .out0(N6) );
  i0sxnr002ab1n03x5 U73 ( .a(q[11]), .b(n500), .out0(N10) );
  i0sxnr002ab1n03x5 U74 ( .a(q[7]), .b(n500), .out0(N14) );
  i0sxnr002ab1n03x5 U75 ( .a(q[3]), .b(n500), .out0(N18) );
  i0sxnr002ab1n03x5 U76 ( .a(q[18]), .b(n490), .out0(N3) );
  i0sxnr002ab1n03x5 U77 ( .a(q[14]), .b(n490), .out0(N7) );
  i0sxnr002ab1n03x5 U78 ( .a(q[10]), .b(n490), .out0(N11) );
  i0sxnr002ab1n03x5 U79 ( .a(q[6]), .b(n490), .out0(N15) );
  i0sxnr002ab1n03x5 U80 ( .a(q[2]), .b(n490), .out0(N19) );
  i0sxor002ab1n03x5 U81 ( .a(q[20]), .b(n511), .out0(N1) );
  i0sxor002ab1n03x5 U82 ( .a(q[16]), .b(n511), .out0(N5) );
  i0sxor002ab1n03x5 U83 ( .a(q[12]), .b(n511), .out0(N9) );
  i0sxor002ab1n03x5 U84 ( .a(q[8]), .b(n511), .out0(N13) );
  i0sxor002ab1n03x5 U85 ( .a(q[4]), .b(n511), .out0(N17) );
  i0sxor002ab1n03x5 U86 ( .a(q[0]), .b(n511), .out0(N21) );
  i0sinv000ab1n03x5 U87 ( .a(n45), .o1(n410) );
  i0snanp03ab1n02x5 U88 ( .a(n23), .b(n25), .c(n660), .o1(n69) );
  i0snorb03ab1n03x4 U89 ( .a(BIST_SETUP2), .b(BIST_SETUP1), .c(BIST_SETUP0), 
        .out0(n77) );
  i0snorp02ab1n02x5 U90 ( .a(n190), .b(n420), .o1(n801) );
  i0snorp04ab1n02x5 U91 ( .a(RESET_REG_SETUP2), .b(BIST_RUN), .c(
        BIST_COLLAR_SETUP), .d(BIST_CLEAR_DEFAULT), .o1(n43) );
  i0sxnr002ab1n03x5 U92 ( .a(BIST_TESTDATA_SELECT_TO_COLLAR), .b(n82), .out0(
        n420) );
  i0sobai22ab1n02x5 U93 ( .a(n35), .b(n82), .c(n35), .d(n300), .out0(n181) );
  i0snorp02ab1n03x5 U94 ( .a(BIST_RUN), .b(BIST_TESTDATA_SELECT_TO_COLLAR), 
        .o1(n300) );
  i0saoi012ab1n03x5 U95 ( .b(LV_TM), .c(n38), .a(n82), .o1(n_856_net_0) );
  i0sbff000ab1n02x5 U96 ( .a(N32), .o(n700) );
  i0sbff000ab1n02x5 U97 ( .a(n680), .o(n100) );
  i0sbff000ab1n02x5 U98 ( .a(N32), .o(n680) );
  i0sand002ab1n03x5 U99 ( .a(n110), .b(ren_NOT_GATED), .o(ren) );
  i0sand002ab1n03x5 U100 ( .a(n110), .b(wen_NOT_GATED), .o(wen) );
  i0sinv000ab1n03x5 U102 ( .a(REPAIR_STATUS[0]), .o1(n560) );
  i0snanp03ab1n02x5 U103 ( .a(GO_EN), .b(n510), .c(n34), .o1(n610) );
  i0snanp02ab1n02x5 U104 ( .a(REPAIR_STATUS[0]), .b(n510), .o1(n540) );
  i0snanp02ab1n02x5 U112 ( .a(REPAIR_STATUS[1]), .b(n510), .o1(n640) );
  i0sinv000ab1n03x5 U113 ( .a(REPAIR_STATUS[1]), .o1(n78) );
  i0soai013ab1n02x4 U114 ( .b(n590), .c(RepairedBySpareRow), .d(
        RepairedBySpareColumn), .a(n200), .o1(n600) );
  i0snanp03ab1n02x5 U115 ( .a(ERROR_CNT_ZERO), .b(BIST_ON), .c(GO_EN), .o1(n74) );
  i0snorb02ab1n03x4 U116 ( .a(din[0]), .b(n38), .out0(N67) );
  i0snorb02ab1n03x4 U117 ( .a(din[1]), .b(n38), .out0(N66) );
  i0snorb02ab1n03x4 U118 ( .a(din[4]), .b(n38), .out0(N63) );
  i0snorb02ab1n03x4 U119 ( .a(din[5]), .b(n38), .out0(N62) );
  i0snorb02ab1n03x4 U120 ( .a(din[8]), .b(n38), .out0(N59) );
  i0snorb02ab1n03x4 U121 ( .a(din[9]), .b(n38), .out0(N58) );
  i0snorb02ab1n03x4 U122 ( .a(din[12]), .b(n38), .out0(N55) );
  i0snorb02ab1n03x4 U123 ( .a(din[13]), .b(n38), .out0(N54) );
  i0snorb02ab1n03x4 U124 ( .a(din[21]), .b(n38), .out0(N46) );
  i0smbn022ab1n03x5 U125 ( .b(din_IN[0]), .a(BIST_WRITE_DATA_INT_8_), .sa(n100), .o(din[0]) );
  i0smbn022ab1n03x5 U127 ( .b(din_IN[1]), .a(BIST_WRITE_DATA_INT_9_), .sa(n100), .o(din[1]) );
  i0smbn022ab1n03x5 U128 ( .b(din_IN[4]), .a(BIST_WRITE_DATA_INT_8_), .sa(n100), .o(din[4]) );
  i0smbn022ab1n03x5 U129 ( .b(din_IN[5]), .a(BIST_WRITE_DATA_INT_9_), .sa(n100), .o(din[5]) );
  i0smbn022ab1n03x5 U130 ( .b(din_IN[8]), .a(BIST_WRITE_DATA_INT_8_), .sa(n100), .o(din[8]) );
  i0smbn022ab1n03x5 U131 ( .b(din_IN[9]), .a(BIST_WRITE_DATA_INT_9_), .sa(n100), .o(din[9]) );
  i0smbn022ab1n03x5 U132 ( .b(din_IN[12]), .a(BIST_WRITE_DATA_INT_8_), .sa(n91), .o(din[12]) );
  i0smbn022ab1n03x5 U133 ( .b(din_IN[13]), .a(BIST_WRITE_DATA_INT_9_), .sa(n91), .o(din[13]) );
  i0smbn022ab1n03x5 U134 ( .b(din_IN[21]), .a(BIST_WRITE_DATA_INT_9_), .sa(n91), .o(din[21]) );
  i0smbn022ab1n03x5 U135 ( .b(din_IN[16]), .a(BIST_WRITE_DATA_INT_8_), .sa(n91), .o(din[16]) );
  i0smbn022ab1n03x5 U136 ( .b(din_IN[17]), .a(BIST_WRITE_DATA_INT_9_), .sa(n91), .o(din[17]) );
  i0smbn022ab1n03x5 U137 ( .b(din_IN[20]), .a(BIST_WRITE_DATA_INT_8_), .sa(n91), .o(din[20]) );
  i0snorb02ab1n03x4 U138 ( .a(din[16]), .b(n38), .out0(N51) );
  i0snorb02ab1n03x4 U139 ( .a(din[17]), .b(n38), .out0(N50) );
  i0snorb02ab1n03x4 U140 ( .a(din[20]), .b(n38), .out0(N47) );
  i0snorb02ab1n03x4 U141 ( .a(din[2]), .b(n38), .out0(N65) );
  i0snorb02ab1n03x4 U142 ( .a(din[3]), .b(n38), .out0(N64) );
  i0snorb02ab1n03x4 U144 ( .a(din[6]), .b(n38), .out0(N61) );
  i0snorb02ab1n03x4 U145 ( .a(din[7]), .b(n38), .out0(N60) );
  i0snorb02ab1n03x4 U146 ( .a(din[10]), .b(n38), .out0(N57) );
  i0snorb02ab1n03x4 U147 ( .a(din[11]), .b(n38), .out0(N56) );
  i0snorb02ab1n03x4 U148 ( .a(din[14]), .b(n38), .out0(N53) );
  i0snorb02ab1n03x4 U149 ( .a(din[15]), .b(n38), .out0(N52) );
  i0smbn022ab1n03x5 U150 ( .b(din_IN[2]), .a(BIST_WRITE_DATA_INT_6_), .sa(n100), .o(din[2]) );
  i0smbn022ab1n03x5 U151 ( .b(din_IN[3]), .a(BIST_WRITE_DATA_INT_7_), .sa(n100), .o(din[3]) );
  i0smbn022ab1n03x5 U153 ( .b(din_IN[6]), .a(BIST_WRITE_DATA_INT_6_), .sa(n100), .o(din[6]) );
  i0smbn022ab1n03x5 U154 ( .b(din_IN[7]), .a(BIST_WRITE_DATA_INT_7_), .sa(n100), .o(din[7]) );
  i0smbn022ab1n03x5 U155 ( .b(din_IN[10]), .a(BIST_WRITE_DATA_INT_6_), .sa(
        n100), .o(din[10]) );
  i0smbn022ab1n03x5 U156 ( .b(din_IN[11]), .a(BIST_WRITE_DATA_INT_7_), .sa(
        n100), .o(din[11]) );
  i0smbn022ab1n03x5 U157 ( .b(din_IN[14]), .a(BIST_WRITE_DATA_INT_6_), .sa(n91), .o(din[14]) );
  i0smbn022ab1n03x5 U158 ( .b(din_IN[15]), .a(BIST_WRITE_DATA_INT_7_), .sa(n91), .o(din[15]) );
  i0smbn022ab1n03x5 U159 ( .b(din_IN[18]), .a(BIST_WRITE_DATA_INT_6_), .sa(n91), .o(din[18]) );
  i0smbn022ab1n03x5 U160 ( .b(din_IN[19]), .a(BIST_WRITE_DATA_INT_7_), .sa(n91), .o(din[19]) );
  i0snorb02ab1n03x4 U162 ( .a(din[18]), .b(n38), .out0(N49) );
  i0snorb02ab1n03x4 U163 ( .a(din[19]), .b(n38), .out0(N48) );
  i0smbn022ab1n03x5 U164 ( .b(ren_IN), .a(ren_TEST_IN), .sa(n800), .o(
        ren_NOT_GATED) );
  i0sand002ab1n03x5 U165 ( .a(BIST_READENABLE), .b(BIST_COLLAR_EN), .o(
        ren_TEST_IN) );
  i0sxo2no2ab1n03x5 U166 ( .c(n38), .a(n31), .b(adr[9]), .out0(N39) );
  i0sxnr002ab1n03x5 U167 ( .a(ren_NOT_GATED), .b(wen_NOT_GATED), .out0(n31) );
  i0smbn022ab1n03x5 U168 ( .b(wen_IN), .a(wen_TEST_IN), .sa(n800), .o(
        wen_NOT_GATED) );
  i0sand002ab1n03x5 U169 ( .a(BIST_WRITEENABLE), .b(BIST_COLLAR_EN), .o(
        wen_TEST_IN) );
  i0sxo2no2ab1n03x5 U171 ( .c(n38), .a(n29), .b(adr[3]), .out0(N41) );
  i0sxnr002ab1n03x5 U172 ( .a(adr[5]), .b(adr[4]), .out0(n29) );
  i0smbn022ab1n03x5 U173 ( .b(adr_IN[4]), .a(BIST_ROW_ADD[1]), .sa(n800), .o(
        adr[4]) );
  i0sxo2no2ab1n03x5 U174 ( .c(n38), .a(n301), .b(adr[6]), .out0(N40) );
  i0sxnr002ab1n03x5 U175 ( .a(adr[8]), .b(adr[7]), .out0(n301) );
  i0smbn022ab1n03x5 U176 ( .b(adr_IN[7]), .a(BIST_ROW_ADD[4]), .sa(n800), .o(
        adr[7]) );
  i0smbn022ab1n03x5 U177 ( .b(adr_IN[8]), .a(BIST_ROW_ADD[5]), .sa(n800), .o(
        adr[8]) );
  i0smbn022ab1n03x5 U178 ( .b(adr_IN[5]), .a(BIST_ROW_ADD[2]), .sa(n800), .o(
        adr[5]) );
  i0sxo2no2ab1n03x5 U180 ( .c(n38), .a(n28), .b(adr[0]), .out0(N42) );
  i0sxnr002ab1n03x5 U181 ( .a(adr[2]), .b(adr[1]), .out0(n28) );
  i0smbn022ab1n03x5 U182 ( .b(adr_IN[2]), .a(BIST_COL_ADD[2]), .sa(n800), .o(
        adr[2]) );
  i0smbn022ab1n03x5 U183 ( .b(adr_IN[1]), .a(BIST_COL_ADD[1]), .sa(n91), .o(
        adr[1]) );
  i0smbn022ab1n03x5 U184 ( .b(adr_IN[0]), .a(BIST_COL_ADD[0]), .sa(n91), .o(
        adr[0]) );
  i0smbn022ab1n03x5 U185 ( .b(adr_IN[3]), .a(BIST_ROW_ADD[0]), .sa(n800), .o(
        adr[3]) );
  i0smbn022ab1n03x5 U186 ( .b(adr_IN[6]), .a(BIST_ROW_ADD[3]), .sa(n800), .o(
        adr[6]) );
  i0smbn022ab1n03x5 U187 ( .b(adr_IN[9]), .a(BIST_ROW_ADD[6]), .sa(n800), .o(
        adr[9]) );
  i0smbn022ab1n03x5 U189 ( .b(q_IN[1]), .a(q_FROM_BYPASS_1_), .sa(n130), .o(
        q[1]) );
  i0smbn022ab1n03x5 U190 ( .b(q_IN[5]), .a(q_FROM_BYPASS_5_), .sa(n130), .o(
        q[5]) );
  i0smbn022ab1n03x5 U191 ( .b(q_IN[9]), .a(q_FROM_BYPASS_9_), .sa(n130), .o(
        q[9]) );
  i0smbn022ab1n03x5 U192 ( .b(q_IN[13]), .a(q_FROM_BYPASS_13_), .sa(n121), .o(
        q[13]) );
  i0smbn022ab1n03x5 U193 ( .b(q_IN[17]), .a(q_FROM_BYPASS_17_), .sa(n121), .o(
        q[17]) );
  i0smbn022ab1n03x5 U194 ( .b(q_IN[21]), .a(q_FROM_BYPASS_21_), .sa(n121), .o(
        q[21]) );
  i0smbn022ab1n03x5 U195 ( .b(q_IN[3]), .a(q_FROM_BYPASS_3_), .sa(n130), .o(
        q[3]) );
  i0smbn022ab1n03x5 U196 ( .b(q_IN[7]), .a(q_FROM_BYPASS_7_), .sa(n130), .o(
        q[7]) );
  i0smbn022ab1n03x5 U198 ( .b(q_IN[11]), .a(q_FROM_BYPASS_11_), .sa(n130), .o(
        q[11]) );
  i0smbn022ab1n03x5 U199 ( .b(q_IN[15]), .a(q_FROM_BYPASS_15_), .sa(n121), .o(
        q[15]) );
  i0smbn022ab1n03x5 U201 ( .b(q_IN[2]), .a(q_FROM_BYPASS_2_), .sa(n130), .o(
        q[2]) );
  i0smbn022ab1n03x5 U202 ( .b(q_IN[6]), .a(q_FROM_BYPASS_6_), .sa(n130), .o(
        q[6]) );
  i0smbn022ab1n03x5 U204 ( .b(q_IN[10]), .a(q_FROM_BYPASS_10_), .sa(n130), .o(
        q[10]) );
  i0smbn022ab1n03x5 U205 ( .b(q_IN[14]), .a(q_FROM_BYPASS_14_), .sa(n121), .o(
        q[14]) );
  i0smbn022ab1n03x5 U207 ( .b(q_IN[18]), .a(q_FROM_BYPASS_18_), .sa(n121), .o(
        q[18]) );
  i0smbn022ab1n03x5 U208 ( .b(q_IN[19]), .a(q_FROM_BYPASS_19_), .sa(n121), .o(
        q[19]) );
  i0smbn022ab1n03x5 U209 ( .b(q_IN[12]), .a(q_FROM_BYPASS_12_), .sa(n121), .o(
        q[12]) );
  i0smbn022ab1n03x5 U210 ( .b(q_IN[16]), .a(q_FROM_BYPASS_16_), .sa(n121), .o(
        q[16]) );
  i0smbn022ab1n03x5 U211 ( .b(q_IN[20]), .a(q_FROM_BYPASS_20_), .sa(n121), .o(
        q[20]) );
  i0smbn022ab1n03x5 U212 ( .b(q_IN[0]), .a(q_FROM_BYPASS_0_), .sa(n130), .o(
        q[0]) );
  i0smbn022ab1n03x5 U213 ( .b(q_IN[4]), .a(q_FROM_BYPASS_4_), .sa(n130), .o(
        q[4]) );
  i0smbn022ab1n03x5 U214 ( .b(q_IN[8]), .a(q_FROM_BYPASS_8_), .sa(n130), .o(
        q[8]) );
  i0sinv000ab1n03x5 U215 ( .a(BIST_INPUT_SELECT), .o1(n82) );
  i0stilo00ab1n02x5 U216 ( .o(net143817) );
  i0stihi00ab1n02x5 U217 ( .o(n179) );
  i0sxo2na2ab1n06x5 U218 ( .c(n480), .a(n45), .b(n150), .out0(n470) );
  i0smdn022ab1n03x4 U219 ( .b(EDATA_COL_ADD_BIT0_PIPE_0), .a(BIST_COL_ADD[0]), 
        .sa(BIST_COLLAR_OPSET_SELECT), .o1(n45) );
  i0smdn022ab1n03x4 U220 ( .b(EDATA_CKB_EN_PIPE_0), .a(CHKBCI_PHASE), .sa(
        BIST_COLLAR_OPSET_SELECT), .o1(n400) );
  i0sxorna2ab1n03x5 U221 ( .a(n160), .c(n410), .b(n480), .out0(n441) );
  i0sorn003ab1n03x7 U222 ( .a(FREEZE_STOP_ERROR), .b(n33), .c(
        FREEZE_STOP_ERROR_EARLY_R), .o(BIST_COLLAR_HOLD_INT) );
  i0smdn022ab1n03x4 U223 ( .b(BIST_COLLAR_EN_PIPE_0), .a(BIST_COLLAR_EN), .sa(
        BIST_COLLAR_OPSET_SELECT), .o1(n701) );
  i0smdn022ab1n03x4 U224 ( .b(FREEZE_STOP_ERROR_EARLY_R), .a(COLLAR_STATUS_SO), 
        .sa(n221), .o1(n71) );
  i0smdn022ab1n03x4 U225 ( .b(BIST_GO_FROM_STATUS), .a(n78), .sa(n200), .o1(
        n76) );
  i0smdn022ab1n03x4 U226 ( .b(n76), .a(REPAIR_STATUS[0]), .sa(
        CHECK_REPAIR_NEEDED), .o1(BIST_GO) );
endmodule

